!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,t){if(!w[e]||!b[e])return;for(var n in b[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(h[n]=t[n]);0==--v&&0===y&&S()}(e,n),t&&t(e,n)};var n,r=!0,i="c3d4830f903cfd33ff38",o=1e4,s={},a=[],c=[];function u(e){var t=_[e];if(!t)return O;var r=function(r){return t.hot.active?(_[r]?-1===_[r].parents.indexOf(e)&&_[r].parents.push(e):(a=[e],n=r),-1===t.children.indexOf(r)&&t.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+e),a=[]),O(r)},i=function(e){return{configurable:!0,enumerable:!0,get:function(){return O[e]},set:function(t){O[e]=t}}};for(var o in O)Object.prototype.hasOwnProperty.call(O,o)&&"e"!==o&&"t"!==o&&Object.defineProperty(r,o,i(o));return r.e=function(e){return"ready"===f&&d("prepare"),y++,O.e(e).then(t,function(e){throw t(),e});function t(){y--,"prepare"===f&&(g[e]||E(e),0===y&&0===v&&S())}},r.t=function(e,t){return 1&t&&(e=r(e)),O.t(e,-2&t)},r}var l=[],f="idle";function d(e){f=e;for(var t=0;t<l.length;t++)l[t].call(null,e)}var p,h,m,v=0,y=0,g={},b={},w={};function x(e){return+e+""===e?+e:e}function j(e){if("idle"!==f)throw new Error("check() is only allowed in idle status");return r=e,d("check"),function(e){return e=e||1e4,new Promise(function(t,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var r=new XMLHttpRequest,o=O.p+""+i+".hot-update.json";r.open("GET",o,!0),r.timeout=e,r.send(null)}catch(e){return n(e)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)n(new Error("Manifest request to "+o+" timed out."));else if(404===r.status)t();else if(200!==r.status&&304!==r.status)n(new Error("Manifest request to "+o+" failed."));else{try{var e=JSON.parse(r.responseText)}catch(e){return void n(e)}t(e)}}})}(o).then(function(e){if(!e)return d("idle"),null;b={},g={},w=e.c,m=e.h,d("prepare");var t=new Promise(function(e,t){p={resolve:e,reject:t}});h={};return E(0),"prepare"===f&&0===y&&0===v&&S(),t})}function E(e){w[e]?(b[e]=!0,v++,function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");n.charset="utf-8",n.src=O.p+""+e+"."+i+".hot-update.js",t.appendChild(n)}(e)):g[e]=!0}function S(){d("ready");var e=p;if(p=null,e)if(r)Promise.resolve().then(function(){return T(r)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var n in h)Object.prototype.hasOwnProperty.call(h,n)&&t.push(x(n));e.resolve(t)}}function T(t){if("ready"!==f)throw new Error("apply() is only allowed in ready status");var n,r,o,c,u;function l(e){for(var t=[e],n={},r=t.slice().map(function(e){return{chain:[e],id:e}});r.length>0;){var i=r.pop(),o=i.id,s=i.chain;if((c=_[o])&&!c.hot._selfAccepted){if(c.hot._selfDeclined)return{type:"self-declined",chain:s,moduleId:o};if(c.hot._main)return{type:"unaccepted",chain:s,moduleId:o};for(var a=0;a<c.parents.length;a++){var u=c.parents[a],l=_[u];if(l){if(l.hot._declinedDependencies[o])return{type:"declined",chain:s.concat([u]),moduleId:o,parentId:u};-1===t.indexOf(u)&&(l.hot._acceptedDependencies[o]?(n[u]||(n[u]=[]),p(n[u],[o])):(delete n[u],t.push(u),r.push({chain:s.concat([u]),id:u})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}t=t||{};var v={},y=[],g={},b=function(){console.warn("[HMR] unexpected require("+E.moduleId+") to disposed module")};for(var j in h)if(Object.prototype.hasOwnProperty.call(h,j)){var E;u=x(j);var S=!1,T=!1,P=!1,C="";switch((E=h[j]?l(u):{type:"disposed",moduleId:j}).chain&&(C="\nUpdate propagation: "+E.chain.join(" -> ")),E.type){case"self-declined":t.onDeclined&&t.onDeclined(E),t.ignoreDeclined||(S=new Error("Aborted because of self decline: "+E.moduleId+C));break;case"declined":t.onDeclined&&t.onDeclined(E),t.ignoreDeclined||(S=new Error("Aborted because of declined dependency: "+E.moduleId+" in "+E.parentId+C));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(E),t.ignoreUnaccepted||(S=new Error("Aborted because "+u+" is not accepted"+C));break;case"accepted":t.onAccepted&&t.onAccepted(E),T=!0;break;case"disposed":t.onDisposed&&t.onDisposed(E),P=!0;break;default:throw new Error("Unexception type "+E.type)}if(S)return d("abort"),Promise.reject(S);if(T)for(u in g[u]=h[u],p(y,E.outdatedModules),E.outdatedDependencies)Object.prototype.hasOwnProperty.call(E.outdatedDependencies,u)&&(v[u]||(v[u]=[]),p(v[u],E.outdatedDependencies[u]));P&&(p(y,[E.moduleId]),g[u]=b)}var M,D=[];for(r=0;r<y.length;r++)u=y[r],_[u]&&_[u].hot._selfAccepted&&D.push({module:u,errorHandler:_[u].hot._selfAccepted});d("dispose"),Object.keys(w).forEach(function(e){!1===w[e]&&function(e){delete installedChunks[e]}(e)});for(var N,A,k=y.slice();k.length>0;)if(u=k.pop(),c=_[u]){var L={},I=c.hot._disposeHandlers;for(o=0;o<I.length;o++)(n=I[o])(L);for(s[u]=L,c.hot.active=!1,delete _[u],delete v[u],o=0;o<c.children.length;o++){var R=_[c.children[o]];R&&((M=R.parents.indexOf(u))>=0&&R.parents.splice(M,1))}}for(u in v)if(Object.prototype.hasOwnProperty.call(v,u)&&(c=_[u]))for(A=v[u],o=0;o<A.length;o++)N=A[o],(M=c.children.indexOf(N))>=0&&c.children.splice(M,1);for(u in d("apply"),i=m,g)Object.prototype.hasOwnProperty.call(g,u)&&(e[u]=g[u]);var $=null;for(u in v)if(Object.prototype.hasOwnProperty.call(v,u)&&(c=_[u])){A=v[u];var U=[];for(r=0;r<A.length;r++)if(N=A[r],n=c.hot._acceptedDependencies[N]){if(-1!==U.indexOf(n))continue;U.push(n)}for(r=0;r<U.length;r++){n=U[r];try{n(A)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:u,dependencyId:A[r],error:e}),t.ignoreErrored||$||($=e)}}}for(r=0;r<D.length;r++){var H=D[r];u=H.module,a=[u];try{O(u)}catch(e){if("function"==typeof H.errorHandler)try{H.errorHandler(e)}catch(n){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:u,error:n,originalError:e}),t.ignoreErrored||$||($=n),$||($=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:u,error:e}),t.ignoreErrored||$||($=e)}}return $?(d("fail"),Promise.reject($)):(d("idle"),new Promise(function(e){e(y)}))}var _={};function O(t){if(_[t])return _[t].exports;var r=_[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:n!==e,active:!0,accept:function(e,n){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var r=0;r<e.length;r++)t._acceptedDependencies[e[r]]=n||function(){};else t._acceptedDependencies[e]=n||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._declinedDependencies[e[n]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=t._disposeHandlers.indexOf(e);n>=0&&t._disposeHandlers.splice(n,1)},check:j,apply:T,status:function(e){if(!e)return f;l.push(e)},addStatusHandler:function(e){l.push(e)},removeStatusHandler:function(e){var t=l.indexOf(e);t>=0&&l.splice(t,1)},data:s[e]};return n=void 0,t}(t),parents:(c=a,a=[],c),children:[]};return e[t].call(r.exports,r,r.exports,u(t)),r.l=!0,r.exports}O.m=e,O.c=_,O.d=function(e,t,n){O.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},O.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},O.t=function(e,t){if(1&t&&(e=O(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(O.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)O.d(n,r,function(t){return e[t]}.bind(null,r));return n},O.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return O.d(t,"a",t),t},O.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},O.p="dist/",O.h=function(){return i},u("./src/main.js")(O.s="./src/main.js")}({"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/index.js!./src/css/css.css":function(e,t,n){},"./node_modules/style-loader/lib/addStyles.js":function(e,t,n){var r={},i=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),o=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),s=null,a=0,c=[],u=n("./node_modules/style-loader/lib/urls.js");function l(e,t){for(var n=0;n<e.length;n++){var i=e[n],o=r[i.id];if(o){o.refs++;for(var s=0;s<o.parts.length;s++)o.parts[s](i.parts[s]);for(;s<i.parts.length;s++)o.parts.push(v(i.parts[s],t))}else{var a=[];for(s=0;s<i.parts.length;s++)a.push(v(i.parts[s],t));r[i.id]={id:i.id,refs:1,parts:a}}}}function f(e,t){for(var n=[],r={},i=0;i<e.length;i++){var o=e[i],s=t.base?o[0]+t.base:o[0],a={css:o[1],media:o[2],sourceMap:o[3]};r[s]?r[s].parts.push(a):n.push(r[s]={id:s,parts:[a]})}return n}function d(e,t){var n=o(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),c.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=o(e.insertAt.before,n);n.insertBefore(t,i)}}function p(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function h(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return m(t,e.attrs),d(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,r,i,o;if(t.transform&&e.css){if(!(o="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=o}if(t.singleton){var c=a++;n=s||(s=h(t)),r=g.bind(null,n,c,!1),i=g.bind(null,n,c,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),d(e,t),t}(t),r=function(e,t,n){var r=n.css,i=n.sourceMap,o=void 0===t.convertToAbsoluteUrls&&i;(t.convertToAbsoluteUrls||o)&&(r=u(r));i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var s=new Blob([r],{type:"text/css"}),a=e.href;e.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}.bind(null,n,t),i=function(){p(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),i=function(){p(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return l(n,t),function(e){for(var i=[],o=0;o<n.length;o++){var s=n[o];(a=r[s.id]).refs--,i.push(a)}e&&l(f(e,t),t);for(o=0;o<i.length;o++){var a;if(0===(a=i[o]).refs){for(var c=0;c<a.parts.length;c++)a.parts[c]();delete r[a.id]}}}};var y=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,r){var i=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=y(t,i);else{var o=document.createTextNode(i),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(o,s[t]):e.appendChild(o)}}},"./node_modules/style-loader/lib/urls.js":function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var i,o=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?e:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},"./src/css/css.css":function(e,t,n){var r=n("./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/index.js!./src/css/css.css");"string"==typeof r&&(r=[[e.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(r,i);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/index.js!./src/css/css.css",function(){var t=n("./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/index.js!./src/css/css.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}),e.hot.dispose(function(){o()})},"./src/js/es6_test.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),console.log("webpack 1");["hello","world","this","is","es6","code"].forEach(function(e){return console.log(e)});var r={test:function(){console.log("test11")}};t.default=r},"./src/js/index.js":function(e,t,n){"use strict";var r={init:function(){this.ui={},this.ui.score=$(".score"),this.ui.body=$("body"),this.ui.dataWrap=$(".data-wrap"),this.regEvent(),this.getCredit()},regEvent:function(){},popHide:function(){},popShow:function(e){var t=$("#"+e);t&&t.show()},getFormatTimeFromSeconds:function(e){var t=new Date(1e3*e),n=t.getMonth()+1;n<10&&(n="0"+n);var r=t.getDate();r<10&&(r="0"+r);var i=t.getHours();i<10&&(i="0"+i);var o=t.getMinutes();return o<10&&(o="0"+o),t.getFullYear()+"."+n+"."+r+" "+i+":"+o},getCredit:function(){var e=this,t=window.location.search.substring(1);console.log(t),$.ajax({url:"/cgi-bin/credit_score",data:{url_para:t},datatype:"json",type:"get",success:function(t){if(0==t.ret){var n=t.data,r="";if(console.log(t),n.history.length>0)for(var i in $(".nodata").hide(),n.history){var o=n.history[i].change,s=n.history[i].score,a="t_orange";o>0&&(o="+"+o,a="t_yellow"),r+='<tr><td width="29%"  class="bg_1a1">'+e.getFormatTimeFromSeconds(parseInt(n.history[i].timestamp))+'</td><td width="18%"  class='+a+">"+o+'</td><td width="18%" class="bg_1a2" >'+s+'</td><td width="35%" class="bg_1a3">'+n.history[i].reason+"</td></tr>"}console.log(r),e.ui.score.text(n.score),e.ui.dataWrap.append(r)}else $(".cont_buzy").show()},error:function(e){$(".cont_buzy").show(),console.log(e)}})},statistics:function(e){var t=this.paramChangeJson();$.ajax({url:"/statistic",data:{sys_id:1029,type_id:827,sub_type:2062,user_id:t.openid,user_type:0,class_id:e},datatype:"json",type:"get",async:!0,success:function(e){}})},paramChangeJson:function(){var e={},t=window.location.search.replace(/\?*/g,"").split("&");for(var n in t){var r=t[n].split("=");e[r[0]]=r[1]}return e}};$(function(){r.init()})},"./src/js/zepto.js":function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=function(){function e(e){return null==e?String(e):z[B.call(e)]||"object"}function t(t){return"function"==e(t)}function n(e){return null!=e&&e==e.window}function i(e){return null!=e&&e.nodeType==e.DOCUMENT_NODE}function o(t){return"object"==e(t)}function s(e){return o(e)&&!n(e)&&Object.getPrototypeOf(e)==Object.prototype}function a(e){return"number"==typeof e.length}function c(e){return e.length>0?x.fn.concat.apply([],e):e}function u(e){return e.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/_/g,"-").toLowerCase()}function l(e){return e in M?M[e]:M[e]=new RegExp("(^|\\s)"+e+"(\\s|$)")}function f(e,t){return"number"!=typeof t||D[u(e)]?t:t+"px"}function d(e){return"children"in e?_.call(e.children):x.map(e.childNodes,function(e){return 1==e.nodeType?e:void 0})}function p(e,t,n){for(w in t)n&&(s(t[w])||J(t[w]))?(s(t[w])&&!s(e[w])&&(e[w]={}),J(t[w])&&!J(e[w])&&(e[w]=[]),p(e[w],t[w],n)):t[w]!==b&&(e[w]=t[w])}function h(e,t){return null==t?x(e):x(e).filter(t)}function m(e,n,r,i){return t(n)?n.call(e,r,i):n}function v(e,t,n){null==n?e.removeAttribute(t):e.setAttribute(t,n)}function y(e,t){var n=e.className,r=n&&n.baseVal!==b;return t===b?r?n.baseVal:n:void(r?n.baseVal=t:e.className=t)}function g(e){var t;try{return e?"true"==e||"false"!=e&&("null"==e?null:/^0/.test(e)||isNaN(t=Number(e))?/^[\[\{]/.test(e)?x.parseJSON(e):e:t):e}catch(t){return e}}var b,w,x,j,E,S,T=[],_=T.slice,O=T.filter,P=window.document,C={},M={},D={"column-count":1,columns:1,"font-weight":1,"line-height":1,opacity:1,"z-index":1,zoom:1},N=/^\s*<(\w+|!)[^>]*>/,A=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,k=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,L=/^(?:body|html)$/i,I=/([A-Z])/g,R=["val","css","html","text","data","width","height","offset"],$=P.createElement("table"),U=P.createElement("tr"),H={tr:P.createElement("tbody"),tbody:$,thead:$,tfoot:$,td:U,th:U,"*":P.createElement("div")},F=/complete|loaded|interactive/,q=/^[\w-]*$/,z={},B=z.toString,Z={},X=P.createElement("div"),V={tabindex:"tabIndex",readonly:"readOnly",for:"htmlFor",class:"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},J=Array.isArray||function(e){return e instanceof Array};return Z.matches=function(e,t){if(!t||!e||1!==e.nodeType)return!1;var n=e.webkitMatchesSelector||e.mozMatchesSelector||e.oMatchesSelector||e.matchesSelector;if(n)return n.call(e,t);var r,i=e.parentNode,o=!i;return o&&(i=X).appendChild(e),r=~Z.qsa(i,t).indexOf(e),o&&X.removeChild(e),r},E=function(e){return e.replace(/-+(.)?/g,function(e,t){return t?t.toUpperCase():""})},S=function(e){return O.call(e,function(t,n){return e.indexOf(t)==n})},Z.fragment=function(e,t,n){var r,i,o;return A.test(e)&&(r=x(P.createElement(RegExp.$1))),r||(e.replace&&(e=e.replace(k,"<$1></$2>")),t===b&&(t=N.test(e)&&RegExp.$1),t in H||(t="*"),(o=H[t]).innerHTML=""+e,r=x.each(_.call(o.childNodes),function(){o.removeChild(this)})),s(n)&&(i=x(r),x.each(n,function(e,t){R.indexOf(e)>-1?i[e](t):i.attr(e,t)})),r},Z.Z=function(e,t){return(e=e||[]).__proto__=x.fn,e.selector=t||"",e},Z.isZ=function(e){return e instanceof Z.Z},Z.init=function(e,n){var r;if(!e)return Z.Z();if("string"==typeof e)if("<"==(e=e.trim())[0]&&N.test(e))r=Z.fragment(e,RegExp.$1,n),e=null;else{if(n!==b)return x(n).find(e);r=Z.qsa(P,e)}else{if(t(e))return x(P).ready(e);if(Z.isZ(e))return e;if(J(e))r=function(e){return O.call(e,function(e){return null!=e})}(e);else if(o(e))r=[e],e=null;else if(N.test(e))r=Z.fragment(e.trim(),RegExp.$1,n),e=null;else{if(n!==b)return x(n).find(e);r=Z.qsa(P,e)}}return Z.Z(r,e)},(x=function(e,t){return Z.init(e,t)}).extend=function(e){var t,n=_.call(arguments,1);return"boolean"==typeof e&&(t=e,e=n.shift()),n.forEach(function(n){p(e,n,t)}),e},Z.qsa=function(e,t){var n,r="#"==t[0],o=!r&&"."==t[0],s=r||o?t.slice(1):t,a=q.test(s);return i(e)&&a&&r?(n=e.getElementById(s))?[n]:[]:1!==e.nodeType&&9!==e.nodeType?[]:_.call(a&&!r?o?e.getElementsByClassName(s):e.getElementsByTagName(t):e.querySelectorAll(t))},x.contains=P.documentElement.contains?function(e,t){return e!==t&&e.contains(t)}:function(e,t){for(;t&&(t=t.parentNode);)if(t===e)return!0;return!1},x.type=e,x.isFunction=t,x.isWindow=n,x.isArray=J,x.isPlainObject=s,x.isEmptyObject=function(e){var t;for(t in e)return!1;return!0},x.inArray=function(e,t,n){return T.indexOf.call(t,e,n)},x.camelCase=E,x.trim=function(e){return null==e?"":String.prototype.trim.call(e)},x.uuid=0,x.support={},x.expr={},x.map=function(e,t){var n,r,i,o=[];if(a(e))for(r=0;r<e.length;r++)null!=(n=t(e[r],r))&&o.push(n);else for(i in e)null!=(n=t(e[i],i))&&o.push(n);return c(o)},x.each=function(e,t){var n,r;if(a(e)){for(n=0;n<e.length;n++)if(!1===t.call(e[n],n,e[n]))return e}else for(r in e)if(!1===t.call(e[r],r,e[r]))return e;return e},x.grep=function(e,t){return O.call(e,t)},window.JSON&&(x.parseJSON=JSON.parse),x.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){z["[object "+t+"]"]=t.toLowerCase()}),x.fn={forEach:T.forEach,reduce:T.reduce,push:T.push,sort:T.sort,indexOf:T.indexOf,concat:T.concat,map:function(e){return x(x.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return x(_.apply(this,arguments))},ready:function(e){return F.test(P.readyState)&&P.body?e(x):P.addEventListener("DOMContentLoaded",function(){e(x)},!1),this},get:function(e){return e===b?_.call(this):this[e>=0?e:e+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){null!=this.parentNode&&this.parentNode.removeChild(this)})},each:function(e){return T.every.call(this,function(t,n){return!1!==e.call(t,n,t)}),this},filter:function(e){return t(e)?this.not(this.not(e)):x(O.call(this,function(t){return Z.matches(t,e)}))},add:function(e,t){return x(S(this.concat(x(e,t))))},is:function(e){return this.length>0&&Z.matches(this[0],e)},not:function(e){var n=[];if(t(e)&&e.call!==b)this.each(function(t){e.call(this,t)||n.push(this)});else{var r="string"==typeof e?this.filter(e):a(e)&&t(e.item)?_.call(e):x(e);this.forEach(function(e){r.indexOf(e)<0&&n.push(e)})}return x(n)},has:function(e){return this.filter(function(){return o(e)?x.contains(this,e):x(this).find(e).size()})},eq:function(e){return-1===e?this.slice(e):this.slice(e,+e+1)},first:function(){var e=this[0];return e&&!o(e)?e:x(e)},last:function(){var e=this[this.length-1];return e&&!o(e)?e:x(e)},find:function(e){var t=this;return e?"object"==(void 0===e?"undefined":r(e))?x(e).filter(function(){var e=this;return T.some.call(t,function(t){return x.contains(t,e)})}):1==this.length?x(Z.qsa(this[0],e)):this.map(function(){return Z.qsa(this,e)}):[]},closest:function(e,t){var n=this[0],o=!1;for("object"==(void 0===e?"undefined":r(e))&&(o=x(e));n&&!(o?o.indexOf(n)>=0:Z.matches(n,e));)n=n!==t&&!i(n)&&n.parentNode;return x(n)},parents:function(e){for(var t=[],n=this;n.length>0;)n=x.map(n,function(e){return(e=e.parentNode)&&!i(e)&&t.indexOf(e)<0?(t.push(e),e):void 0});return h(t,e)},parent:function(e){return h(S(this.pluck("parentNode")),e)},children:function(e){return h(this.map(function(){return d(this)}),e)},contents:function(){return this.map(function(){return _.call(this.childNodes)})},siblings:function(e){return h(this.map(function(e,t){return O.call(d(t.parentNode),function(e){return e!==t})}),e)},empty:function(){return this.each(function(){this.innerHTML=""})},pluck:function(e){return x.map(this,function(t){return t[e]})},show:function(){return this.each(function(){"none"==this.style.display&&(this.style.display=""),"none"==getComputedStyle(this,"").getPropertyValue("display")&&(this.style.display=function(e){var t,n;return C[e]||(t=P.createElement(e),P.body.appendChild(t),n=getComputedStyle(t,"").getPropertyValue("display"),t.parentNode.removeChild(t),"none"==n&&(n="block"),C[e]=n),C[e]}(this.nodeName))})},replaceWith:function(e){return this.before(e).remove()},wrap:function(e){var n=t(e);if(this[0]&&!n)var r=x(e).get(0),i=r.parentNode||this.length>1;return this.each(function(t){x(this).wrapAll(n?e.call(this,t):i?r.cloneNode(!0):r)})},wrapAll:function(e){if(this[0]){x(this[0]).before(e=x(e));for(var t;(t=e.children()).length;)e=t.first();x(e).append(this)}return this},wrapInner:function(e){var n=t(e);return this.each(function(t){var r=x(this),i=r.contents(),o=n?e.call(this,t):e;i.length?i.wrapAll(o):r.append(o)})},unwrap:function(){return this.parent().each(function(){x(this).replaceWith(x(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css("display","none")},toggle:function(e){return this.each(function(){var t=x(this);(e===b?"none"==t.css("display"):e)?t.show():t.hide()})},prev:function(e){return x(this.pluck("previousElementSibling")).filter(e||"*")},next:function(e){return x(this.pluck("nextElementSibling")).filter(e||"*")},html:function(e){return 0 in arguments?this.each(function(t){var n=this.innerHTML;x(this).empty().append(m(this,e,t,n))}):0 in this?this[0].innerHTML:null},text:function(e){return 0 in arguments?this.each(function(t){var n=m(this,e,t,this.textContent);this.textContent=null==n?"":""+n}):0 in this?this[0].textContent:null},attr:function(e,t){var n;return"string"!=typeof e||1 in arguments?this.each(function(n){if(1===this.nodeType)if(o(e))for(w in e)v(this,w,e[w]);else v(this,e,m(this,t,n,this.getAttribute(e)))}):this.length&&1===this[0].nodeType?!(n=this[0].getAttribute(e))&&e in this[0]?this[0][e]:n:b},removeAttr:function(e){return this.each(function(){1===this.nodeType&&v(this,e)})},prop:function(e,t){return e=V[e]||e,1 in arguments?this.each(function(n){this[e]=m(this,t,n,this[e])}):this[0]&&this[0][e]},data:function(e,t){var n="data-"+e.replace(I,"-$1").toLowerCase(),r=1 in arguments?this.attr(n,t):this.attr(n);return null!==r?g(r):b},val:function(e){return 0 in arguments?this.each(function(t){this.value=m(this,e,t,this.value)}):this[0]&&(this[0].multiple?x(this[0]).find("option").filter(function(){return this.selected}).pluck("value"):this[0].value)},offset:function(e){if(e)return this.each(function(t){var n=x(this),r=m(this,e,t,n.offset()),i=n.offsetParent().offset(),o={top:r.top-i.top,left:r.left-i.left};"static"==n.css("position")&&(o.position="relative"),n.css(o)});if(!this.length)return null;var t=this[0].getBoundingClientRect();return{left:t.left+window.pageXOffset,top:t.top+window.pageYOffset,width:Math.round(t.width),height:Math.round(t.height)}},css:function(t,n){if(arguments.length<2){var r=this[0],i=getComputedStyle(r,"");if(!r)return;if("string"==typeof t)return r.style[E(t)]||i.getPropertyValue(t);if(J(t)){var o={};return x.each(J(t)?t:[t],function(e,t){o[t]=r.style[E(t)]||i.getPropertyValue(t)}),o}}var s="";if("string"==e(t))n||0===n?s=u(t)+":"+f(t,n):this.each(function(){this.style.removeProperty(u(t))});else for(w in t)t[w]||0===t[w]?s+=u(w)+":"+f(w,t[w])+";":this.each(function(){this.style.removeProperty(u(w))});return this.each(function(){this.style.cssText+=";"+s})},index:function(e){return e?this.indexOf(x(e)[0]):this.parent().children().indexOf(this[0])},hasClass:function(e){return!!e&&T.some.call(this,function(e){return this.test(y(e))},l(e))},addClass:function(e){return e?this.each(function(t){j=[];var n=y(this);m(this,e,t,n).split(/\s+/g).forEach(function(e){x(this).hasClass(e)||j.push(e)},this),j.length&&y(this,n+(n?" ":"")+j.join(" "))}):this},removeClass:function(e){return this.each(function(t){return e===b?y(this,""):(j=y(this),m(this,e,t,j).split(/\s+/g).forEach(function(e){j=j.replace(l(e)," ")}),void y(this,j.trim()))})},toggleClass:function(e,t){return e?this.each(function(n){var r=x(this);m(this,e,n,y(this)).split(/\s+/g).forEach(function(e){(t===b?!r.hasClass(e):t)?r.addClass(e):r.removeClass(e)})}):this},scrollTop:function(e){if(this.length){var t="scrollTop"in this[0];return e===b?t?this[0].scrollTop:this[0].pageYOffset:this.each(t?function(){this.scrollTop=e}:function(){this.scrollTo(this.scrollX,e)})}},scrollLeft:function(e){if(this.length){var t="scrollLeft"in this[0];return e===b?t?this[0].scrollLeft:this[0].pageXOffset:this.each(t?function(){this.scrollLeft=e}:function(){this.scrollTo(e,this.scrollY)})}},position:function(){if(this.length){var e=this[0],t=this.offsetParent(),n=this.offset(),r=L.test(t[0].nodeName)?{top:0,left:0}:t.offset();return n.top-=parseFloat(x(e).css("margin-top"))||0,n.left-=parseFloat(x(e).css("margin-left"))||0,r.top+=parseFloat(x(t[0]).css("border-top-width"))||0,r.left+=parseFloat(x(t[0]).css("border-left-width"))||0,{top:n.top-r.top,left:n.left-r.left}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||P.body;e&&!L.test(e.nodeName)&&"static"==x(e).css("position");)e=e.offsetParent;return e})}},x.fn.detach=x.fn.remove,["width","height"].forEach(function(e){var t=e.replace(/./,function(e){return e[0].toUpperCase()});x.fn[e]=function(r){var o,s=this[0];return r===b?n(s)?s["inner"+t]:i(s)?s.documentElement["scroll"+t]:(o=this.offset())&&o[e]:this.each(function(t){(s=x(this)).css(e,m(this,r,t,s[e]()))})}}),["after","prepend","before","append"].forEach(function(t,n){var r=n%2;x.fn[t]=function(){var t,i,o=x.map(arguments,function(n){return"object"==(t=e(n))||"array"==t||null==n?n:Z.fragment(n)}),s=this.length>1;return o.length<1?this:this.each(function(e,t){i=r?t:t.parentNode,t=0==n?t.nextSibling:1==n?t.firstChild:2==n?t:null;var a=x.contains(P.documentElement,i);o.forEach(function(e){if(s)e=e.cloneNode(!0);else if(!i)return x(e).remove();i.insertBefore(e,t),a&&function e(t,n){n(t);for(var r=0,i=t.childNodes.length;i>r;r++)e(t.childNodes[r],n)}(e,function(e){null==e.nodeName||"SCRIPT"!==e.nodeName.toUpperCase()||e.type&&"text/javascript"!==e.type||e.src||window.eval.call(window,e.innerHTML)})})})},x.fn[r?t+"To":"insert"+(n?"Before":"After")]=function(e){return x(e)[t](this),this}}),Z.Z.prototype=x.fn,Z.uniq=S,Z.deserializeValue=g,x.zepto=Z,x}();window.Zepto=i,void 0===window.$&&(window.$=i),function(e){function t(e){return e._zid||(e._zid=f++)}function n(e,n,i,o){if((n=r(n)).ns)var s=function(e){return new RegExp("(?:^| )"+e.replace(" "," .* ?")+"(?: |$)")}(n.ns);return(m[t(e)]||[]).filter(function(e){return!(!e||n.e&&e.e!=n.e||n.ns&&!s.test(e.ns)||i&&t(e.fn)!==t(i)||o&&e.sel!=o)})}function r(e){var t=(""+e).split(".");return{e:t[0],ns:t.slice(1).sort().join(" ")}}function i(e,t){return e.del&&!y&&e.e in g||!!t}function o(e){return b[e]||y&&g[e]||e}function s(n,s,a,u,f,d,p){var h=t(n),v=m[h]||(m[h]=[]);s.split(/\s/).forEach(function(t){if("ready"==t)return e(document).ready(a);var s=r(t);s.fn=a,s.sel=f,s.e in b&&(a=function(t){var n=t.relatedTarget;return!n||n!==this&&!e.contains(this,n)?s.fn.apply(this,arguments):void 0}),s.del=d;var h=d||a;s.proxy=function(e){if(!(e=c(e)).isImmediatePropagationStopped()){e.data=u;var t=h.apply(n,e._args==l?[e]:[e].concat(e._args));return!1===t&&(e.preventDefault(),e.stopPropagation()),t}},s.i=v.length,v.push(s),"addEventListener"in n&&n.addEventListener(o(s.e),s.proxy,i(s,p))})}function a(e,r,s,a,c){var u=t(e);(r||"").split(/\s/).forEach(function(t){n(e,t,s,a).forEach(function(t){delete m[u][t.i],"removeEventListener"in e&&e.removeEventListener(o(t.e),t.proxy,i(t,c))})})}function c(t,n){return(n||!t.isDefaultPrevented)&&(n||(n=t),e.each(E,function(e,r){var i=n[e];t[e]=function(){return this[r]=w,i&&i.apply(n,arguments)},t[r]=x}),(n.defaultPrevented!==l?n.defaultPrevented:"returnValue"in n?!1===n.returnValue:n.getPreventDefault&&n.getPreventDefault())&&(t.isDefaultPrevented=w)),t}function u(e){var t,n={originalEvent:e};for(t in e)j.test(t)||e[t]===l||(n[t]=e[t]);return c(n,e)}var l,f=1,d=Array.prototype.slice,p=e.isFunction,h=function(e){return"string"==typeof e},m={},v={},y="onfocusin"in window,g={focus:"focusin",blur:"focusout"},b={mouseenter:"mouseover",mouseleave:"mouseout"};v.click=v.mousedown=v.mouseup=v.mousemove="MouseEvents",e.event={add:s,remove:a},e.proxy=function(n,r){var i=2 in arguments&&d.call(arguments,2);if(p(n)){var o=function(){return n.apply(r,i?i.concat(d.call(arguments)):arguments)};return o._zid=t(n),o}if(h(r))return i?(i.unshift(n[r],n),e.proxy.apply(null,i)):e.proxy(n[r],n);throw new TypeError("expected function")},e.fn.bind=function(e,t,n){return this.on(e,t,n)},e.fn.unbind=function(e,t){return this.off(e,t)},e.fn.one=function(e,t,n,r){return this.on(e,t,n,r,1)};var w=function(){return!0},x=function(){return!1},j=/^([A-Z]|returnValue$|layer[XY]$)/,E={preventDefault:"isDefaultPrevented",stopImmediatePropagation:"isImmediatePropagationStopped",stopPropagation:"isPropagationStopped"};e.fn.delegate=function(e,t,n){return this.on(t,e,n)},e.fn.undelegate=function(e,t,n){return this.off(t,e,n)},e.fn.live=function(t,n){return e(document.body).delegate(this.selector,t,n),this},e.fn.die=function(t,n){return e(document.body).undelegate(this.selector,t,n),this},e.fn.on=function(t,n,r,i,o){var c,f,m=this;return t&&!h(t)?(e.each(t,function(e,t){m.on(e,n,r,t,o)}),m):(h(n)||p(i)||!1===i||(i=r,r=n,n=l),(p(r)||!1===r)&&(i=r,r=l),!1===i&&(i=x),m.each(function(l,p){o&&(c=function(e){return a(p,e.type,i),i.apply(this,arguments)}),n&&(f=function(t){var r,o=e(t.target).closest(n,p).get(0);return o&&o!==p?(r=e.extend(u(t),{currentTarget:o,liveFired:p}),(c||i).apply(o,[r].concat(d.call(arguments,1)))):void 0}),s(p,t,i,r,n,f||c)}))},e.fn.off=function(t,n,r){var i=this;return t&&!h(t)?(e.each(t,function(e,t){i.off(e,n,t)}),i):(h(n)||p(r)||!1===r||(r=n,n=l),!1===r&&(r=x),i.each(function(){a(this,t,r,n)}))},e.fn.trigger=function(t,n){return(t=h(t)||e.isPlainObject(t)?e.Event(t):c(t))._args=n,this.each(function(){"dispatchEvent"in this?this.dispatchEvent(t):e(this).triggerHandler(t,n)})},e.fn.triggerHandler=function(t,r){var i,o;return this.each(function(s,a){(i=u(h(t)?e.Event(t):t))._args=r,i.target=a,e.each(n(a,t.type||t),function(e,t){return o=t.proxy(i),!i.isImmediatePropagationStopped()&&void 0})}),o},"focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(t){e.fn[t]=function(e){return e?this.bind(t,e):this.trigger(t)}}),["focus","blur"].forEach(function(t){e.fn[t]=function(e){return e?this.bind(t,e):this.each(function(){try{this[t]()}catch(e){}}),this}}),e.Event=function(e,t){h(e)||(e=(t=e).type);var n=document.createEvent(v[e]||"Events"),r=!0;if(t)for(var i in t)"bubbles"==i?r=!!t[i]:n[i]=t[i];return n.initEvent(e,r,!0),c(n)}}(i),function(e){function t(t,n,r){var i=e.Event(n);return e(t).trigger(i,r),!i.isDefaultPrevented()}function n(e,n,r,i){return e.global?t(n||y,r,i):void 0}function r(t){t.global&&0==e.active++&&n(t,null,"ajaxStart")}function i(t){t.global&&!--e.active&&n(t,null,"ajaxStop")}function o(e,t){var r=t.context;return!1!==t.beforeSend.call(r,e,t)&&!1!==n(t,r,"ajaxBeforeSend",[e,t])&&void n(t,r,"ajaxSend",[e,t])}function s(e,t,r,i){var o=r.context,s="success";r.success.call(o,e,s,t),i&&i.resolveWith(o,[e,s,t]),n(r,o,"ajaxSuccess",[t,r,e]),c(s,t,r)}function a(e,t,r,i,o){var s=i.context;i.error.call(s,r,t,e),o&&o.rejectWith(s,[r,t,e]),n(i,s,"ajaxError",[r,i,e||t]),c(t,r,i)}function c(e,t,r){var o=r.context;r.complete.call(o,t,e),n(r,o,"ajaxComplete",[t,r]),i(r)}function u(){}function l(e){return e&&(e=e.split(";",2)[0]),e&&(e==j?"html":e==x?"json":b.test(e)?"script":w.test(e)&&"xml")||"text"}function f(e,t){return""==t?e:(e+"&"+t).replace(/[&?]{1,2}/,"?")}function d(t,n,r,i){return e.isFunction(n)&&(i=r,r=n,n=void 0),e.isFunction(r)||(i=r,r=void 0),{url:t,data:n,success:r,dataType:i}}function p(t,n,r,i){var o,s=e.isArray(n),a=e.isPlainObject(n);e.each(n,function(n,c){o=e.type(c),i&&(n=r?i:i+"["+(a||"object"==o||"array"==o?n:"")+"]"),!i&&s?t.add(c.name,c.value):"array"==o||!r&&"object"==o?p(t,c,r,n):t.add(n,c)})}var h,m,v=0,y=window.document,g=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,b=/^(?:text|application)\/javascript/i,w=/^(?:text|application)\/xml/i,x="application/json",j="text/html",E=/^\s*$/;e.active=0,e.ajaxJSONP=function(t,n){if(!("type"in t))return e.ajax(t);var r,i,c=t.jsonpCallback,u=(e.isFunction(c)?c():c)||"jsonp"+ ++v,l=y.createElement("script"),f=window[u],d=function(t){e(l).triggerHandler("error",t||"abort")},p={abort:d};return n&&n.promise(p),e(l).on("load error",function(o,c){clearTimeout(i),e(l).off().remove(),"error"!=o.type&&r?s(r[0],p,t,n):a(null,c||"error",p,t,n),window[u]=f,r&&e.isFunction(f)&&f(r[0]),f=r=void 0}),!1===o(p,t)?(d("abort"),p):(window[u]=function(){r=arguments},l.src=t.url.replace(/\?(.+)=\?/,"?$1="+u),y.head.appendChild(l),t.timeout>0&&(i=setTimeout(function(){d("timeout")},t.timeout)),p)},e.ajaxSettings={type:"GET",beforeSend:u,success:u,error:u,complete:u,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:"text/javascript, application/javascript, application/x-javascript",json:x,xml:"application/xml, text/xml",html:j,text:"text/plain"},crossDomain:!1,timeout:0,processData:!0,cache:!0},e.ajax=function(t){var n=e.extend({},t||{}),i=e.Deferred&&e.Deferred();for(h in e.ajaxSettings)void 0===n[h]&&(n[h]=e.ajaxSettings[h]);r(n),n.crossDomain||(n.crossDomain=/^([\w-]+:)?\/\/([^\/]+)/.test(n.url)&&RegExp.$2!=window.location.host),n.url||(n.url=window.location.toString()),function(t){t.processData&&t.data&&"string"!=e.type(t.data)&&(t.data=e.param(t.data,t.traditional)),!t.data||t.type&&"GET"!=t.type.toUpperCase()||(t.url=f(t.url,t.data),t.data=void 0)}(n);var c=n.dataType,d=/\?.+=\?/.test(n.url);if(d&&(c="jsonp"),!1!==n.cache&&(t&&!0===t.cache||"script"!=c&&"jsonp"!=c)||(n.url=f(n.url,"_="+Date.now())),"jsonp"==c)return d||(n.url=f(n.url,n.jsonp?n.jsonp+"=?":!1===n.jsonp?"":"callback=?")),e.ajaxJSONP(n,i);var p,v=n.accepts[c],y={},g=function(e,t){y[e.toLowerCase()]=[e,t]},b=/^([\w-]+:)\/\//.test(n.url)?RegExp.$1:window.location.protocol,w=n.xhr(),x=w.setRequestHeader;if(i&&i.promise(w),n.crossDomain||g("X-Requested-With","XMLHttpRequest"),g("Accept",v||"*/*"),(v=n.mimeType||v)&&(v.indexOf(",")>-1&&(v=v.split(",",2)[0]),w.overrideMimeType&&w.overrideMimeType(v)),(n.contentType||!1!==n.contentType&&n.data&&"GET"!=n.type.toUpperCase())&&g("Content-Type",n.contentType||"application/x-www-form-urlencoded"),n.headers)for(m in n.headers)g(m,n.headers[m]);if(w.setRequestHeader=g,w.onreadystatechange=function(){if(4==w.readyState){w.onreadystatechange=u,clearTimeout(p);var t,r=!1;if(w.status>=200&&w.status<300||304==w.status||0==w.status&&"file:"==b){c=c||l(n.mimeType||w.getResponseHeader("content-type")),t=w.responseText;try{"script"==c?(0,eval)(t):"xml"==c?t=w.responseXML:"json"==c&&(t=E.test(t)?null:e.parseJSON(t))}catch(e){r=e}r?a(r,"parsererror",w,n,i):s(t,w,n,i)}else a(w.statusText||null,w.status?"error":"abort",w,n,i)}},!1===o(w,n))return w.abort(),a(null,"abort",w,n,i),w;if(n.xhrFields)for(m in n.xhrFields)w[m]=n.xhrFields[m];var j=!("async"in n)||n.async;for(m in w.open(n.type,n.url,j,n.username,n.password),y)x.apply(w,y[m]);return n.timeout>0&&(p=setTimeout(function(){w.onreadystatechange=u,w.abort(),a(null,"timeout",w,n,i)},n.timeout)),w.send(n.data?n.data:null),w},e.get=function(){return e.ajax(d.apply(null,arguments))},e.post=function(){var t=d.apply(null,arguments);return t.type="POST",e.ajax(t)},e.getJSON=function(){var t=d.apply(null,arguments);return t.dataType="json",e.ajax(t)},e.fn.load=function(t,n,r){if(!this.length)return this;var i,o=this,s=t.split(/\s/),a=d(t,n,r),c=a.success;return s.length>1&&(a.url=s[0],i=s[1]),a.success=function(t){o.html(i?e("<div>").html(t.replace(g,"")).find(i):t),c&&c.apply(o,arguments)},e.ajax(a),this};var S=encodeURIComponent;e.param=function(e,t){var n=[];return n.add=function(e,t){this.push(S(e)+"="+S(t))},p(n,e,t),n.join("&").replace(/%20/g,"+")}}(i),function(e){e.fn.serializeArray=function(){var t,n=[];return e([].slice.call(this.get(0).elements)).each(function(){var r=(t=e(this)).attr("type");"fieldset"!=this.nodeName.toLowerCase()&&!this.disabled&&"submit"!=r&&"reset"!=r&&"button"!=r&&("radio"!=r&&"checkbox"!=r||this.checked)&&n.push({name:t.attr("name"),value:t.val()})}),n},e.fn.serialize=function(){var e=[];return this.serializeArray().forEach(function(t){e.push(encodeURIComponent(t.name)+"="+encodeURIComponent(t.value))}),e.join("&")},e.fn.submit=function(t){if(t)this.bind("submit",t);else if(this.length){var n=e.Event("submit");this.eq(0).trigger(n),n.isDefaultPrevented()||this.get(0).submit()}return this}}(i),function(e){"__proto__"in{}||e.extend(e.zepto,{Z:function(t,n){return t=t||[],e.extend(t,e.fn),t.selector=n||"",t.__Z=!0,t},isZ:function(t){return"array"===e.type(t)&&"__Z"in t}});try{getComputedStyle(void 0)}catch(e){var t=getComputedStyle;window.getComputedStyle=function(e){try{return t(e)}catch(e){return null}}}}(i),function(e){function t(e){var t=this.os={},n=this.browser={},r=e.match(/Web[kK]it[\/]{0,1}([\d.]+)/),i=e.match(/(Android);?[\s\/]+([\d.]+)?/),o=!!e.match(/\(Macintosh\; Intel /),s=e.match(/(iPad).*OS\s([\d_]+)/),a=e.match(/(iPod)(.*OS\s([\d_]+))?/),c=!s&&e.match(/(iPhone\sOS)\s([\d_]+)/),u=e.match(/(webOS|hpwOS)[\s\/]([\d.]+)/),l=e.match(/Windows Phone ([\d.]+)/),f=u&&e.match(/TouchPad/),d=e.match(/Kindle\/([\d.]+)/),p=e.match(/Silk\/([\d._]+)/),h=e.match(/(BlackBerry).*Version\/([\d.]+)/),m=e.match(/(BB10).*Version\/([\d.]+)/),v=e.match(/(RIM\sTablet\sOS)\s([\d.]+)/),y=e.match(/PlayBook/),g=e.match(/Chrome\/([\d.]+)/)||e.match(/CriOS\/([\d.]+)/),b=e.match(/Firefox\/([\d.]+)/),w=e.match(/MSIE\s([\d.]+)/)||e.match(/Trident\/[\d](?=[^\?]+).*rv:([0-9.].)/),x=!g&&e.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/),j=x||e.match(/Version\/([\d.]+)([^S](Safari)|[^M]*(Mobile)[^S]*(Safari))/);(n.webkit=!!r)&&(n.version=r[1]),i&&(t.android=!0,t.version=i[2]),c&&!a&&(t.ios=t.iphone=!0,t.version=c[2].replace(/_/g,".")),s&&(t.ios=t.ipad=!0,t.version=s[2].replace(/_/g,".")),a&&(t.ios=t.ipod=!0,t.version=a[3]?a[3].replace(/_/g,"."):null),l&&(t.wp=!0,t.version=l[1]),u&&(t.webos=!0,t.version=u[2]),f&&(t.touchpad=!0),h&&(t.blackberry=!0,t.version=h[2]),m&&(t.bb10=!0,t.version=m[2]),v&&(t.rimtabletos=!0,t.version=v[2]),y&&(n.playbook=!0),d&&(t.kindle=!0,t.version=d[1]),p&&(n.silk=!0,n.version=p[1]),!p&&t.android&&e.match(/Kindle Fire/)&&(n.silk=!0),g&&(n.chrome=!0,n.version=g[1]),b&&(n.firefox=!0,n.version=b[1]),w&&(n.ie=!0,n.version=w[1]),j&&(o||t.ios)&&(n.safari=!0,o&&(n.version=j[1])),x&&(n.webview=!0),t.tablet=!!(s||y||i&&!e.match(/Mobile/)||b&&e.match(/Tablet/)||w&&!e.match(/Phone/)&&e.match(/Touch/)),t.phone=!(t.tablet||t.ipod||!(i||c||u||h||m||g&&e.match(/Android/)||g&&e.match(/CriOS\/([\d.]+)/)||b&&e.match(/Mobile/)||w&&e.match(/Touch/)))}t.call(e,navigator.userAgent),e.__detect=t}(i),function(e,t){function n(e){return e.replace(/([a-z])([A-Z])/,"$1-$2").toLowerCase()}function i(e){return o?o+e:e.toLowerCase()}var o,s,a,c,u,l,f,d,p,h,m="",v=window.document.createElement("div"),y=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,g={};e.each({Webkit:"webkit",Moz:"",O:"o"},function(e,n){return v.style[e+"TransitionProperty"]!==t?(m="-"+e.toLowerCase()+"-",o=n,!1):void 0}),s=m+"transform",g[a=m+"transition-property"]=g[c=m+"transition-duration"]=g[l=m+"transition-delay"]=g[u=m+"transition-timing-function"]=g[f=m+"animation-name"]=g[d=m+"animation-duration"]=g[h=m+"animation-delay"]=g[p=m+"animation-timing-function"]="",e.fx={off:o===t&&v.style.transitionProperty===t,speeds:{_default:400,fast:200,slow:600},cssPrefix:m,transitionEnd:i("TransitionEnd"),animationEnd:i("AnimationEnd")},e.fn.animate=function(n,r,i,o,s){return e.isFunction(r)&&(o=r,i=t,r=t),e.isFunction(i)&&(o=i,i=t),e.isPlainObject(r)&&(i=r.easing,o=r.complete,s=r.delay,r=r.duration),r&&(r=("number"==typeof r?r:e.fx.speeds[r]||e.fx.speeds._default)/1e3),s&&(s=parseFloat(s)/1e3),this.anim(n,r,i,o,s)},e.fn.anim=function(i,o,m,v,b){var w,x,j,E={},S="",T=this,_=e.fx.transitionEnd,O=!1;if(o===t&&(o=e.fx.speeds._default/1e3),b===t&&(b=0),e.fx.off&&(o=0),"string"==typeof i)E[f]=i,E[d]=o+"s",E[h]=b+"s",E[p]=m||"linear",_=e.fx.animationEnd;else{for(w in x=[],i)y.test(w)?S+=w+"("+i[w]+") ":(E[w]=i[w],x.push(n(w)));S&&(E[s]=S,x.push(s)),o>0&&"object"==(void 0===i?"undefined":r(i))&&(E[a]=x.join(", "),E[c]=o+"s",E[l]=b+"s",E[u]=m||"linear")}return j=function(t){if(void 0!==t){if(t.target!==t.currentTarget)return;e(t.target).unbind(_,j)}else e(this).unbind(_,j);O=!0,e(this).css(g),v&&v.call(this)},o>0&&(this.bind(_,j),setTimeout(function(){O||j.call(T)},1e3*(o+b)+25)),this.size()&&this.get(0).clientLeft,this.css(E),0>=o&&setTimeout(function(){T.each(function(){j.call(this)})},0),this},v=null}(i),function(e,t){function n(n,r,i,o,s){"function"!=typeof r||s||(s=r,r=t);var a={opacity:i};return o&&(a.scale=o,n.css(e.fx.cssPrefix+"transform-origin","0 0")),n.animate(a,r,null,s)}function r(t,r,i,s){return n(t,r,0,i,function(){o.call(e(this)),s&&s.call(this)})}var i=(window.document.documentElement,e.fn.show),o=e.fn.hide,s=e.fn.toggle;e.fn.show=function(e,r){return i.call(this),e===t?e=0:this.css("opacity",0),n(this,e,1,"1,1",r)},e.fn.hide=function(e,n){return e===t?o.call(this):r(this,e,"0,0",n)},e.fn.toggle=function(n,r){return n===t||"boolean"==typeof n?s.call(this,n):this.each(function(){var t=e(this);t["none"==t.css("display")?"show":"hide"](n,r)})},e.fn.fadeTo=function(e,t,r){return n(this,e,t,null,r)},e.fn.fadeIn=function(e,t){var n=this.css("opacity");return n>0?this.css("opacity",0):n=1,i.call(this).fadeTo(e,n,t)},e.fn.fadeOut=function(e,t){return r(this,e,null,t)},e.fn.fadeToggle=function(t,n){return this.each(function(){var r=e(this);r[0==r.css("opacity")||"none"==r.css("display")?"fadeIn":"fadeOut"](t,n)})}}(i),function(e){function t(){u=null,f.last&&(f.el.trigger("longTap"),f={})}function n(){u&&clearTimeout(u),u=null}function r(){s&&clearTimeout(s),a&&clearTimeout(a),c&&clearTimeout(c),u&&clearTimeout(u),s=a=c=u=null,f={}}function i(e){return("touch"==e.pointerType||e.pointerType==e.MSPOINTER_TYPE_TOUCH)&&e.isPrimary}function o(e,t){return e.type=="pointer"+t||e.type.toLowerCase()=="mspointer"+t}var s,a,c,u,l,f={};e(document).ready(function(){var d,p,h,m,v=0,y=0;"MSGesture"in window&&((l=new MSGesture).target=document.body),e(document).bind("MSGestureEnd",function(e){var t=e.velocityX>1?"Right":e.velocityX<-1?"Left":e.velocityY>1?"Down":e.velocityY<-1?"Up":null;t&&(f.el.trigger("swipe"),f.el.trigger("swipe"+t))}).on("touchstart MSPointerDown pointerdown",function(n){(!(m=o(n,"down"))||i(n))&&(h=m?n:n.touches[0],n.touches&&1===n.touches.length&&f.x2&&(f.x2=void 0,f.y2=void 0),d=Date.now(),p=d-(f.last||d),f.el=e("tagName"in h.target?h.target:h.target.parentNode),s&&clearTimeout(s),f.x1=h.pageX,f.y1=h.pageY,p>0&&250>=p&&(f.isDoubleTap=!0),f.last=d,u=setTimeout(t,750),l&&m&&l.addPointer(n.pointerId))}).on("touchmove MSPointerMove pointermove",function(e){(!(m=o(e,"move"))||i(e))&&(h=m?e:e.touches[0],n(),f.x2=h.pageX,f.y2=h.pageY,v+=Math.abs(f.x1-f.x2),y+=Math.abs(f.y1-f.y2))}).on("touchend MSPointerUp pointerup",function(t){(!(m=o(t,"up"))||i(t))&&(n(),f.x2&&Math.abs(f.x1-f.x2)>30||f.y2&&Math.abs(f.y1-f.y2)>30?c=setTimeout(function(){f.el.trigger("swipe"),f.el.trigger("swipe"+function(e,t,n,r){return Math.abs(e-t)>=Math.abs(n-r)?e-t>0?"Left":"Right":n-r>0?"Up":"Down"}(f.x1,f.x2,f.y1,f.y2)),f={}},0):"last"in f&&(30>v&&30>y?a=setTimeout(function(){var t=e.Event("tap");t.cancelTouch=r,f.el.trigger(t),f.isDoubleTap?(f.el&&f.el.trigger("doubleTap"),f={}):s=setTimeout(function(){s=null,f.el&&f.el.trigger("singleTap"),f={}},250)},0):f={}),v=y=0)}).on("touchcancel MSPointerCancel pointercancel",r),e(window).on("scroll",r)}),["swipe","swipeLeft","swipeRight","swipeUp","swipeDown","doubleTap","tap","singleTap","longTap"].forEach(function(t){e.fn[t]=function(e){return this.on(t,e)}})}(i),function(e){if(e.os.ios){var t={};e(document).bind("gesturestart",function(e){var n=Date.now();t.last,t.target=function(e){return"tagName"in e?e:e.parentNode}(e.target),t.e1=e.scale,t.last=n}).bind("gesturechange",function(e){t.e2=e.scale}).bind("gestureend",function(){t.e2>0?(0!=Math.abs(t.e1-t.e2)&&e(t.target).trigger("pinch")&&e(t.target).trigger("pinch"+(t.e1-t.e2>0?"In":"Out")),t.e1=t.e2=t.last=0):"last"in t&&(t={})}),["pinch","pinchIn","pinchOut"].forEach(function(t){e.fn[t]=function(e){return this.bind(t,e)}})}}(i)},"./src/main.js":function(e,t,n){"use strict";n("./src/js/zepto.js"),n("./src/js/index.js");var r=function(e){return e&&e.__esModule?e:{default:e}}(n("./src/js/es6_test.js"));n("./src/css/css.css"),r.default.test(),console.log("hello world")}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9jc3MuY3NzPzIyMDAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2VzNl90ZXN0LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvemVwdG8uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21haW4uanMiXSwibmFtZXMiOlsicGFyZW50SG90VXBkYXRlQ2FsbGJhY2siLCJ3aW5kb3ciLCJjaHVua0lkIiwibW9yZU1vZHVsZXMiLCJob3RBdmFpbGFibGVGaWxlc01hcCIsImhvdFJlcXVlc3RlZEZpbGVzTWFwIiwibW9kdWxlSWQiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJob3RVcGRhdGUiLCJob3RXYWl0aW5nRmlsZXMiLCJob3RDaHVua3NMb2FkaW5nIiwiaG90VXBkYXRlRG93bmxvYWRlZCIsImhvdEFkZFVwZGF0ZUNodW5rIiwiaG90Q3VycmVudENoaWxkTW9kdWxlIiwiaG90QXBwbHlPblVwZGF0ZSIsImhvdEN1cnJlbnRIYXNoIiwiaG90UmVxdWVzdFRpbWVvdXQiLCJob3RDdXJyZW50TW9kdWxlRGF0YSIsImhvdEN1cnJlbnRQYXJlbnRzIiwiaG90Q3VycmVudFBhcmVudHNUZW1wIiwiaG90Q3JlYXRlUmVxdWlyZSIsIm1lIiwiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJmbiIsInJlcXVlc3QiLCJob3QiLCJhY3RpdmUiLCJwYXJlbnRzIiwiaW5kZXhPZiIsInB1c2giLCJjaGlsZHJlbiIsImNvbnNvbGUiLCJ3YXJuIiwiT2JqZWN0RmFjdG9yeSIsIm5hbWUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwic2V0IiwidmFsdWUiLCJkZWZpbmVQcm9wZXJ0eSIsImUiLCJob3RTdGF0dXMiLCJob3RTZXRTdGF0dXMiLCJ0aGVuIiwiZmluaXNoQ2h1bmtMb2FkaW5nIiwiZXJyIiwiaG90V2FpdGluZ0ZpbGVzTWFwIiwiaG90RW5zdXJlVXBkYXRlQ2h1bmsiLCJ0IiwibW9kZSIsImhvdFN0YXR1c0hhbmRsZXJzIiwibmV3U3RhdHVzIiwiaSIsImxlbmd0aCIsImhvdERlZmVycmVkIiwiaG90VXBkYXRlTmV3SGFzaCIsInRvTW9kdWxlSWQiLCJpZCIsImhvdENoZWNrIiwiYXBwbHkiLCJFcnJvciIsInJlcXVlc3RUaW1lb3V0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJYTUxIdHRwUmVxdWVzdCIsInJlcXVlc3RQYXRoIiwicCIsIm9wZW4iLCJ0aW1lb3V0Iiwic2VuZCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJ1cGRhdGUiLCJKU09OIiwicGFyc2UiLCJyZXNwb25zZVRleHQiLCJob3REb3dubG9hZE1hbmlmZXN0IiwiYyIsImgiLCJwcm9taXNlIiwiaGVhZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzY3JpcHQiLCJjcmVhdGVFbGVtZW50IiwiY2hhcnNldCIsInNyYyIsImFwcGVuZENoaWxkIiwiaG90RG93bmxvYWRVcGRhdGVDaHVuayIsImRlZmVycmVkIiwiaG90QXBwbHkiLCJyZXN1bHQiLCJvdXRkYXRlZE1vZHVsZXMiLCJvcHRpb25zIiwiY2IiLCJqIiwibW9kdWxlIiwiZ2V0QWZmZWN0ZWRTdHVmZiIsInVwZGF0ZU1vZHVsZUlkIiwib3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJxdWV1ZSIsInNsaWNlIiwibWFwIiwiY2hhaW4iLCJxdWV1ZUl0ZW0iLCJwb3AiLCJfc2VsZkFjY2VwdGVkIiwiX3NlbGZEZWNsaW5lZCIsInR5cGUiLCJfbWFpbiIsInBhcmVudElkIiwicGFyZW50IiwiX2RlY2xpbmVkRGVwZW5kZW5jaWVzIiwiY29uY2F0IiwiX2FjY2VwdGVkRGVwZW5kZW5jaWVzIiwiYWRkQWxsVG9TZXQiLCJhIiwiYiIsIml0ZW0iLCJhcHBsaWVkVXBkYXRlIiwid2FyblVuZXhwZWN0ZWRSZXF1aXJlIiwiYWJvcnRFcnJvciIsImRvQXBwbHkiLCJkb0Rpc3Bvc2UiLCJjaGFpbkluZm8iLCJqb2luIiwib25EZWNsaW5lZCIsImlnbm9yZURlY2xpbmVkIiwib25VbmFjY2VwdGVkIiwiaWdub3JlVW5hY2NlcHRlZCIsIm9uQWNjZXB0ZWQiLCJvbkRpc3Bvc2VkIiwiaWR4Iiwib3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzIiwiZXJyb3JIYW5kbGVyIiwia2V5cyIsImZvckVhY2giLCJpbnN0YWxsZWRDaHVua3MiLCJob3REaXNwb3NlQ2h1bmsiLCJkZXBlbmRlbmN5IiwibW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJkYXRhIiwiZGlzcG9zZUhhbmRsZXJzIiwiX2Rpc3Bvc2VIYW5kbGVycyIsImNoaWxkIiwic3BsaWNlIiwibW9kdWxlcyIsImVycm9yIiwiY2FsbGJhY2tzIiwib25FcnJvcmVkIiwiZGVwZW5kZW5jeUlkIiwiaWdub3JlRXJyb3JlZCIsImVycjIiLCJvcmlnaW5hbEVycm9yIiwiZXhwb3J0cyIsImwiLCJhY2NlcHQiLCJkZXAiLCJjYWxsYmFjayIsInVuZGVmaW5lZCIsImRlY2xpbmUiLCJkaXNwb3NlIiwiYWRkRGlzcG9zZUhhbmRsZXIiLCJyZW1vdmVEaXNwb3NlSGFuZGxlciIsImNoZWNrIiwiYWRkU3RhdHVzSGFuZGxlciIsInJlbW92ZVN0YXR1c0hhbmRsZXIiLCJob3RDcmVhdGVNb2R1bGUiLCJtIiwiZCIsImdldHRlciIsIm8iLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicyIsInN0eWxlc0luRG9tIiwiaXNPbGRJRSIsIm1lbW8iLCJ0aGlzIiwiYXJndW1lbnRzIiwibWVtb2l6ZSIsImFsbCIsImF0b2IiLCJnZXRFbGVtZW50IiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwicmVmcyIsInBhcnRzIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJsaXN0IiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsInNvdXJjZU1hcCIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJhdHRycyIsIm5vbmNlIiwibmMiLCJnZXROb25jZSIsImFkZEF0dHJzIiwiZWwiLCJzZXRBdHRyaWJ1dGUiLCJvYmoiLCJyZW1vdmUiLCJ0cmFuc2Zvcm0iLCJkZWZhdWx0Iiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwiYnRvYSIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzdHJpbmdpZnkiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJyZXBsYWNlVGV4dCIsInRleHRTdG9yZSIsImluZGV4IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJsb2NhdGlvbiIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwiZnVsbE1hdGNoIiwib3JpZ1VybCIsIm5ld1VybCIsInVucXVvdGVkT3JpZ1VybCIsInRyaW0iLCIkMSIsInRlc3QiLCJjb250ZW50IiwiaG1yIiwibG9jYWxzIiwibmV3Q29udGVudCIsImxvZyIsImluZGV4RnVuIiwiaW5pdCIsInVpIiwic2NvcmUiLCIkIiwiYm9keSIsImRhdGFXcmFwIiwicmVnRXZlbnQiLCJnZXRDcmVkaXQiLCJwb3BIaWRlIiwicG9wU2hvdyIsInNob3ciLCJnZXRGb3JtYXRUaW1lRnJvbVNlY29uZHMiLCJzZWNvbmRzIiwiZHN0RGF0ZSIsIkRhdGUiLCJtb250aCIsImdldE1vbnRoIiwib0RheSIsImdldERhdGUiLCJvSG91ciIsImdldEhvdXJzIiwib01pbiIsImdldE1pbnV0ZXMiLCJnZXRGdWxsWWVhciIsIl90aGlzIiwidXJsX3BhcmEiLCJzZWFyY2giLCJzdWJzdHJpbmciLCJhamF4IiwidXJsIiwiZGF0YXR5cGUiLCJzdWNjZXNzIiwicmV0IiwiaHRtbCIsImhpc3RvcnkiLCJoaWRlIiwiY2hhbmdlIiwibGlzdF9zY29yZSIsImNsYXNzX25hbWUiLCJwYXJzZUludCIsInRpbWVzdGFtcCIsInJlYXNvbiIsInRleHQiLCJhcHBlbmQiLCJzdGF0aXN0aWNzIiwiY2xhc3NfaWQiLCJwYXJhbSIsInBhcmFtQ2hhbmdlSnNvbiIsInN5c19pZCIsInR5cGVfaWQiLCJzdWJfdHlwZSIsInVzZXJfaWQiLCJvcGVuaWQiLCJ1c2VyX3R5cGUiLCJhc3luYyIsImpzb24iLCJhcnIiLCJzcGxpdCIsImsiLCJtc2ciLCJaZXB0byIsIl8iLCJTdHJpbmciLCJFIiwiUyIsIkEiLCJMIiwibm9kZVR5cGUiLCJET0NVTUVOVF9OT0RFIiwiWiIsIkQiLCJnZXRQcm90b3R5cGVPZiIsIkYiLCJ6IiwidG9Mb3dlckNhc2UiLCJJIiwiZiIsIlJlZ0V4cCIsInEiLCJIIiwiVSIsIk0iLCJWIiwiWCIsIlkiLCJyZW1vdmVBdHRyaWJ1dGUiLCJXIiwiY2xhc3NOYW1lIiwiYmFzZVZhbCIsIkoiLCJpc05hTiIsIk51bWJlciIsInBhcnNlSlNPTiIsIlAiLCJDIiwidSIsImNvbHVtbi1jb3VudCIsImNvbHVtbnMiLCJmb250LXdlaWdodCIsImxpbmUtaGVpZ2h0Iiwib3BhY2l0eSIsInotaW5kZXgiLCJ6b29tIiwiZyIsInkiLCJ3IiwidHIiLCJ0Ym9keSIsInRoZWFkIiwidGZvb3QiLCJ0ZCIsInRoIiwiKiIsIngiLCJUIiwidG9TdHJpbmciLCJPIiwiTiIsInRhYmluZGV4IiwicmVhZG9ubHkiLCJmb3IiLCJjbGFzcyIsIm1heGxlbmd0aCIsImNlbGxzcGFjaW5nIiwiY2VsbHBhZGRpbmciLCJyb3dzcGFuIiwiY29sc3BhbiIsInVzZW1hcCIsImZyYW1lYm9yZGVyIiwiY29udGVudGVkaXRhYmxlIiwiQXJyYXkiLCJpc0FycmF5IiwibWF0Y2hlcyIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtYXRjaGVzU2VsZWN0b3IiLCJxc2EiLCJ0b1VwcGVyQ2FzZSIsImZyYWdtZW50IiwiaW5uZXJIVE1MIiwiZWFjaCIsImF0dHIiLCJfX3Byb3RvX18iLCJzZWxlY3RvciIsImlzWiIsImZpbmQiLCJyZWFkeSIsIlIiLCJleHRlbmQiLCJzaGlmdCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb250YWlucyIsImRvY3VtZW50RWxlbWVudCIsImlzRnVuY3Rpb24iLCJpc1dpbmRvdyIsImlzUGxhaW5PYmplY3QiLCJpc0VtcHR5T2JqZWN0IiwiaW5BcnJheSIsImNhbWVsQ2FzZSIsInV1aWQiLCJzdXBwb3J0IiwiZXhwciIsImdyZXAiLCJyZWR1Y2UiLCJzb3J0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvQXJyYXkiLCJzaXplIiwiZXZlcnkiLCJub3QiLCJhZGQiLCJpcyIsImhhcyIsImVxIiwiZmlyc3QiLCJsYXN0IiwiX3R5cGVvZiIsInNvbWUiLCJjbG9zZXN0IiwicGx1Y2siLCJjb250ZW50cyIsInNpYmxpbmdzIiwiZW1wdHkiLCJkaXNwbGF5IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJCIiwibm9kZU5hbWUiLCJyZXBsYWNlV2l0aCIsIndyYXAiLCJ3cmFwQWxsIiwiY2xvbmVOb2RlIiwid3JhcElubmVyIiwidW53cmFwIiwiY2xvbmUiLCJ0b2dnbGUiLCJwcmV2IiwibmV4dCIsInRleHRDb250ZW50IiwiZ2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0ciIsInByb3AiLCJ2YWwiLCJtdWx0aXBsZSIsInNlbGVjdGVkIiwib2Zmc2V0Iiwib2Zmc2V0UGFyZW50IiwidG9wIiwibGVmdCIsInBvc2l0aW9uIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicGFnZVhPZmZzZXQiLCJwYWdlWU9mZnNldCIsIndpZHRoIiwiTWF0aCIsInJvdW5kIiwiaGVpZ2h0IiwicmVtb3ZlUHJvcGVydHkiLCJoYXNDbGFzcyIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsInNjcm9sbFRvcCIsInNjcm9sbFRvIiwic2Nyb2xsWCIsInNjcm9sbExlZnQiLCJzY3JvbGxZIiwicGFyc2VGbG9hdCIsImRldGFjaCIsIkciLCJldmFsIiwidW5pcSIsImRlc2VyaWFsaXplVmFsdWUiLCJ6ZXB0byIsIl96aWQiLCJzZWwiLCJkZWwiLCJ2IiwicmVsYXRlZFRhcmdldCIsInByb3h5IiwiaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQiLCJfYXJncyIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImdldFByZXZlbnREZWZhdWx0Iiwib3JpZ2luYWxFdmVudCIsImZvY3VzIiwiYmx1ciIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwiY2xpY2siLCJtb3VzZWRvd24iLCJtb3VzZXVwIiwibW91c2Vtb3ZlIiwiZXZlbnQiLCJ1bnNoaWZ0IiwiVHlwZUVycm9yIiwib24iLCJ1bmJpbmQiLCJvZmYiLCJvbmUiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJkZWxlZ2F0ZSIsInVuZGVsZWdhdGUiLCJsaXZlIiwiZGllIiwiY3VycmVudFRhcmdldCIsImxpdmVGaXJlZCIsInRyaWdnZXIiLCJFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJ0cmlnZ2VySGFuZGxlciIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiZ2xvYmFsIiwiY29udGV4dCIsImJlZm9yZVNlbmQiLCJyZXNvbHZlV2l0aCIsInJlamVjdFdpdGgiLCJjb21wbGV0ZSIsImRhdGFUeXBlIiwiYWpheEpTT05QIiwianNvbnBDYWxsYmFjayIsImFib3J0IiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImFqYXhTZXR0aW5ncyIsInhociIsImFjY2VwdHMiLCJ4bWwiLCJjcm9zc0RvbWFpbiIsInByb2Nlc3NEYXRhIiwiY2FjaGUiLCJEZWZlcnJlZCIsIiQyIiwidHJhZGl0aW9uYWwiLCJub3ciLCJqc29ucCIsInNldFJlcXVlc3RIZWFkZXIiLCJtaW1lVHlwZSIsIm92ZXJyaWRlTWltZVR5cGUiLCJjb250ZW50VHlwZSIsImhlYWRlcnMiLCJnZXRSZXNwb25zZUhlYWRlciIsInJlc3BvbnNlWE1MIiwic3RhdHVzVGV4dCIsInhockZpZWxkcyIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJwb3N0IiwiZ2V0SlNPTiIsImxvYWQiLCJzZXJpYWxpemVBcnJheSIsImVsZW1lbnRzIiwiZGlzYWJsZWQiLCJjaGVja2VkIiwic2VyaWFsaXplIiwic3VibWl0IiwiX19aIiwib3MiLCJicm93c2VyIiwibWF0Y2giLCJ3ZWJraXQiLCJ2ZXJzaW9uIiwiYW5kcm9pZCIsImlvcyIsImlwaG9uZSIsImlwYWQiLCJpcG9kIiwid3AiLCJ3ZWJvcyIsInRvdWNocGFkIiwiYmxhY2tiZXJyeSIsImJiMTAiLCJyaW10YWJsZXRvcyIsInBsYXlib29rIiwia2luZGxlIiwic2lsayIsImNocm9tZSIsImZpcmVmb3giLCJpZSIsInNhZmFyaSIsIndlYnZpZXciLCJ0YWJsZXQiLCJwaG9uZSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIl9fZGV0ZWN0IiwiV2Via2l0IiwiTW96IiwiZngiLCJ0cmFuc2l0aW9uUHJvcGVydHkiLCJzcGVlZHMiLCJfZGVmYXVsdCIsImZhc3QiLCJzbG93IiwiY3NzUHJlZml4IiwidHJhbnNpdGlvbkVuZCIsImFuaW1hdGlvbkVuZCIsImFuaW1hdGUiLCJlYXNpbmciLCJkZWxheSIsImR1cmF0aW9uIiwiYW5pbSIsImNsaWVudExlZnQiLCJzY2FsZSIsImZhZGVUbyIsImZhZGVJbiIsImZhZGVPdXQiLCJmYWRlVG9nZ2xlIiwicG9pbnRlclR5cGUiLCJNU1BPSU5URVJfVFlQRV9UT1VDSCIsImlzUHJpbWFyeSIsIk1TR2VzdHVyZSIsInZlbG9jaXR5WCIsInZlbG9jaXR5WSIsInRvdWNoZXMiLCJ4MiIsInkyIiwieDEiLCJwYWdlWCIsInkxIiwicGFnZVkiLCJpc0RvdWJsZVRhcCIsImFkZFBvaW50ZXIiLCJwb2ludGVySWQiLCJhYnMiLCJjYW5jZWxUb3VjaCIsImUxIiwiZTIiLCJlczZfdGVzdCJdLCJtYXBwaW5ncyI6ImFBR0EsSUFBQUEsRUFBQUMsT0FBQSxpQkFDQUEsT0FBQSxpQkFDQSxTQUFBQyxFQUFBQyxJQWlSQSxTQUFBRCxFQUFBQyxHQUNBLElBQUFDLEVBQUFGLEtBQUFHLEVBQUFILEdBQ0EsT0FFQSxRQUFB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RTJKLFFBQVF1WCxRQUFRLFVBQVUxZ0IsRUFBRVIsRUFBRTJKLFFBQVF1WCxRQUFRLFNBQVNsaEIsRUFBRTBvQixHQUFHMW9CLEVBQUUyb0IsR0FBRyxFQUFFLEtBQUssUUFBUTNvQixFQUFFMG9CLEdBQUcxb0IsRUFBRTJvQixHQUFHM29CLEVBQUVpYixLQUFLLEdBQUcsU0FBU2piLElBQUlBLFNBQVMsUUFBUSxVQUFVLFlBQVlrRyxRQUFRLFNBQVNsRyxHQUFHUSxFQUFFMUIsR0FBR2tCLEdBQUcsU0FBU1EsR0FBRyxPQUFPNkksS0FBS1IsS0FBSzdJLEVBQUVRLE9BRDR3OUIsQ0FDcHc5Qm1ULGlEQ0Q5WjlVLEVBQUEscUJBQ0FBLEVBQUEscUJBQ0Esd0RBQUFBLEVBQUEseUJBQ0FBLEVBQUEscUJBQ0ErcEIsVUFBU3BaLE9BSVRsUSxRQUFRdVEsSUFBSSIsImZpbGUiOiJidW5kbGUtYzNkNDgzMGY5MDNjZmQzM2ZmMzguanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHRmdW5jdGlvbiBob3REaXNwb3NlQ2h1bmsoY2h1bmtJZCkge1xuIFx0XHRkZWxldGUgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuIFx0fVxuIFx0dmFyIHBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrID0gd2luZG93W1wid2VicGFja0hvdFVwZGF0ZVwiXTtcbiBcdHdpbmRvd1tcIndlYnBhY2tIb3RVcGRhdGVcIl0gPSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdGZ1bmN0aW9uIHdlYnBhY2tIb3RVcGRhdGVDYWxsYmFjayhjaHVua0lkLCBtb3JlTW9kdWxlcykge1xuIFx0XHRob3RBZGRVcGRhdGVDaHVuayhjaHVua0lkLCBtb3JlTW9kdWxlcyk7XG4gXHRcdGlmIChwYXJlbnRIb3RVcGRhdGVDYWxsYmFjaykgcGFyZW50SG90VXBkYXRlQ2FsbGJhY2soY2h1bmtJZCwgbW9yZU1vZHVsZXMpO1xuIFx0fSA7XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90RG93bmxvYWRVcGRhdGVDaHVuayhjaHVua0lkKSB7XG4gXHRcdHZhciBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdO1xuIFx0XHR2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiBcdFx0c2NyaXB0LmNoYXJzZXQgPSBcInV0Zi04XCI7XG4gXHRcdHNjcmlwdC5zcmMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBcIlwiICsgY2h1bmtJZCArIFwiLlwiICsgaG90Q3VycmVudEhhc2ggKyBcIi5ob3QtdXBkYXRlLmpzXCI7XG4gXHRcdGlmIChudWxsKSBzY3JpcHQuY3Jvc3NPcmlnaW4gPSBudWxsO1xuIFx0XHRoZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90RG93bmxvYWRNYW5pZmVzdChyZXF1ZXN0VGltZW91dCkge1xuIFx0XHRyZXF1ZXN0VGltZW91dCA9IHJlcXVlc3RUaW1lb3V0IHx8IDEwMDAwO1xuIFx0XHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gXHRcdFx0aWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCA9PT0gXCJ1bmRlZmluZWRcIikge1xuIFx0XHRcdFx0cmV0dXJuIHJlamVjdChuZXcgRXJyb3IoXCJObyBicm93c2VyIHN1cHBvcnRcIikpO1xuIFx0XHRcdH1cbiBcdFx0XHR0cnkge1xuIFx0XHRcdFx0dmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiBcdFx0XHRcdHZhciByZXF1ZXN0UGF0aCA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyBob3RDdXJyZW50SGFzaCArIFwiLmhvdC11cGRhdGUuanNvblwiO1xuIFx0XHRcdFx0cmVxdWVzdC5vcGVuKFwiR0VUXCIsIHJlcXVlc3RQYXRoLCB0cnVlKTtcbiBcdFx0XHRcdHJlcXVlc3QudGltZW91dCA9IHJlcXVlc3RUaW1lb3V0O1xuIFx0XHRcdFx0cmVxdWVzdC5zZW5kKG51bGwpO1xuIFx0XHRcdH0gY2F0Y2ggKGVycikge1xuIFx0XHRcdFx0cmV0dXJuIHJlamVjdChlcnIpO1xuIFx0XHRcdH1cbiBcdFx0XHRyZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuIFx0XHRcdFx0aWYgKHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkgcmV0dXJuO1xuIFx0XHRcdFx0aWYgKHJlcXVlc3Quc3RhdHVzID09PSAwKSB7XG4gXHRcdFx0XHRcdC8vIHRpbWVvdXRcbiBcdFx0XHRcdFx0cmVqZWN0KFxuIFx0XHRcdFx0XHRcdG5ldyBFcnJvcihcIk1hbmlmZXN0IHJlcXVlc3QgdG8gXCIgKyByZXF1ZXN0UGF0aCArIFwiIHRpbWVkIG91dC5cIilcbiBcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDQwNCkge1xuIFx0XHRcdFx0XHQvLyBubyB1cGRhdGUgYXZhaWxhYmxlXG4gXHRcdFx0XHRcdHJlc29sdmUoKTtcbiBcdFx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5zdGF0dXMgIT09IDIwMCAmJiByZXF1ZXN0LnN0YXR1cyAhPT0gMzA0KSB7XG4gXHRcdFx0XHRcdC8vIG90aGVyIGZhaWx1cmVcbiBcdFx0XHRcdFx0cmVqZWN0KG5ldyBFcnJvcihcIk1hbmlmZXN0IHJlcXVlc3QgdG8gXCIgKyByZXF1ZXN0UGF0aCArIFwiIGZhaWxlZC5cIikpO1xuIFx0XHRcdFx0fSBlbHNlIHtcbiBcdFx0XHRcdFx0Ly8gc3VjY2Vzc1xuIFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdHZhciB1cGRhdGUgPSBKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiBcdFx0XHRcdFx0fSBjYXRjaCAoZSkge1xuIFx0XHRcdFx0XHRcdHJlamVjdChlKTtcbiBcdFx0XHRcdFx0XHRyZXR1cm47XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0cmVzb2x2ZSh1cGRhdGUpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH07XG4gXHRcdH0pO1xuIFx0fVxuXG4gXHR2YXIgaG90QXBwbHlPblVwZGF0ZSA9IHRydWU7XG4gXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdHZhciBob3RDdXJyZW50SGFzaCA9IFwiYzNkNDgzMGY5MDNjZmQzM2ZmMzhcIjtcbiBcdHZhciBob3RSZXF1ZXN0VGltZW91dCA9IDEwMDAwO1xuIFx0dmFyIGhvdEN1cnJlbnRNb2R1bGVEYXRhID0ge307XG4gXHR2YXIgaG90Q3VycmVudENoaWxkTW9kdWxlO1xuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHR2YXIgaG90Q3VycmVudFBhcmVudHMgPSBbXTtcbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0dmFyIGhvdEN1cnJlbnRQYXJlbnRzVGVtcCA9IFtdO1xuXG4gXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdGZ1bmN0aW9uIGhvdENyZWF0ZVJlcXVpcmUobW9kdWxlSWQpIHtcbiBcdFx0dmFyIG1lID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdGlmICghbWUpIHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fO1xuIFx0XHR2YXIgZm4gPSBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gXHRcdFx0aWYgKG1lLmhvdC5hY3RpdmUpIHtcbiBcdFx0XHRcdGlmIChpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdKSB7XG4gXHRcdFx0XHRcdGlmIChpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHMuaW5kZXhPZihtb2R1bGVJZCkgPT09IC0xKSB7XG4gXHRcdFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XS5wYXJlbnRzLnB1c2gobW9kdWxlSWQpO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHRob3RDdXJyZW50UGFyZW50cyA9IFttb2R1bGVJZF07XG4gXHRcdFx0XHRcdGhvdEN1cnJlbnRDaGlsZE1vZHVsZSA9IHJlcXVlc3Q7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAobWUuY2hpbGRyZW4uaW5kZXhPZihyZXF1ZXN0KSA9PT0gLTEpIHtcbiBcdFx0XHRcdFx0bWUuY2hpbGRyZW4ucHVzaChyZXF1ZXN0KTtcbiBcdFx0XHRcdH1cbiBcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0Y29uc29sZS53YXJuKFxuIFx0XHRcdFx0XHRcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArXG4gXHRcdFx0XHRcdFx0cmVxdWVzdCArXG4gXHRcdFx0XHRcdFx0XCIpIGZyb20gZGlzcG9zZWQgbW9kdWxlIFwiICtcbiBcdFx0XHRcdFx0XHRtb2R1bGVJZFxuIFx0XHRcdFx0KTtcbiBcdFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW107XG4gXHRcdFx0fVxuIFx0XHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKHJlcXVlc3QpO1xuIFx0XHR9O1xuIFx0XHR2YXIgT2JqZWN0RmFjdG9yeSA9IGZ1bmN0aW9uIE9iamVjdEZhY3RvcnkobmFtZSkge1xuIFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcbiBcdFx0XHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX19bbmFtZV07XG4gXHRcdFx0XHR9LFxuIFx0XHRcdFx0c2V0OiBmdW5jdGlvbih2YWx1ZSkge1xuIFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fW25hbWVdID0gdmFsdWU7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fTtcbiBcdFx0fTtcbiBcdFx0Zm9yICh2YXIgbmFtZSBpbiBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gXHRcdFx0aWYgKFxuIFx0XHRcdFx0T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9fd2VicGFja19yZXF1aXJlX18sIG5hbWUpICYmXG4gXHRcdFx0XHRuYW1lICE9PSBcImVcIiAmJlxuIFx0XHRcdFx0bmFtZSAhPT0gXCJ0XCJcbiBcdFx0XHQpIHtcbiBcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwgbmFtZSwgT2JqZWN0RmFjdG9yeShuYW1lKSk7XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGZuLmUgPSBmdW5jdGlvbihjaHVua0lkKSB7XG4gXHRcdFx0aWYgKGhvdFN0YXR1cyA9PT0gXCJyZWFkeVwiKSBob3RTZXRTdGF0dXMoXCJwcmVwYXJlXCIpO1xuIFx0XHRcdGhvdENodW5rc0xvYWRpbmcrKztcbiBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5lKGNodW5rSWQpLnRoZW4oZmluaXNoQ2h1bmtMb2FkaW5nLCBmdW5jdGlvbihlcnIpIHtcbiBcdFx0XHRcdGZpbmlzaENodW5rTG9hZGluZygpO1xuIFx0XHRcdFx0dGhyb3cgZXJyO1xuIFx0XHRcdH0pO1xuXG4gXHRcdFx0ZnVuY3Rpb24gZmluaXNoQ2h1bmtMb2FkaW5nKCkge1xuIFx0XHRcdFx0aG90Q2h1bmtzTG9hZGluZy0tO1xuIFx0XHRcdFx0aWYgKGhvdFN0YXR1cyA9PT0gXCJwcmVwYXJlXCIpIHtcbiBcdFx0XHRcdFx0aWYgKCFob3RXYWl0aW5nRmlsZXNNYXBbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdFx0XHRob3RFbnN1cmVVcGRhdGVDaHVuayhjaHVua0lkKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRpZiAoaG90Q2h1bmtzTG9hZGluZyA9PT0gMCAmJiBob3RXYWl0aW5nRmlsZXMgPT09IDApIHtcbiBcdFx0XHRcdFx0XHRob3RVcGRhdGVEb3dubG9hZGVkKCk7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdH07XG4gXHRcdGZuLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRcdGlmIChtb2RlICYgMSkgdmFsdWUgPSBmbih2YWx1ZSk7XG4gXHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18udCh2YWx1ZSwgbW9kZSAmIH4xKTtcbiBcdFx0fTtcbiBcdFx0cmV0dXJuIGZuO1xuIFx0fVxuXG4gXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdGZ1bmN0aW9uIGhvdENyZWF0ZU1vZHVsZShtb2R1bGVJZCkge1xuIFx0XHR2YXIgaG90ID0ge1xuIFx0XHRcdC8vIHByaXZhdGUgc3R1ZmZcbiBcdFx0XHRfYWNjZXB0ZWREZXBlbmRlbmNpZXM6IHt9LFxuIFx0XHRcdF9kZWNsaW5lZERlcGVuZGVuY2llczoge30sXG4gXHRcdFx0X3NlbGZBY2NlcHRlZDogZmFsc2UsXG4gXHRcdFx0X3NlbGZEZWNsaW5lZDogZmFsc2UsXG4gXHRcdFx0X2Rpc3Bvc2VIYW5kbGVyczogW10sXG4gXHRcdFx0X21haW46IGhvdEN1cnJlbnRDaGlsZE1vZHVsZSAhPT0gbW9kdWxlSWQsXG5cbiBcdFx0XHQvLyBNb2R1bGUgQVBJXG4gXHRcdFx0YWN0aXZlOiB0cnVlLFxuIFx0XHRcdGFjY2VwdDogZnVuY3Rpb24oZGVwLCBjYWxsYmFjaykge1xuIFx0XHRcdFx0aWYgKGRlcCA9PT0gdW5kZWZpbmVkKSBob3QuX3NlbGZBY2NlcHRlZCA9IHRydWU7XG4gXHRcdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcImZ1bmN0aW9uXCIpIGhvdC5fc2VsZkFjY2VwdGVkID0gZGVwO1xuIFx0XHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIilcbiBcdFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspXG4gXHRcdFx0XHRcdFx0aG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBbaV1dID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcbiBcdFx0XHRcdGVsc2UgaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBdID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcbiBcdFx0XHR9LFxuIFx0XHRcdGRlY2xpbmU6IGZ1bmN0aW9uKGRlcCkge1xuIFx0XHRcdFx0aWYgKGRlcCA9PT0gdW5kZWZpbmVkKSBob3QuX3NlbGZEZWNsaW5lZCA9IHRydWU7XG4gXHRcdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiKVxuIFx0XHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKylcbiBcdFx0XHRcdFx0XHRob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSB0cnVlO1xuIFx0XHRcdFx0ZWxzZSBob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcF0gPSB0cnVlO1xuIFx0XHRcdH0sXG4gXHRcdFx0ZGlzcG9zZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiBcdFx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuIFx0XHRcdH0sXG4gXHRcdFx0YWRkRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gXHRcdFx0XHRob3QuX2Rpc3Bvc2VIYW5kbGVycy5wdXNoKGNhbGxiYWNrKTtcbiBcdFx0XHR9LFxuIFx0XHRcdHJlbW92ZURpc3Bvc2VIYW5kbGVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuIFx0XHRcdFx0dmFyIGlkeCA9IGhvdC5fZGlzcG9zZUhhbmRsZXJzLmluZGV4T2YoY2FsbGJhY2spO1xuIFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcbiBcdFx0XHR9LFxuXG4gXHRcdFx0Ly8gTWFuYWdlbWVudCBBUElcbiBcdFx0XHRjaGVjazogaG90Q2hlY2ssXG4gXHRcdFx0YXBwbHk6IGhvdEFwcGx5LFxuIFx0XHRcdHN0YXR1czogZnVuY3Rpb24obCkge1xuIFx0XHRcdFx0aWYgKCFsKSByZXR1cm4gaG90U3RhdHVzO1xuIFx0XHRcdFx0aG90U3RhdHVzSGFuZGxlcnMucHVzaChsKTtcbiBcdFx0XHR9LFxuIFx0XHRcdGFkZFN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uKGwpIHtcbiBcdFx0XHRcdGhvdFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG4gXHRcdFx0fSxcbiBcdFx0XHRyZW1vdmVTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbihsKSB7XG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90U3RhdHVzSGFuZGxlcnMuaW5kZXhPZihsKTtcbiBcdFx0XHRcdGlmIChpZHggPj0gMCkgaG90U3RhdHVzSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0fSxcblxuIFx0XHRcdC8vaW5oZXJpdCBmcm9tIHByZXZpb3VzIGRpc3Bvc2UgY2FsbFxuIFx0XHRcdGRhdGE6IGhvdEN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXVxuIFx0XHR9O1xuIFx0XHRob3RDdXJyZW50Q2hpbGRNb2R1bGUgPSB1bmRlZmluZWQ7XG4gXHRcdHJldHVybiBob3Q7XG4gXHR9XG5cbiBcdHZhciBob3RTdGF0dXNIYW5kbGVycyA9IFtdO1xuIFx0dmFyIGhvdFN0YXR1cyA9IFwiaWRsZVwiO1xuXG4gXHRmdW5jdGlvbiBob3RTZXRTdGF0dXMobmV3U3RhdHVzKSB7XG4gXHRcdGhvdFN0YXR1cyA9IG5ld1N0YXR1cztcbiBcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBob3RTdGF0dXNIYW5kbGVycy5sZW5ndGg7IGkrKylcbiBcdFx0XHRob3RTdGF0dXNIYW5kbGVyc1tpXS5jYWxsKG51bGwsIG5ld1N0YXR1cyk7XG4gXHR9XG5cbiBcdC8vIHdoaWxlIGRvd25sb2FkaW5nXG4gXHR2YXIgaG90V2FpdGluZ0ZpbGVzID0gMDtcbiBcdHZhciBob3RDaHVua3NMb2FkaW5nID0gMDtcbiBcdHZhciBob3RXYWl0aW5nRmlsZXNNYXAgPSB7fTtcbiBcdHZhciBob3RSZXF1ZXN0ZWRGaWxlc01hcCA9IHt9O1xuIFx0dmFyIGhvdEF2YWlsYWJsZUZpbGVzTWFwID0ge307XG4gXHR2YXIgaG90RGVmZXJyZWQ7XG5cbiBcdC8vIFRoZSB1cGRhdGUgaW5mb1xuIFx0dmFyIGhvdFVwZGF0ZSwgaG90VXBkYXRlTmV3SGFzaDtcblxuIFx0ZnVuY3Rpb24gdG9Nb2R1bGVJZChpZCkge1xuIFx0XHR2YXIgaXNOdW1iZXIgPSAraWQgKyBcIlwiID09PSBpZDtcbiBcdFx0cmV0dXJuIGlzTnVtYmVyID8gK2lkIDogaWQ7XG4gXHR9XG5cbiBcdGZ1bmN0aW9uIGhvdENoZWNrKGFwcGx5KSB7XG4gXHRcdGlmIChob3RTdGF0dXMgIT09IFwiaWRsZVwiKSB7XG4gXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiY2hlY2soKSBpcyBvbmx5IGFsbG93ZWQgaW4gaWRsZSBzdGF0dXNcIik7XG4gXHRcdH1cbiBcdFx0aG90QXBwbHlPblVwZGF0ZSA9IGFwcGx5O1xuIFx0XHRob3RTZXRTdGF0dXMoXCJjaGVja1wiKTtcbiBcdFx0cmV0dXJuIGhvdERvd25sb2FkTWFuaWZlc3QoaG90UmVxdWVzdFRpbWVvdXQpLnRoZW4oZnVuY3Rpb24odXBkYXRlKSB7XG4gXHRcdFx0aWYgKCF1cGRhdGUpIHtcbiBcdFx0XHRcdGhvdFNldFN0YXR1cyhcImlkbGVcIik7XG4gXHRcdFx0XHRyZXR1cm4gbnVsbDtcbiBcdFx0XHR9XG4gXHRcdFx0aG90UmVxdWVzdGVkRmlsZXNNYXAgPSB7fTtcbiBcdFx0XHRob3RXYWl0aW5nRmlsZXNNYXAgPSB7fTtcbiBcdFx0XHRob3RBdmFpbGFibGVGaWxlc01hcCA9IHVwZGF0ZS5jO1xuIFx0XHRcdGhvdFVwZGF0ZU5ld0hhc2ggPSB1cGRhdGUuaDtcblxuIFx0XHRcdGhvdFNldFN0YXR1cyhcInByZXBhcmVcIik7XG4gXHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiBcdFx0XHRcdGhvdERlZmVycmVkID0ge1xuIFx0XHRcdFx0XHRyZXNvbHZlOiByZXNvbHZlLFxuIFx0XHRcdFx0XHRyZWplY3Q6IHJlamVjdFxuIFx0XHRcdFx0fTtcbiBcdFx0XHR9KTtcbiBcdFx0XHRob3RVcGRhdGUgPSB7fTtcbiBcdFx0XHR2YXIgY2h1bmtJZCA9IDA7XG4gXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWxvbmUtYmxvY2tzXG4gXHRcdFx0e1xuIFx0XHRcdFx0LypnbG9iYWxzIGNodW5rSWQgKi9cbiBcdFx0XHRcdGhvdEVuc3VyZVVwZGF0ZUNodW5rKGNodW5rSWQpO1xuIFx0XHRcdH1cbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRob3RTdGF0dXMgPT09IFwicHJlcGFyZVwiICYmXG4gXHRcdFx0XHRob3RDaHVua3NMb2FkaW5nID09PSAwICYmXG4gXHRcdFx0XHRob3RXYWl0aW5nRmlsZXMgPT09IDBcbiBcdFx0XHQpIHtcbiBcdFx0XHRcdGhvdFVwZGF0ZURvd25sb2FkZWQoKTtcbiBcdFx0XHR9XG4gXHRcdFx0cmV0dXJuIHByb21pc2U7XG4gXHRcdH0pO1xuIFx0fVxuXG4gXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdGZ1bmN0aW9uIGhvdEFkZFVwZGF0ZUNodW5rKGNodW5rSWQsIG1vcmVNb2R1bGVzKSB7XG4gXHRcdGlmICghaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0gfHwgIWhvdFJlcXVlc3RlZEZpbGVzTWFwW2NodW5rSWRdKVxuIFx0XHRcdHJldHVybjtcbiBcdFx0aG90UmVxdWVzdGVkRmlsZXNNYXBbY2h1bmtJZF0gPSBmYWxzZTtcbiBcdFx0Zm9yICh2YXIgbW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdGhvdFVwZGF0ZVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmICgtLWhvdFdhaXRpbmdGaWxlcyA9PT0gMCAmJiBob3RDaHVua3NMb2FkaW5nID09PSAwKSB7XG4gXHRcdFx0aG90VXBkYXRlRG93bmxvYWRlZCgpO1xuIFx0XHR9XG4gXHR9XG5cbiBcdGZ1bmN0aW9uIGhvdEVuc3VyZVVwZGF0ZUNodW5rKGNodW5rSWQpIHtcbiBcdFx0aWYgKCFob3RBdmFpbGFibGVGaWxlc01hcFtjaHVua0lkXSkge1xuIFx0XHRcdGhvdFdhaXRpbmdGaWxlc01hcFtjaHVua0lkXSA9IHRydWU7XG4gXHRcdH0gZWxzZSB7XG4gXHRcdFx0aG90UmVxdWVzdGVkRmlsZXNNYXBbY2h1bmtJZF0gPSB0cnVlO1xuIFx0XHRcdGhvdFdhaXRpbmdGaWxlcysrO1xuIFx0XHRcdGhvdERvd25sb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90VXBkYXRlRG93bmxvYWRlZCgpIHtcbiBcdFx0aG90U2V0U3RhdHVzKFwicmVhZHlcIik7XG4gXHRcdHZhciBkZWZlcnJlZCA9IGhvdERlZmVycmVkO1xuIFx0XHRob3REZWZlcnJlZCA9IG51bGw7XG4gXHRcdGlmICghZGVmZXJyZWQpIHJldHVybjtcbiBcdFx0aWYgKGhvdEFwcGx5T25VcGRhdGUpIHtcbiBcdFx0XHQvLyBXcmFwIGRlZmVycmVkIG9iamVjdCBpbiBQcm9taXNlIHRvIG1hcmsgaXQgYXMgYSB3ZWxsLWhhbmRsZWQgUHJvbWlzZSB0b1xuIFx0XHRcdC8vIGF2b2lkIHRyaWdnZXJpbmcgdW5jYXVnaHQgZXhjZXB0aW9uIHdhcm5pbmcgaW4gQ2hyb21lLlxuIFx0XHRcdC8vIFNlZSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NjU2NjZcbiBcdFx0XHRQcm9taXNlLnJlc29sdmUoKVxuIFx0XHRcdFx0LnRoZW4oZnVuY3Rpb24oKSB7XG4gXHRcdFx0XHRcdHJldHVybiBob3RBcHBseShob3RBcHBseU9uVXBkYXRlKTtcbiBcdFx0XHRcdH0pXG4gXHRcdFx0XHQudGhlbihcbiBcdFx0XHRcdFx0ZnVuY3Rpb24ocmVzdWx0KSB7XG4gXHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShyZXN1bHQpO1xuIFx0XHRcdFx0XHR9LFxuIFx0XHRcdFx0XHRmdW5jdGlvbihlcnIpIHtcbiBcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0KTtcbiBcdFx0fSBlbHNlIHtcbiBcdFx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW107XG4gXHRcdFx0Zm9yICh2YXIgaWQgaW4gaG90VXBkYXRlKSB7XG4gXHRcdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGhvdFVwZGF0ZSwgaWQpKSB7XG4gXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKHRvTW9kdWxlSWQoaWQpKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShvdXRkYXRlZE1vZHVsZXMpO1xuIFx0XHR9XG4gXHR9XG5cbiBcdGZ1bmN0aW9uIGhvdEFwcGx5KG9wdGlvbnMpIHtcbiBcdFx0aWYgKGhvdFN0YXR1cyAhPT0gXCJyZWFkeVwiKVxuIFx0XHRcdHRocm93IG5ldyBFcnJvcihcImFwcGx5KCkgaXMgb25seSBhbGxvd2VkIGluIHJlYWR5IHN0YXR1c1wiKTtcbiBcdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiBcdFx0dmFyIGNiO1xuIFx0XHR2YXIgaTtcbiBcdFx0dmFyIGo7XG4gXHRcdHZhciBtb2R1bGU7XG4gXHRcdHZhciBtb2R1bGVJZDtcblxuIFx0XHRmdW5jdGlvbiBnZXRBZmZlY3RlZFN0dWZmKHVwZGF0ZU1vZHVsZUlkKSB7XG4gXHRcdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFt1cGRhdGVNb2R1bGVJZF07XG4gXHRcdFx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG5cbiBcdFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKS5tYXAoZnVuY3Rpb24oaWQpIHtcbiBcdFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHRcdGNoYWluOiBbaWRdLFxuIFx0XHRcdFx0XHRpZDogaWRcbiBcdFx0XHRcdH07XG4gXHRcdFx0fSk7XG4gXHRcdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcbiBcdFx0XHRcdHZhciBxdWV1ZUl0ZW0gPSBxdWV1ZS5wb3AoKTtcbiBcdFx0XHRcdHZhciBtb2R1bGVJZCA9IHF1ZXVlSXRlbS5pZDtcbiBcdFx0XHRcdHZhciBjaGFpbiA9IHF1ZXVlSXRlbS5jaGFpbjtcbiBcdFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdFx0aWYgKCFtb2R1bGUgfHwgbW9kdWxlLmhvdC5fc2VsZkFjY2VwdGVkKSBjb250aW51ZTtcbiBcdFx0XHRcdGlmIChtb2R1bGUuaG90Ll9zZWxmRGVjbGluZWQpIHtcbiBcdFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtZGVjbGluZWRcIixcbiBcdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG4gXHRcdFx0XHRcdH07XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAobW9kdWxlLmhvdC5fbWFpbikge1xuIFx0XHRcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0XHRcdHR5cGU6IFwidW5hY2NlcHRlZFwiLFxuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbixcbiBcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcbiBcdFx0XHRcdFx0fTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlLnBhcmVudHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdFx0dmFyIHBhcmVudElkID0gbW9kdWxlLnBhcmVudHNbaV07XG4gXHRcdFx0XHRcdHZhciBwYXJlbnQgPSBpbnN0YWxsZWRNb2R1bGVzW3BhcmVudElkXTtcbiBcdFx0XHRcdFx0aWYgKCFwYXJlbnQpIGNvbnRpbnVlO1xuIFx0XHRcdFx0XHRpZiAocGFyZW50LmhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0XHRcdHR5cGU6IFwiZGVjbGluZWRcIixcbiBcdFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG4gXHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG4gXHRcdFx0XHRcdFx0XHRwYXJlbnRJZDogcGFyZW50SWRcbiBcdFx0XHRcdFx0XHR9O1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGlmIChvdXRkYXRlZE1vZHVsZXMuaW5kZXhPZihwYXJlbnRJZCkgIT09IC0xKSBjb250aW51ZTtcbiBcdFx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuIFx0XHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdKVxuIFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdID0gW107XG4gXHRcdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdLCBbbW9kdWxlSWRdKTtcbiBcdFx0XHRcdFx0XHRjb250aW51ZTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdO1xuIFx0XHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaChwYXJlbnRJZCk7XG4gXHRcdFx0XHRcdHF1ZXVlLnB1c2goe1xuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG4gXHRcdFx0XHRcdFx0aWQ6IHBhcmVudElkXG4gXHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cblxuIFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHR0eXBlOiBcImFjY2VwdGVkXCIsXG4gXHRcdFx0XHRtb2R1bGVJZDogdXBkYXRlTW9kdWxlSWQsXG4gXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXM6IG91dGRhdGVkTW9kdWxlcyxcbiBcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzOiBvdXRkYXRlZERlcGVuZGVuY2llc1xuIFx0XHRcdH07XG4gXHRcdH1cblxuIFx0XHRmdW5jdGlvbiBhZGRBbGxUb1NldChhLCBiKSB7XG4gXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0XHR2YXIgaXRlbSA9IGJbaV07XG4gXHRcdFx0XHRpZiAoYS5pbmRleE9mKGl0ZW0pID09PSAtMSkgYS5wdXNoKGl0ZW0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIGF0IGJlZ2luIGFsbCB1cGRhdGVzIG1vZHVsZXMgYXJlIG91dGRhdGVkXG4gXHRcdC8vIHRoZSBcIm91dGRhdGVkXCIgc3RhdHVzIGNhbiBwcm9wYWdhdGUgdG8gcGFyZW50cyBpZiB0aGV5IGRvbid0IGFjY2VwdCB0aGUgY2hpbGRyZW5cbiBcdFx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG4gXHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcbiBcdFx0dmFyIGFwcGxpZWRVcGRhdGUgPSB7fTtcblxuIFx0XHR2YXIgd2FyblVuZXhwZWN0ZWRSZXF1aXJlID0gZnVuY3Rpb24gd2FyblVuZXhwZWN0ZWRSZXF1aXJlKCkge1xuIFx0XHRcdGNvbnNvbGUud2FybihcbiBcdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICsgcmVzdWx0Lm1vZHVsZUlkICsgXCIpIHRvIGRpc3Bvc2VkIG1vZHVsZVwiXG4gXHRcdFx0KTtcbiBcdFx0fTtcblxuIFx0XHRmb3IgKHZhciBpZCBpbiBob3RVcGRhdGUpIHtcbiBcdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGhvdFVwZGF0ZSwgaWQpKSB7XG4gXHRcdFx0XHRtb2R1bGVJZCA9IHRvTW9kdWxlSWQoaWQpO1xuIFx0XHRcdFx0LyoqIEB0eXBlIHtUT0RPfSAqL1xuIFx0XHRcdFx0dmFyIHJlc3VsdDtcbiBcdFx0XHRcdGlmIChob3RVcGRhdGVbaWRdKSB7XG4gXHRcdFx0XHRcdHJlc3VsdCA9IGdldEFmZmVjdGVkU3R1ZmYobW9kdWxlSWQpO1xuIFx0XHRcdFx0fSBlbHNlIHtcbiBcdFx0XHRcdFx0cmVzdWx0ID0ge1xuIFx0XHRcdFx0XHRcdHR5cGU6IFwiZGlzcG9zZWRcIixcbiBcdFx0XHRcdFx0XHRtb2R1bGVJZDogaWRcbiBcdFx0XHRcdFx0fTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdC8qKiBAdHlwZSB7RXJyb3J8ZmFsc2V9ICovXG4gXHRcdFx0XHR2YXIgYWJvcnRFcnJvciA9IGZhbHNlO1xuIFx0XHRcdFx0dmFyIGRvQXBwbHkgPSBmYWxzZTtcbiBcdFx0XHRcdHZhciBkb0Rpc3Bvc2UgPSBmYWxzZTtcbiBcdFx0XHRcdHZhciBjaGFpbkluZm8gPSBcIlwiO1xuIFx0XHRcdFx0aWYgKHJlc3VsdC5jaGFpbikge1xuIFx0XHRcdFx0XHRjaGFpbkluZm8gPSBcIlxcblVwZGF0ZSBwcm9wYWdhdGlvbjogXCIgKyByZXN1bHQuY2hhaW4uam9pbihcIiAtPiBcIik7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRzd2l0Y2ggKHJlc3VsdC50eXBlKSB7XG4gXHRcdFx0XHRcdGNhc2UgXCJzZWxmLWRlY2xpbmVkXCI6XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcbiBcdFx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2Ygc2VsZiBkZWNsaW5lOiBcIiArXG4gXHRcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cbiBcdFx0XHRcdFx0XHRcdCk7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJkZWNsaW5lZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcbiBcdFx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG4gXHRcdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIGRlY2xpbmVkIGRlcGVuZGVuY3k6IFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdFwiIGluIFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQucGFyZW50SWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdFx0Y2FzZSBcInVuYWNjZXB0ZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vblVuYWNjZXB0ZWQpIG9wdGlvbnMub25VbmFjY2VwdGVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZVVuYWNjZXB0ZWQpXG4gXHRcdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuIFx0XHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBcIiArIG1vZHVsZUlkICsgXCIgaXMgbm90IGFjY2VwdGVkXCIgKyBjaGFpbkluZm9cbiBcdFx0XHRcdFx0XHRcdCk7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJhY2NlcHRlZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uQWNjZXB0ZWQpIG9wdGlvbnMub25BY2NlcHRlZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGRvQXBwbHkgPSB0cnVlO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRjYXNlIFwiZGlzcG9zZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRpc3Bvc2VkKSBvcHRpb25zLm9uRGlzcG9zZWQocmVzdWx0KTtcbiBcdFx0XHRcdFx0XHRkb0Rpc3Bvc2UgPSB0cnVlO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRkZWZhdWx0OlxuIFx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlVuZXhjZXB0aW9uIHR5cGUgXCIgKyByZXN1bHQudHlwZSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAoYWJvcnRFcnJvcikge1xuIFx0XHRcdFx0XHRob3RTZXRTdGF0dXMoXCJhYm9ydFwiKTtcbiBcdFx0XHRcdFx0cmV0dXJuIFByb21pc2UucmVqZWN0KGFib3J0RXJyb3IpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0aWYgKGRvQXBwbHkpIHtcbiBcdFx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSBob3RVcGRhdGVbbW9kdWxlSWRdO1xuIFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIHJlc3VsdC5vdXRkYXRlZE1vZHVsZXMpO1xuIFx0XHRcdFx0XHRmb3IgKG1vZHVsZUlkIGluIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdFx0XHRcdGlmIChcbiBcdFx0XHRcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChcbiBcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzLFxuIFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZFxuIFx0XHRcdFx0XHRcdFx0KVxuIFx0XHRcdFx0XHRcdCkge1xuIFx0XHRcdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pXG4gXHRcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSA9IFtdO1xuIFx0XHRcdFx0XHRcdFx0YWRkQWxsVG9TZXQoXG4gXHRcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSxcbiBcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXVxuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChkb0Rpc3Bvc2UpIHtcbiBcdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWRNb2R1bGVzLCBbcmVzdWx0Lm1vZHVsZUlkXSk7XG4gXHRcdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIFN0b3JlIHNlbGYgYWNjZXB0ZWQgb3V0ZGF0ZWQgbW9kdWxlcyB0byByZXF1aXJlIHRoZW0gbGF0ZXIgYnkgdGhlIG1vZHVsZSBzeXN0ZW1cbiBcdFx0dmFyIG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyA9IFtdO1xuIFx0XHRmb3IgKGkgPSAwOyBpIDwgb3V0ZGF0ZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0bW9kdWxlSWQgPSBvdXRkYXRlZE1vZHVsZXNbaV07XG4gXHRcdFx0aWYgKFxuIFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gJiZcbiBcdFx0XHRcdGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmhvdC5fc2VsZkFjY2VwdGVkXG4gXHRcdFx0KVxuIFx0XHRcdFx0b3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLnB1c2goe1xuIFx0XHRcdFx0XHRtb2R1bGU6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRlcnJvckhhbmRsZXI6IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmhvdC5fc2VsZkFjY2VwdGVkXG4gXHRcdFx0XHR9KTtcbiBcdFx0fVxuXG4gXHRcdC8vIE5vdyBpbiBcImRpc3Bvc2VcIiBwaGFzZVxuIFx0XHRob3RTZXRTdGF0dXMoXCJkaXNwb3NlXCIpO1xuIFx0XHRPYmplY3Qua2V5cyhob3RBdmFpbGFibGVGaWxlc01hcCkuZm9yRWFjaChmdW5jdGlvbihjaHVua0lkKSB7XG4gXHRcdFx0aWYgKGhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdID09PSBmYWxzZSkge1xuIFx0XHRcdFx0aG90RGlzcG9zZUNodW5rKGNodW5rSWQpO1xuIFx0XHRcdH1cbiBcdFx0fSk7XG5cbiBcdFx0dmFyIGlkeDtcbiBcdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLnNsaWNlKCk7XG4gXHRcdHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG4gXHRcdFx0bW9kdWxlSWQgPSBxdWV1ZS5wb3AoKTtcbiBcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRpZiAoIW1vZHVsZSkgY29udGludWU7XG5cbiBcdFx0XHR2YXIgZGF0YSA9IHt9O1xuXG4gXHRcdFx0Ly8gQ2FsbCBkaXNwb3NlIGhhbmRsZXJzXG4gXHRcdFx0dmFyIGRpc3Bvc2VIYW5kbGVycyA9IG1vZHVsZS5ob3QuX2Rpc3Bvc2VIYW5kbGVycztcbiBcdFx0XHRmb3IgKGogPSAwOyBqIDwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHRjYiA9IGRpc3Bvc2VIYW5kbGVyc1tqXTtcbiBcdFx0XHRcdGNiKGRhdGEpO1xuIFx0XHRcdH1cbiBcdFx0XHRob3RDdXJyZW50TW9kdWxlRGF0YVttb2R1bGVJZF0gPSBkYXRhO1xuXG4gXHRcdFx0Ly8gZGlzYWJsZSBtb2R1bGUgKHRoaXMgZGlzYWJsZXMgcmVxdWlyZXMgZnJvbSB0aGlzIG1vZHVsZSlcbiBcdFx0XHRtb2R1bGUuaG90LmFjdGl2ZSA9IGZhbHNlO1xuXG4gXHRcdFx0Ly8gcmVtb3ZlIG1vZHVsZSBmcm9tIGNhY2hlXG4gXHRcdFx0ZGVsZXRlIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuXG4gXHRcdFx0Ly8gd2hlbiBkaXNwb3NpbmcgdGhlcmUgaXMgbm8gbmVlZCB0byBjYWxsIGRpc3Bvc2UgaGFuZGxlclxuIFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG5cbiBcdFx0XHQvLyByZW1vdmUgXCJwYXJlbnRzXCIgcmVmZXJlbmNlcyBmcm9tIGFsbCBjaGlsZHJlblxuIFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGUuY2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcbiBcdFx0XHRcdHZhciBjaGlsZCA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlLmNoaWxkcmVuW2pdXTtcbiBcdFx0XHRcdGlmICghY2hpbGQpIGNvbnRpbnVlO1xuIFx0XHRcdFx0aWR4ID0gY2hpbGQucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKTtcbiBcdFx0XHRcdGlmIChpZHggPj0gMCkge1xuIFx0XHRcdFx0XHRjaGlsZC5wYXJlbnRzLnNwbGljZShpZHgsIDEpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIHJlbW92ZSBvdXRkYXRlZCBkZXBlbmRlbmN5IGZyb20gbW9kdWxlIGNoaWxkcmVuXG4gXHRcdHZhciBkZXBlbmRlbmN5O1xuIFx0XHR2YXIgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXM7XG4gXHRcdGZvciAobW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG1vZHVsZUlkKVxuIFx0XHRcdCkge1xuIFx0XHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRpZiAobW9kdWxlKSB7XG4gXHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID0gb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdO1xuIFx0XHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBqKyspIHtcbiBcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XG4gXHRcdFx0XHRcdFx0aWR4ID0gbW9kdWxlLmNoaWxkcmVuLmluZGV4T2YoZGVwZW5kZW5jeSk7XG4gXHRcdFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBtb2R1bGUuY2hpbGRyZW4uc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBOb3QgaW4gXCJhcHBseVwiIHBoYXNlXG4gXHRcdGhvdFNldFN0YXR1cyhcImFwcGx5XCIpO1xuXG4gXHRcdGhvdEN1cnJlbnRIYXNoID0gaG90VXBkYXRlTmV3SGFzaDtcblxuIFx0XHQvLyBpbnNlcnQgbmV3IGNvZGVcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBhcHBsaWVkVXBkYXRlKSB7XG4gXHRcdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcHBsaWVkVXBkYXRlLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gYXBwbGllZFVwZGF0ZVttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gY2FsbCBhY2NlcHQgaGFuZGxlcnNcbiBcdFx0dmFyIGVycm9yID0gbnVsbDtcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdGlmIChcbiBcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdGlmIChtb2R1bGUpIHtcbiBcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRcdHZhciBjYWxsYmFja3MgPSBbXTtcbiBcdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0XHRcdFx0ZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2ldO1xuIFx0XHRcdFx0XHRcdGNiID0gbW9kdWxlLmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwZW5kZW5jeV07XG4gXHRcdFx0XHRcdFx0aWYgKGNiKSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAoY2FsbGJhY2tzLmluZGV4T2YoY2IpICE9PSAtMSkgY29udGludWU7XG4gXHRcdFx0XHRcdFx0XHRjYWxsYmFja3MucHVzaChjYik7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBjYWxsYmFja3MubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdFx0XHRjYiA9IGNhbGxiYWNrc1tpXTtcbiBcdFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdFx0Y2IobW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMpO1xuIFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycikge1xuIFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvcmVkXCIsXG4gXHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbaV0sXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuIFx0XHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIExvYWQgc2VsZiBhY2NlcHRlZCBtb2R1bGVzXG4gXHRcdGZvciAoaSA9IDA7IGkgPCBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgaXRlbSA9IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlc1tpXTtcbiBcdFx0XHRtb2R1bGVJZCA9IGl0ZW0ubW9kdWxlO1xuIFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcbiBcdFx0XHR0cnkge1xuIFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCk7XG4gXHRcdFx0fSBjYXRjaCAoZXJyKSB7XG4gXHRcdFx0XHRpZiAodHlwZW9mIGl0ZW0uZXJyb3JIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiBcdFx0XHRcdFx0dHJ5IHtcbiBcdFx0XHRcdFx0XHRpdGVtLmVycm9ySGFuZGxlcihlcnIpO1xuIFx0XHRcdFx0XHR9IGNhdGNoIChlcnIyKSB7XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG4gXHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3ItaGFuZGxlci1lcnJvcmVkXCIsXG4gXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcbiBcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG4gXHRcdFx0XHRcdFx0XHRcdG9yaWdpbmFsRXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdFx0fSk7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAoIWVycm9yKSBlcnJvciA9IGVycjI7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG4gXHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yZWRcIixcbiBcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcbiBcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcbiBcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuIFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gaGFuZGxlIGVycm9ycyBpbiBhY2NlcHQgaGFuZGxlcnMgYW5kIHNlbGYgYWNjZXB0ZWQgbW9kdWxlIGxvYWRcbiBcdFx0aWYgKGVycm9yKSB7XG4gXHRcdFx0aG90U2V0U3RhdHVzKFwiZmFpbFwiKTtcbiBcdFx0XHRyZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuIFx0XHR9XG5cbiBcdFx0aG90U2V0U3RhdHVzKFwiaWRsZVwiKTtcbiBcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcbiBcdFx0XHRyZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdH0pO1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRob3Q6IGhvdENyZWF0ZU1vZHVsZShtb2R1bGVJZCksXG4gXHRcdFx0cGFyZW50czogKGhvdEN1cnJlbnRQYXJlbnRzVGVtcCA9IGhvdEN1cnJlbnRQYXJlbnRzLCBob3RDdXJyZW50UGFyZW50cyA9IFtdLCBob3RDdXJyZW50UGFyZW50c1RlbXApLFxuIFx0XHRcdGNoaWxkcmVuOiBbXVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBob3RDcmVhdGVSZXF1aXJlKG1vZHVsZUlkKSk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJkaXN0L1wiO1xuXG4gXHQvLyBfX3dlYnBhY2tfaGFzaF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSBmdW5jdGlvbigpIHsgcmV0dXJuIGhvdEN1cnJlbnRIYXNoOyB9O1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIGhvdENyZWF0ZVJlcXVpcmUoXCIuL3NyYy9tYWluLmpzXCIpKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9zcmMvbWFpbi5qc1wiKTtcbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9jc3MuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9jc3MuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vY3NzLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImNvbnNvbGUubG9nKFwid2VicGFjayAxXCIpO1xyXG5sZXQgZGF0ZSA9IFtcImhlbGxvXCIsIFwid29ybGRcIiwgXCJ0aGlzXCIsIFwiaXNcIiwgXCJlczZcIiwgXCJjb2RlXCJdO1xyXG5cclxuKCh0aGVEYXRlKSA9PiB7XHJcbiAgICB0aGVEYXRlLmZvckVhY2goaXRlbSA9PiBjb25zb2xlLmxvZyhpdGVtKSk7XHJcbn0pKGRhdGUpXHJcblxyXG5cclxubGV0IGEgPXtcclxuICAgIHRlc3QoKXtcclxuICAgICAgICBjb25zb2xlLmxvZygndGVzdDExJylcclxuICAgIH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBhXHJcblxyXG4iLCIvKipcclxuICogQ3JlYXRlZCBieSB2X3RqaWFvdGFuZyBvbiAyMDE3LzYvMTQuXHJcbiAqL1xyXG52YXIgaW5kZXhGdW4gPXtcclxuICAgIGluaXQ6ZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLnVpIFx0XHRcdFx0PSB7fTtcclxuICAgICAgICB0aGlzLnVpLnNjb3JlIFx0XHRcdD0gJCgnLnNjb3JlJyk7XHJcbiAgICAgICAgdGhpcy51aS5ib2R5IFx0XHRcdD0gJCgnYm9keScpO1xyXG4gICAgICAgIHRoaXMudWkuZGF0YVdyYXAgXHRcdD0gJCgnLmRhdGEtd3JhcCcpO1xyXG4gICAgICAgIHRoaXMucmVnRXZlbnQoKTtcclxuICAgICAgICB0aGlzLmdldENyZWRpdCgpO1xyXG4gICAgfSxcclxuICAgIHJlZ0V2ZW50OmZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgIH0sXHJcbiAgICBwb3BIaWRlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAvLyQoJy5wb3AnKS5oaWRlKCk7XHJcbiAgICB9LFxyXG4gICAgcG9wU2hvdzogZnVuY3Rpb24oaWQpIHtcclxuICAgICAgICB2YXIgcCA9ICQoJyMnICsgaWQpO1xyXG4gICAgICAgIGlmIChwKSB7XHJcbiAgICAgICAgICAgIHAuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBnZXRGb3JtYXRUaW1lRnJvbVNlY29uZHM6IGZ1bmN0aW9uKHNlY29uZHMpIHtcclxuICAgICAgICB2YXIgZHN0RGF0ZSA9IG5ldyBEYXRlKHNlY29uZHMqMTAwMCk7XHJcbiAgICAgICAgdmFyIG1vbnRoID0gZHN0RGF0ZS5nZXRNb250aCgpKzE7XHJcbiAgICAgICAgaWYobW9udGg8MTApe1xyXG4gICAgICAgICAgICBtb250aCA9ICcwJysgbW9udGg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBvRGF5ID0gZHN0RGF0ZS5nZXREYXRlKCk7XHJcbiAgICAgICAgaWYob0RheTwxMCl7XHJcbiAgICAgICAgICAgIG9EYXkgPSAnMCcrIG9EYXk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBvSG91ciA9IGRzdERhdGUuZ2V0SG91cnMoKTtcclxuICAgICAgICBpZihvSG91cjwxMCl7XHJcbiAgICAgICAgICAgIG9Ib3VyID0gJzAnKyBvSG91cjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG9NaW4gPSBkc3REYXRlLmdldE1pbnV0ZXMoKTtcclxuICAgICAgICBpZihvTWluPDEwKXtcclxuICAgICAgICAgICAgb01pbiA9ICcwJysgb01pbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRzdERhdGUuZ2V0RnVsbFllYXIoKSArJy4nK21vbnRoICsgJy4nKyBvRGF5ICsnICcgKyBvSG91cisnOicrb01pbjtcclxuICAgIH0sXHJcbiAgICBnZXRDcmVkaXQgOmZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgdXJsX3BhcmEgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLnN1YnN0cmluZygxKTtcclxuICAgICAgICBjb25zb2xlLmxvZyh1cmxfcGFyYSlcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6Jy9jZ2ktYmluL2NyZWRpdF9zY29yZScsXHJcbiAgICAgICAgICAgIC8vdXJsOidqcy90ZXN0Lmpzb24nLFxyXG4gICAgICAgICAgICBkYXRhOntcclxuICAgICAgICAgICAgICAgIHVybF9wYXJhOnVybF9wYXJhXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGRhdGF0eXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgeyAvL+aIkOWKn+WQjuWbnuiwg1xyXG4gICAgICAgICAgICAgICAgaWYoZGF0YS5yZXQ9PTApe1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBkYXRhLmRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWwgPSAnJztcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAvL3ZhciBzY29yZSA9IHJlc3VsdC5zY29yZSsxO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdC5oaXN0b3J5Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLm5vZGF0YScpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHJlc3VsdC5oaXN0b3J5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2hhbmdlID0gcmVzdWx0Lmhpc3Rvcnlba2V5XS5jaGFuZ2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGlzdF9zY29yZSA9IHJlc3VsdC5oaXN0b3J5W2tleV0uc2NvcmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2xhc3NfbmFtZSA9ICd0X29yYW5nZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hhbmdlID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZSA9ICcrJyArIGNoYW5nZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc19uYW1lID0gJ3RfeWVsbG93JztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwgKz0gJzx0cj4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHRkIHdpZHRoPVwiMjklXCIgIGNsYXNzPVwiYmdfMWExXCI+JyArIF90aGlzLmdldEZvcm1hdFRpbWVGcm9tU2Vjb25kcyhwYXJzZUludChyZXN1bHQuaGlzdG9yeVtrZXldLnRpbWVzdGFtcCkpICsgJzwvdGQ+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzx0ZCB3aWR0aD1cIjE4JVwiICBjbGFzcz0nICsgY2xhc3NfbmFtZSArICc+JyArIGNoYW5nZSArICc8L3RkPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8dGQgd2lkdGg9XCIxOCVcIiBjbGFzcz1cImJnXzFhMlwiID4nICArIGxpc3Rfc2NvcmUgKyAnPC90ZD4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHRkIHdpZHRoPVwiMzUlXCIgY2xhc3M9XCJiZ18xYTNcIj4nICsgcmVzdWx0Lmhpc3Rvcnlba2V5XS5yZWFzb24gKyAnPC90ZD4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC90cj4nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coaHRtbClcclxuICAgICAgICAgICAgICAgICAgICBfdGhpcy51aS5zY29yZS50ZXh0KHJlc3VsdC5zY29yZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMudWkuZGF0YVdyYXAuYXBwZW5kKGh0bWwpO1xyXG5cclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIC8vJCgnLmNvbnRfZGF0YScpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcuY29udF9idXp5Jykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlcnJvcjpmdW5jdGlvbihlcnIpe1xyXG4gICAgICAgICAgICAgICAgLy8kKCcuY29udF9kYXRhJykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgJCgnLmNvbnRfYnV6eScpLnNob3coKTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgc3RhdGlzdGljczpmdW5jdGlvbihjbGFzc19pZCl7XHJcbiAgICAgICAgdmFyIHBhcmFtID0gdGhpcy5wYXJhbUNoYW5nZUpzb24oKTtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IFwiL3N0YXRpc3RpY1wiLFxyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBcInN5c19pZFwiOiAxMDI5LFxyXG4gICAgICAgICAgICAgICAgXCJ0eXBlX2lkXCI6IDgyNyxcclxuICAgICAgICAgICAgICAgIFwic3ViX3R5cGVcIjogMjA2MixcclxuICAgICAgICAgICAgICAgIFwidXNlcl9pZFwiOiBwYXJhbS5vcGVuaWQgLFxyXG4gICAgICAgICAgICAgICAgXCJ1c2VyX3R5cGVcIjogMCxcclxuICAgICAgICAgICAgICAgIFwiY2xhc3NfaWRcIjpjbGFzc19pZCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGF0YXR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICB0eXBlOiBcImdldFwiLFxyXG4gICAgICAgICAgICBhc3luYzogdHJ1ZSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KSB7fVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgcGFyYW1DaGFuZ2VKc29uOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHZhciBqc29uID17fTtcclxuICAgICAgICB2YXIgc3RyPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoO1xyXG4gICAgICAgIHZhciBhcnIgPSBzdHIucmVwbGFjZSgvXFw/Ki9nLFwiXCIpLnNwbGl0KFwiJlwiKTtcclxuICAgICAgICBmb3IodmFyICBrICBpbiAgYXJyKXtcclxuICAgICAgICAgICAgdmFyIG1zZyAgPWFycltrXS5zcGxpdChcIj1cIik7XHJcbiAgICAgICAgICAgIGpzb25bbXNnWzBdXT1tc2dbMV1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGpzb25cclxuICAgIH0sXHJcbn07XHJcbiQoZnVuY3Rpb24oKXtcclxuICAgIGluZGV4RnVuLmluaXQoKTtcclxufSk7XHJcbiIsIi8qIFplcHRvIHYxLjEuNC0xLWdiZDIzMjdjIC0gemVwdG8gZXZlbnQgYWpheCBmb3JtIGllIGRldGVjdCBmeCBmeF9tZXRob2RzIHRvdWNoIGdlc3R1cmUgLSB6ZXB0b2pzLmNvbS9saWNlbnNlICovXHJcbnZhciBaZXB0bz1mdW5jdGlvbigpe2Z1bmN0aW9uIF8odCl7cmV0dXJuIG51bGw9PXQ/U3RyaW5nKHQpOkVbUy5jYWxsKHQpXXx8XCJvYmplY3RcIn1mdW5jdGlvbiBBKHQpe3JldHVyblwiZnVuY3Rpb25cIj09Xyh0KX1mdW5jdGlvbiBMKHQpe3JldHVybiBudWxsIT10JiZ0PT10LndpbmRvd31mdW5jdGlvbiBrKHQpe3JldHVybiBudWxsIT10JiZ0Lm5vZGVUeXBlPT10LkRPQ1VNRU5UX05PREV9ZnVuY3Rpb24gWih0KXtyZXR1cm5cIm9iamVjdFwiPT1fKHQpfWZ1bmN0aW9uIEQodCl7cmV0dXJuIFoodCkmJiFMKHQpJiZPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk9PU9iamVjdC5wcm90b3R5cGV9ZnVuY3Rpb24gJCh0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdC5sZW5ndGh9ZnVuY3Rpb24gUih0KXtyZXR1cm4gYS5jYWxsKHQsZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXR9KX1mdW5jdGlvbiBGKHQpe3JldHVybiB0Lmxlbmd0aD4wP24uZm4uY29uY2F0LmFwcGx5KFtdLHQpOnR9ZnVuY3Rpb24geih0KXtyZXR1cm4gdC5yZXBsYWNlKC86Oi9nLFwiL1wiKS5yZXBsYWNlKC8oW0EtWl0rKShbQS1aXVthLXpdKS9nLFwiJDFfJDJcIikucmVwbGFjZSgvKFthLXpcXGRdKShbQS1aXSkvZyxcIiQxXyQyXCIpLnJlcGxhY2UoL18vZyxcIi1cIikudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBJKHQpe3JldHVybiB0IGluIGY/Zlt0XTpmW3RdPW5ldyBSZWdFeHAoXCIoXnxcXFxccylcIit0K1wiKFxcXFxzfCQpXCIpfWZ1bmN0aW9uIHEodCxlKXtyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgZXx8Y1t6KHQpXT9lOmUrXCJweFwifWZ1bmN0aW9uIEIodCl7dmFyIGUsbjtyZXR1cm4gdVt0XXx8KGU9cy5jcmVhdGVFbGVtZW50KHQpLHMuYm9keS5hcHBlbmRDaGlsZChlKSxuPWdldENvbXB1dGVkU3R5bGUoZSxcIlwiKS5nZXRQcm9wZXJ0eVZhbHVlKFwiZGlzcGxheVwiKSxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSksXCJub25lXCI9PW4mJihuPVwiYmxvY2tcIiksdVt0XT1uKSx1W3RdfWZ1bmN0aW9uIEgodCl7cmV0dXJuXCJjaGlsZHJlblwiaW4gdD9vLmNhbGwodC5jaGlsZHJlbik6bi5tYXAodC5jaGlsZE5vZGVzLGZ1bmN0aW9uKHQpe3JldHVybiAxPT10Lm5vZGVUeXBlP3Q6dm9pZCAwfSl9ZnVuY3Rpb24gVShuLGkscil7Zm9yKGUgaW4gaSlyJiYoRChpW2VdKXx8TShpW2VdKSk/KEQoaVtlXSkmJiFEKG5bZV0pJiYobltlXT17fSksTShpW2VdKSYmIU0obltlXSkmJihuW2VdPVtdKSxVKG5bZV0saVtlXSxyKSk6aVtlXSE9PXQmJihuW2VdPWlbZV0pfWZ1bmN0aW9uIFYodCxlKXtyZXR1cm4gbnVsbD09ZT9uKHQpOm4odCkuZmlsdGVyKGUpfWZ1bmN0aW9uIFgodCxlLG4saSl7cmV0dXJuIEEoZSk/ZS5jYWxsKHQsbixpKTplfWZ1bmN0aW9uIFkodCxlLG4pe251bGw9PW4/dC5yZW1vdmVBdHRyaWJ1dGUoZSk6dC5zZXRBdHRyaWJ1dGUoZSxuKX1mdW5jdGlvbiBXKGUsbil7dmFyIGk9ZS5jbGFzc05hbWUscj1pJiZpLmJhc2VWYWwhPT10O3JldHVybiBuPT09dD9yP2kuYmFzZVZhbDppOnZvaWQocj9pLmJhc2VWYWw9bjplLmNsYXNzTmFtZT1uKX1mdW5jdGlvbiBKKHQpe3ZhciBlO3RyeXtyZXR1cm4gdD9cInRydWVcIj09dHx8KFwiZmFsc2VcIj09dD8hMTpcIm51bGxcIj09dD9udWxsOi9eMC8udGVzdCh0KXx8aXNOYU4oZT1OdW1iZXIodCkpPy9eW1xcW1xce10vLnRlc3QodCk/bi5wYXJzZUpTT04odCk6dDplKTp0fWNhdGNoKGkpe3JldHVybiB0fX1mdW5jdGlvbiBHKHQsZSl7ZSh0KTtmb3IodmFyIG49MCxpPXQuY2hpbGROb2Rlcy5sZW5ndGg7aT5uO24rKylHKHQuY2hpbGROb2Rlc1tuXSxlKX12YXIgdCxlLG4saSxQLEMscj1bXSxvPXIuc2xpY2UsYT1yLmZpbHRlcixzPXdpbmRvdy5kb2N1bWVudCx1PXt9LGY9e30sYz17XCJjb2x1bW4tY291bnRcIjoxLGNvbHVtbnM6MSxcImZvbnQtd2VpZ2h0XCI6MSxcImxpbmUtaGVpZ2h0XCI6MSxvcGFjaXR5OjEsXCJ6LWluZGV4XCI6MSx6b29tOjF9LGw9L15cXHMqPChcXHcrfCEpW14+XSo+LyxoPS9ePChcXHcrKVxccypcXC8/Pig/OjxcXC9cXDE+fCkkLyxwPS88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFtcXHc6XSspW14+XSopXFwvPi9naSxkPS9eKD86Ym9keXxodG1sKSQvaSxtPS8oW0EtWl0pL2csZz1bXCJ2YWxcIixcImNzc1wiLFwiaHRtbFwiLFwidGV4dFwiLFwiZGF0YVwiLFwid2lkdGhcIixcImhlaWdodFwiLFwib2Zmc2V0XCJdLHY9W1wiYWZ0ZXJcIixcInByZXBlbmRcIixcImJlZm9yZVwiLFwiYXBwZW5kXCJdLHk9cy5jcmVhdGVFbGVtZW50KFwidGFibGVcIiksYj1zLmNyZWF0ZUVsZW1lbnQoXCJ0clwiKSx3PXt0cjpzLmNyZWF0ZUVsZW1lbnQoXCJ0Ym9keVwiKSx0Ym9keTp5LHRoZWFkOnksdGZvb3Q6eSx0ZDpiLHRoOmIsXCIqXCI6cy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpfSx4PS9jb21wbGV0ZXxsb2FkZWR8aW50ZXJhY3RpdmUvLFQ9L15bXFx3LV0qJC8sRT17fSxTPUUudG9TdHJpbmcsaj17fSxPPXMuY3JlYXRlRWxlbWVudChcImRpdlwiKSxOPXt0YWJpbmRleDpcInRhYkluZGV4XCIscmVhZG9ubHk6XCJyZWFkT25seVwiLFwiZm9yXCI6XCJodG1sRm9yXCIsXCJjbGFzc1wiOlwiY2xhc3NOYW1lXCIsbWF4bGVuZ3RoOlwibWF4TGVuZ3RoXCIsY2VsbHNwYWNpbmc6XCJjZWxsU3BhY2luZ1wiLGNlbGxwYWRkaW5nOlwiY2VsbFBhZGRpbmdcIixyb3dzcGFuOlwicm93U3BhblwiLGNvbHNwYW46XCJjb2xTcGFuXCIsdXNlbWFwOlwidXNlTWFwXCIsZnJhbWVib3JkZXI6XCJmcmFtZUJvcmRlclwiLGNvbnRlbnRlZGl0YWJsZTpcImNvbnRlbnRFZGl0YWJsZVwifSxNPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgQXJyYXl9O3JldHVybiBqLm1hdGNoZXM9ZnVuY3Rpb24odCxlKXtpZighZXx8IXR8fDEhPT10Lm5vZGVUeXBlKXJldHVybiExO3ZhciBuPXQud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHx0Lm1vek1hdGNoZXNTZWxlY3Rvcnx8dC5vTWF0Y2hlc1NlbGVjdG9yfHx0Lm1hdGNoZXNTZWxlY3RvcjtpZihuKXJldHVybiBuLmNhbGwodCxlKTt2YXIgaSxyPXQucGFyZW50Tm9kZSxvPSFyO3JldHVybiBvJiYocj1PKS5hcHBlbmRDaGlsZCh0KSxpPX5qLnFzYShyLGUpLmluZGV4T2YodCksbyYmTy5yZW1vdmVDaGlsZCh0KSxpfSxQPWZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoLy0rKC4pPy9nLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU/ZS50b1VwcGVyQ2FzZSgpOlwiXCJ9KX0sQz1mdW5jdGlvbih0KXtyZXR1cm4gYS5jYWxsKHQsZnVuY3Rpb24oZSxuKXtyZXR1cm4gdC5pbmRleE9mKGUpPT1ufSl9LGouZnJhZ21lbnQ9ZnVuY3Rpb24oZSxpLHIpe3ZhciBhLHUsZjtyZXR1cm4gaC50ZXN0KGUpJiYoYT1uKHMuY3JlYXRlRWxlbWVudChSZWdFeHAuJDEpKSksYXx8KGUucmVwbGFjZSYmKGU9ZS5yZXBsYWNlKHAsXCI8JDE+PC8kMj5cIikpLGk9PT10JiYoaT1sLnRlc3QoZSkmJlJlZ0V4cC4kMSksaSBpbiB3fHwoaT1cIipcIiksZj13W2ldLGYuaW5uZXJIVE1MPVwiXCIrZSxhPW4uZWFjaChvLmNhbGwoZi5jaGlsZE5vZGVzKSxmdW5jdGlvbigpe2YucmVtb3ZlQ2hpbGQodGhpcyl9KSksRChyKSYmKHU9bihhKSxuLmVhY2gocixmdW5jdGlvbih0LGUpe2cuaW5kZXhPZih0KT4tMT91W3RdKGUpOnUuYXR0cih0LGUpfSkpLGF9LGouWj1mdW5jdGlvbih0LGUpe3JldHVybiB0PXR8fFtdLHQuX19wcm90b19fPW4uZm4sdC5zZWxlY3Rvcj1lfHxcIlwiLHR9LGouaXNaPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2Ygai5afSxqLmluaXQ9ZnVuY3Rpb24oZSxpKXt2YXIgcjtpZighZSlyZXR1cm4gai5aKCk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpaWYoZT1lLnRyaW0oKSxcIjxcIj09ZVswXSYmbC50ZXN0KGUpKXI9ai5mcmFnbWVudChlLFJlZ0V4cC4kMSxpKSxlPW51bGw7ZWxzZXtpZihpIT09dClyZXR1cm4gbihpKS5maW5kKGUpO3I9ai5xc2EocyxlKX1lbHNle2lmKEEoZSkpcmV0dXJuIG4ocykucmVhZHkoZSk7aWYoai5pc1ooZSkpcmV0dXJuIGU7aWYoTShlKSlyPVIoZSk7ZWxzZSBpZihaKGUpKXI9W2VdLGU9bnVsbDtlbHNlIGlmKGwudGVzdChlKSlyPWouZnJhZ21lbnQoZS50cmltKCksUmVnRXhwLiQxLGkpLGU9bnVsbDtlbHNle2lmKGkhPT10KXJldHVybiBuKGkpLmZpbmQoZSk7cj1qLnFzYShzLGUpfX1yZXR1cm4gai5aKHIsZSl9LG49ZnVuY3Rpb24odCxlKXtyZXR1cm4gai5pbml0KHQsZSl9LG4uZXh0ZW5kPWZ1bmN0aW9uKHQpe3ZhciBlLG49by5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHQmJihlPXQsdD1uLnNoaWZ0KCkpLG4uZm9yRWFjaChmdW5jdGlvbihuKXtVKHQsbixlKX0pLHR9LGoucXNhPWZ1bmN0aW9uKHQsZSl7dmFyIG4saT1cIiNcIj09ZVswXSxyPSFpJiZcIi5cIj09ZVswXSxhPWl8fHI/ZS5zbGljZSgxKTplLHM9VC50ZXN0KGEpO3JldHVybiBrKHQpJiZzJiZpPyhuPXQuZ2V0RWxlbWVudEJ5SWQoYSkpP1tuXTpbXToxIT09dC5ub2RlVHlwZSYmOSE9PXQubm9kZVR5cGU/W106by5jYWxsKHMmJiFpP3I/dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGEpOnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSk6dC5xdWVyeVNlbGVjdG9yQWxsKGUpKX0sbi5jb250YWlucz1zLmRvY3VtZW50RWxlbWVudC5jb250YWlucz9mdW5jdGlvbih0LGUpe3JldHVybiB0IT09ZSYmdC5jb250YWlucyhlKX06ZnVuY3Rpb24odCxlKXtmb3IoO2UmJihlPWUucGFyZW50Tm9kZSk7KWlmKGU9PT10KXJldHVybiEwO3JldHVybiExfSxuLnR5cGU9XyxuLmlzRnVuY3Rpb249QSxuLmlzV2luZG93PUwsbi5pc0FycmF5PU0sbi5pc1BsYWluT2JqZWN0PUQsbi5pc0VtcHR5T2JqZWN0PWZ1bmN0aW9uKHQpe3ZhciBlO2ZvcihlIGluIHQpcmV0dXJuITE7cmV0dXJuITB9LG4uaW5BcnJheT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHIuaW5kZXhPZi5jYWxsKGUsdCxuKX0sbi5jYW1lbENhc2U9UCxuLnRyaW09ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/XCJcIjpTdHJpbmcucHJvdG90eXBlLnRyaW0uY2FsbCh0KX0sbi51dWlkPTAsbi5zdXBwb3J0PXt9LG4uZXhwcj17fSxuLm1hcD1mdW5jdGlvbih0LGUpe3ZhciBuLHIsbyxpPVtdO2lmKCQodCkpZm9yKHI9MDtyPHQubGVuZ3RoO3IrKyluPWUodFtyXSxyKSxudWxsIT1uJiZpLnB1c2gobik7ZWxzZSBmb3IobyBpbiB0KW49ZSh0W29dLG8pLG51bGwhPW4mJmkucHVzaChuKTtyZXR1cm4gRihpKX0sbi5lYWNoPWZ1bmN0aW9uKHQsZSl7dmFyIG4saTtpZigkKHQpKXtmb3Iobj0wO248dC5sZW5ndGg7bisrKWlmKGUuY2FsbCh0W25dLG4sdFtuXSk9PT0hMSlyZXR1cm4gdH1lbHNlIGZvcihpIGluIHQpaWYoZS5jYWxsKHRbaV0saSx0W2ldKT09PSExKXJldHVybiB0O3JldHVybiB0fSxuLmdyZXA9ZnVuY3Rpb24odCxlKXtyZXR1cm4gYS5jYWxsKHQsZSl9LHdpbmRvdy5KU09OJiYobi5wYXJzZUpTT049SlNPTi5wYXJzZSksbi5lYWNoKFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvclwiLnNwbGl0KFwiIFwiKSxmdW5jdGlvbih0LGUpe0VbXCJbb2JqZWN0IFwiK2UrXCJdXCJdPWUudG9Mb3dlckNhc2UoKX0pLG4uZm49e2ZvckVhY2g6ci5mb3JFYWNoLHJlZHVjZTpyLnJlZHVjZSxwdXNoOnIucHVzaCxzb3J0OnIuc29ydCxpbmRleE9mOnIuaW5kZXhPZixjb25jYXQ6ci5jb25jYXQsbWFwOmZ1bmN0aW9uKHQpe3JldHVybiBuKG4ubWFwKHRoaXMsZnVuY3Rpb24oZSxuKXtyZXR1cm4gdC5jYWxsKGUsbixlKX0pKX0sc2xpY2U6ZnVuY3Rpb24oKXtyZXR1cm4gbihvLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LHJlYWR5OmZ1bmN0aW9uKHQpe3JldHVybiB4LnRlc3Qocy5yZWFkeVN0YXRlKSYmcy5ib2R5P3Qobik6cy5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLGZ1bmN0aW9uKCl7dChuKX0sITEpLHRoaXN9LGdldDpmdW5jdGlvbihlKXtyZXR1cm4gZT09PXQ/by5jYWxsKHRoaXMpOnRoaXNbZT49MD9lOmUrdGhpcy5sZW5ndGhdfSx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KCl9LHNpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sZW5ndGh9LHJlbW92ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtudWxsIT10aGlzLnBhcmVudE5vZGUmJnRoaXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzKX0pfSxlYWNoOmZ1bmN0aW9uKHQpe3JldHVybiByLmV2ZXJ5LmNhbGwodGhpcyxmdW5jdGlvbihlLG4pe3JldHVybiB0LmNhbGwoZSxuLGUpIT09ITF9KSx0aGlzfSxmaWx0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIEEodCk/dGhpcy5ub3QodGhpcy5ub3QodCkpOm4oYS5jYWxsKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuIGoubWF0Y2hlcyhlLHQpfSkpfSxhZGQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbihDKHRoaXMuY29uY2F0KG4odCxlKSkpKX0saXM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubGVuZ3RoPjAmJmoubWF0Y2hlcyh0aGlzWzBdLHQpfSxub3Q6ZnVuY3Rpb24oZSl7dmFyIGk9W107aWYoQShlKSYmZS5jYWxsIT09dCl0aGlzLmVhY2goZnVuY3Rpb24odCl7ZS5jYWxsKHRoaXMsdCl8fGkucHVzaCh0aGlzKX0pO2Vsc2V7dmFyIHI9XCJzdHJpbmdcIj09dHlwZW9mIGU/dGhpcy5maWx0ZXIoZSk6JChlKSYmQShlLml0ZW0pP28uY2FsbChlKTpuKGUpO3RoaXMuZm9yRWFjaChmdW5jdGlvbih0KXtyLmluZGV4T2YodCk8MCYmaS5wdXNoKHQpfSl9cmV0dXJuIG4oaSl9LGhhczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gWih0KT9uLmNvbnRhaW5zKHRoaXMsdCk6bih0aGlzKS5maW5kKHQpLnNpemUoKX0pfSxlcTpmdW5jdGlvbih0KXtyZXR1cm4tMT09PXQ/dGhpcy5zbGljZSh0KTp0aGlzLnNsaWNlKHQsK3QrMSl9LGZpcnN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpc1swXTtyZXR1cm4gdCYmIVoodCk/dDpuKHQpfSxsYXN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpc1t0aGlzLmxlbmd0aC0xXTtyZXR1cm4gdCYmIVoodCk/dDpuKHQpfSxmaW5kOmZ1bmN0aW9uKHQpe3ZhciBlLGk9dGhpcztyZXR1cm4gZT10P1wib2JqZWN0XCI9PXR5cGVvZiB0P24odCkuZmlsdGVyKGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gci5zb21lLmNhbGwoaSxmdW5jdGlvbihlKXtyZXR1cm4gbi5jb250YWlucyhlLHQpfSl9KToxPT10aGlzLmxlbmd0aD9uKGoucXNhKHRoaXNbMF0sdCkpOnRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGoucXNhKHRoaXMsdCl9KTpbXX0sY2xvc2VzdDpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXNbMF0scj0hMTtmb3IoXCJvYmplY3RcIj09dHlwZW9mIHQmJihyPW4odCkpO2kmJiEocj9yLmluZGV4T2YoaSk+PTA6ai5tYXRjaGVzKGksdCkpOylpPWkhPT1lJiYhayhpKSYmaS5wYXJlbnROb2RlO3JldHVybiBuKGkpfSxwYXJlbnRzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxpPXRoaXM7aS5sZW5ndGg+MDspaT1uLm1hcChpLGZ1bmN0aW9uKHQpe3JldHVybih0PXQucGFyZW50Tm9kZSkmJiFrKHQpJiZlLmluZGV4T2YodCk8MD8oZS5wdXNoKHQpLHQpOnZvaWQgMH0pO3JldHVybiBWKGUsdCl9LHBhcmVudDpmdW5jdGlvbih0KXtyZXR1cm4gVihDKHRoaXMucGx1Y2soXCJwYXJlbnROb2RlXCIpKSx0KX0sY2hpbGRyZW46ZnVuY3Rpb24odCl7cmV0dXJuIFYodGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gSCh0aGlzKX0pLHQpfSxjb250ZW50czpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3JldHVybiBvLmNhbGwodGhpcy5jaGlsZE5vZGVzKX0pfSxzaWJsaW5nczpmdW5jdGlvbih0KXtyZXR1cm4gVih0aGlzLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiBhLmNhbGwoSChlLnBhcmVudE5vZGUpLGZ1bmN0aW9uKHQpe3JldHVybiB0IT09ZX0pfSksdCl9LGVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3RoaXMuaW5uZXJIVE1MPVwiXCJ9KX0scGx1Y2s6ZnVuY3Rpb24odCl7cmV0dXJuIG4ubWFwKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuIGVbdF19KX0sc2hvdzpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtcIm5vbmVcIj09dGhpcy5zdHlsZS5kaXNwbGF5JiYodGhpcy5zdHlsZS5kaXNwbGF5PVwiXCIpLFwibm9uZVwiPT1nZXRDb21wdXRlZFN0eWxlKHRoaXMsXCJcIikuZ2V0UHJvcGVydHlWYWx1ZShcImRpc3BsYXlcIikmJih0aGlzLnN0eWxlLmRpc3BsYXk9Qih0aGlzLm5vZGVOYW1lKSl9KX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYmVmb3JlKHQpLnJlbW92ZSgpfSx3cmFwOmZ1bmN0aW9uKHQpe3ZhciBlPUEodCk7aWYodGhpc1swXSYmIWUpdmFyIGk9bih0KS5nZXQoMCkscj1pLnBhcmVudE5vZGV8fHRoaXMubGVuZ3RoPjE7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihvKXtuKHRoaXMpLndyYXBBbGwoZT90LmNhbGwodGhpcyxvKTpyP2kuY2xvbmVOb2RlKCEwKTppKX0pfSx3cmFwQWxsOmZ1bmN0aW9uKHQpe2lmKHRoaXNbMF0pe24odGhpc1swXSkuYmVmb3JlKHQ9bih0KSk7Zm9yKHZhciBlOyhlPXQuY2hpbGRyZW4oKSkubGVuZ3RoOyl0PWUuZmlyc3QoKTtuKHQpLmFwcGVuZCh0aGlzKX1yZXR1cm4gdGhpc30sd3JhcElubmVyOmZ1bmN0aW9uKHQpe3ZhciBlPUEodCk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpKXt2YXIgcj1uKHRoaXMpLG89ci5jb250ZW50cygpLGE9ZT90LmNhbGwodGhpcyxpKTp0O28ubGVuZ3RoP28ud3JhcEFsbChhKTpyLmFwcGVuZChhKX0pfSx1bndyYXA6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJlbnQoKS5lYWNoKGZ1bmN0aW9uKCl7bih0aGlzKS5yZXBsYWNlV2l0aChuKHRoaXMpLmNoaWxkcmVuKCkpfSksdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbG9uZU5vZGUoITApfSl9LGhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpfSx0b2dnbGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBpPW4odGhpcyk7KGU9PT10P1wibm9uZVwiPT1pLmNzcyhcImRpc3BsYXlcIik6ZSk/aS5zaG93KCk6aS5oaWRlKCl9KX0scHJldjpmdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLnBsdWNrKFwicHJldmlvdXNFbGVtZW50U2libGluZ1wiKSkuZmlsdGVyKHR8fFwiKlwiKX0sbmV4dDpmdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLnBsdWNrKFwibmV4dEVsZW1lbnRTaWJsaW5nXCIpKS5maWx0ZXIodHx8XCIqXCIpfSxodG1sOmZ1bmN0aW9uKHQpe3JldHVybiAwIGluIGFyZ3VtZW50cz90aGlzLmVhY2goZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5pbm5lckhUTUw7bih0aGlzKS5lbXB0eSgpLmFwcGVuZChYKHRoaXMsdCxlLGkpKX0pOjAgaW4gdGhpcz90aGlzWzBdLmlubmVySFRNTDpudWxsfSx0ZXh0OmZ1bmN0aW9uKHQpe3JldHVybiAwIGluIGFyZ3VtZW50cz90aGlzLmVhY2goZnVuY3Rpb24oZSl7dmFyIG49WCh0aGlzLHQsZSx0aGlzLnRleHRDb250ZW50KTt0aGlzLnRleHRDb250ZW50PW51bGw9PW4/XCJcIjpcIlwiK259KTowIGluIHRoaXM/dGhpc1swXS50ZXh0Q29udGVudDpudWxsfSxhdHRyOmZ1bmN0aW9uKG4saSl7dmFyIHI7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIG58fDEgaW4gYXJndW1lbnRzP3RoaXMuZWFjaChmdW5jdGlvbih0KXtpZigxPT09dGhpcy5ub2RlVHlwZSlpZihaKG4pKWZvcihlIGluIG4pWSh0aGlzLGUsbltlXSk7ZWxzZSBZKHRoaXMsbixYKHRoaXMsaSx0LHRoaXMuZ2V0QXR0cmlidXRlKG4pKSl9KTp0aGlzLmxlbmd0aCYmMT09PXRoaXNbMF0ubm9kZVR5cGU/IShyPXRoaXNbMF0uZ2V0QXR0cmlidXRlKG4pKSYmbiBpbiB0aGlzWzBdP3RoaXNbMF1bbl06cjp0fSxyZW1vdmVBdHRyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXsxPT09dGhpcy5ub2RlVHlwZSYmWSh0aGlzLHQpfSl9LHByb3A6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1OW3RdfHx0LDEgaW4gYXJndW1lbnRzP3RoaXMuZWFjaChmdW5jdGlvbihuKXt0aGlzW3RdPVgodGhpcyxlLG4sdGhpc1t0XSl9KTp0aGlzWzBdJiZ0aGlzWzBdW3RdfSxkYXRhOmZ1bmN0aW9uKGUsbil7dmFyIGk9XCJkYXRhLVwiK2UucmVwbGFjZShtLFwiLSQxXCIpLnRvTG93ZXJDYXNlKCkscj0xIGluIGFyZ3VtZW50cz90aGlzLmF0dHIoaSxuKTp0aGlzLmF0dHIoaSk7cmV0dXJuIG51bGwhPT1yP0oocik6dH0sdmFsOmZ1bmN0aW9uKHQpe3JldHVybiAwIGluIGFyZ3VtZW50cz90aGlzLmVhY2goZnVuY3Rpb24oZSl7dGhpcy52YWx1ZT1YKHRoaXMsdCxlLHRoaXMudmFsdWUpfSk6dGhpc1swXSYmKHRoaXNbMF0ubXVsdGlwbGU/bih0aGlzWzBdKS5maW5kKFwib3B0aW9uXCIpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiB0aGlzLnNlbGVjdGVkfSkucGx1Y2soXCJ2YWx1ZVwiKTp0aGlzWzBdLnZhbHVlKX0sb2Zmc2V0OmZ1bmN0aW9uKHQpe2lmKHQpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihlKXt2YXIgaT1uKHRoaXMpLHI9WCh0aGlzLHQsZSxpLm9mZnNldCgpKSxvPWkub2Zmc2V0UGFyZW50KCkub2Zmc2V0KCksYT17dG9wOnIudG9wLW8udG9wLGxlZnQ6ci5sZWZ0LW8ubGVmdH07XCJzdGF0aWNcIj09aS5jc3MoXCJwb3NpdGlvblwiKSYmKGEucG9zaXRpb249XCJyZWxhdGl2ZVwiKSxpLmNzcyhhKX0pO2lmKCF0aGlzLmxlbmd0aClyZXR1cm4gbnVsbDt2YXIgZT10aGlzWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybntsZWZ0OmUubGVmdCt3aW5kb3cucGFnZVhPZmZzZXQsdG9wOmUudG9wK3dpbmRvdy5wYWdlWU9mZnNldCx3aWR0aDpNYXRoLnJvdW5kKGUud2lkdGgpLGhlaWdodDpNYXRoLnJvdW5kKGUuaGVpZ2h0KX19LGNzczpmdW5jdGlvbih0LGkpe2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil7dmFyIHI9dGhpc1swXSxvPWdldENvbXB1dGVkU3R5bGUocixcIlwiKTtpZighcilyZXR1cm47aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIHIuc3R5bGVbUCh0KV18fG8uZ2V0UHJvcGVydHlWYWx1ZSh0KTtpZihNKHQpKXt2YXIgYT17fTtyZXR1cm4gbi5lYWNoKE0odCk/dDpbdF0sZnVuY3Rpb24odCxlKXthW2VdPXIuc3R5bGVbUChlKV18fG8uZ2V0UHJvcGVydHlWYWx1ZShlKX0pLGF9fXZhciBzPVwiXCI7aWYoXCJzdHJpbmdcIj09Xyh0KSlpfHwwPT09aT9zPXoodCkrXCI6XCIrcSh0LGkpOnRoaXMuZWFjaChmdW5jdGlvbigpe3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoeih0KSl9KTtlbHNlIGZvcihlIGluIHQpdFtlXXx8MD09PXRbZV0/cys9eihlKStcIjpcIitxKGUsdFtlXSkrXCI7XCI6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eSh6KGUpKX0pO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt0aGlzLnN0eWxlLmNzc1RleHQrPVwiO1wiK3N9KX0saW5kZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dGhpcy5pbmRleE9mKG4odClbMF0pOnRoaXMucGFyZW50KCkuY2hpbGRyZW4oKS5pbmRleE9mKHRoaXNbMF0pfSxoYXNDbGFzczpmdW5jdGlvbih0KXtyZXR1cm4gdD9yLnNvbWUuY2FsbCh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRlc3QoVyh0KSl9LEkodCkpOiExfSxhZGRDbGFzczpmdW5jdGlvbih0KXtyZXR1cm4gdD90aGlzLmVhY2goZnVuY3Rpb24oZSl7aT1bXTt2YXIgcj1XKHRoaXMpLG89WCh0aGlzLHQsZSxyKTtvLnNwbGl0KC9cXHMrL2cpLmZvckVhY2goZnVuY3Rpb24odCl7bih0aGlzKS5oYXNDbGFzcyh0KXx8aS5wdXNoKHQpfSx0aGlzKSxpLmxlbmd0aCYmVyh0aGlzLHIrKHI/XCIgXCI6XCJcIikraS5qb2luKFwiIFwiKSl9KTp0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKG4pe3JldHVybiBlPT09dD9XKHRoaXMsXCJcIik6KGk9Vyh0aGlzKSxYKHRoaXMsZSxuLGkpLnNwbGl0KC9cXHMrL2cpLmZvckVhY2goZnVuY3Rpb24odCl7aT1pLnJlcGxhY2UoSSh0KSxcIiBcIil9KSx2b2lkIFcodGhpcyxpLnRyaW0oKSkpfSl9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKGUsaSl7cmV0dXJuIGU/dGhpcy5lYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPW4odGhpcyksYT1YKHRoaXMsZSxyLFcodGhpcykpO2Euc3BsaXQoL1xccysvZykuZm9yRWFjaChmdW5jdGlvbihlKXsoaT09PXQ/IW8uaGFzQ2xhc3MoZSk6aSk/by5hZGRDbGFzcyhlKTpvLnJlbW92ZUNsYXNzKGUpfSl9KTp0aGlzfSxzY3JvbGxUb3A6ZnVuY3Rpb24oZSl7aWYodGhpcy5sZW5ndGgpe3ZhciBuPVwic2Nyb2xsVG9wXCJpbiB0aGlzWzBdO3JldHVybiBlPT09dD9uP3RoaXNbMF0uc2Nyb2xsVG9wOnRoaXNbMF0ucGFnZVlPZmZzZXQ6dGhpcy5lYWNoKG4/ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbFRvcD1lfTpmdW5jdGlvbigpe3RoaXMuc2Nyb2xsVG8odGhpcy5zY3JvbGxYLGUpfSl9fSxzY3JvbGxMZWZ0OmZ1bmN0aW9uKGUpe2lmKHRoaXMubGVuZ3RoKXt2YXIgbj1cInNjcm9sbExlZnRcImluIHRoaXNbMF07cmV0dXJuIGU9PT10P24/dGhpc1swXS5zY3JvbGxMZWZ0OnRoaXNbMF0ucGFnZVhPZmZzZXQ6dGhpcy5lYWNoKG4/ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbExlZnQ9ZX06ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbFRvKGUsdGhpcy5zY3JvbGxZKX0pfX0scG9zaXRpb246ZnVuY3Rpb24oKXtpZih0aGlzLmxlbmd0aCl7dmFyIHQ9dGhpc1swXSxlPXRoaXMub2Zmc2V0UGFyZW50KCksaT10aGlzLm9mZnNldCgpLHI9ZC50ZXN0KGVbMF0ubm9kZU5hbWUpP3t0b3A6MCxsZWZ0OjB9OmUub2Zmc2V0KCk7cmV0dXJuIGkudG9wLT1wYXJzZUZsb2F0KG4odCkuY3NzKFwibWFyZ2luLXRvcFwiKSl8fDAsaS5sZWZ0LT1wYXJzZUZsb2F0KG4odCkuY3NzKFwibWFyZ2luLWxlZnRcIikpfHwwLHIudG9wKz1wYXJzZUZsb2F0KG4oZVswXSkuY3NzKFwiYm9yZGVyLXRvcC13aWR0aFwiKSl8fDAsci5sZWZ0Kz1wYXJzZUZsb2F0KG4oZVswXSkuY3NzKFwiYm9yZGVyLWxlZnQtd2lkdGhcIikpfHwwLHt0b3A6aS50b3Atci50b3AsbGVmdDppLmxlZnQtci5sZWZ0fX19LG9mZnNldFBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLm9mZnNldFBhcmVudHx8cy5ib2R5O3QmJiFkLnRlc3QodC5ub2RlTmFtZSkmJlwic3RhdGljXCI9PW4odCkuY3NzKFwicG9zaXRpb25cIik7KXQ9dC5vZmZzZXRQYXJlbnQ7cmV0dXJuIHR9KX19LG4uZm4uZGV0YWNoPW4uZm4ucmVtb3ZlLFtcIndpZHRoXCIsXCJoZWlnaHRcIl0uZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgaT1lLnJlcGxhY2UoLy4vLGZ1bmN0aW9uKHQpe3JldHVybiB0WzBdLnRvVXBwZXJDYXNlKCl9KTtuLmZuW2VdPWZ1bmN0aW9uKHIpe3ZhciBvLGE9dGhpc1swXTtyZXR1cm4gcj09PXQ/TChhKT9hW1wiaW5uZXJcIitpXTprKGEpP2EuZG9jdW1lbnRFbGVtZW50W1wic2Nyb2xsXCIraV06KG89dGhpcy5vZmZzZXQoKSkmJm9bZV06dGhpcy5lYWNoKGZ1bmN0aW9uKHQpe2E9bih0aGlzKSxhLmNzcyhlLFgodGhpcyxyLHQsYVtlXSgpKSl9KX19KSx2LmZvckVhY2goZnVuY3Rpb24odCxlKXt2YXIgaT1lJTI7bi5mblt0XT1mdW5jdGlvbigpe3ZhciB0LG8scj1uLm1hcChhcmd1bWVudHMsZnVuY3Rpb24oZSl7cmV0dXJuIHQ9XyhlKSxcIm9iamVjdFwiPT10fHxcImFycmF5XCI9PXR8fG51bGw9PWU/ZTpqLmZyYWdtZW50KGUpfSksYT10aGlzLmxlbmd0aD4xO3JldHVybiByLmxlbmd0aDwxP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKHQsdSl7bz1pP3U6dS5wYXJlbnROb2RlLHU9MD09ZT91Lm5leHRTaWJsaW5nOjE9PWU/dS5maXJzdENoaWxkOjI9PWU/dTpudWxsO3ZhciBmPW4uY29udGFpbnMocy5kb2N1bWVudEVsZW1lbnQsbyk7ci5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lmKGEpdD10LmNsb25lTm9kZSghMCk7ZWxzZSBpZighbylyZXR1cm4gbih0KS5yZW1vdmUoKTtvLmluc2VydEJlZm9yZSh0LHUpLGYmJkcodCxmdW5jdGlvbih0KXtudWxsPT10Lm5vZGVOYW1lfHxcIlNDUklQVFwiIT09dC5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpfHx0LnR5cGUmJlwidGV4dC9qYXZhc2NyaXB0XCIhPT10LnR5cGV8fHQuc3JjfHx3aW5kb3cuZXZhbC5jYWxsKHdpbmRvdyx0LmlubmVySFRNTCl9KX0pfSl9LG4uZm5baT90K1wiVG9cIjpcImluc2VydFwiKyhlP1wiQmVmb3JlXCI6XCJBZnRlclwiKV09ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSlbdF0odGhpcyksdGhpc319KSxqLloucHJvdG90eXBlPW4uZm4sai51bmlxPUMsai5kZXNlcmlhbGl6ZVZhbHVlPUosbi56ZXB0bz1qLG59KCk7d2luZG93LlplcHRvPVplcHRvLHZvaWQgMD09PXdpbmRvdy4kJiYod2luZG93LiQ9WmVwdG8pLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGwodCl7cmV0dXJuIHQuX3ppZHx8KHQuX3ppZD1lKyspfWZ1bmN0aW9uIGgodCxlLG4saSl7aWYoZT1wKGUpLGUubnMpdmFyIHI9ZChlLm5zKTtyZXR1cm4oYVtsKHQpXXx8W10pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hKCF0fHxlLmUmJnQuZSE9ZS5lfHxlLm5zJiYhci50ZXN0KHQubnMpfHxuJiZsKHQuZm4pIT09bChuKXx8aSYmdC5zZWwhPWkpfSl9ZnVuY3Rpb24gcCh0KXt2YXIgZT0oXCJcIit0KS5zcGxpdChcIi5cIik7cmV0dXJue2U6ZVswXSxuczplLnNsaWNlKDEpLnNvcnQoKS5qb2luKFwiIFwiKX19ZnVuY3Rpb24gZCh0KXtyZXR1cm4gbmV3IFJlZ0V4cChcIig/Ol58IClcIit0LnJlcGxhY2UoXCIgXCIsXCIgLiogP1wiKStcIig/OiB8JClcIil9ZnVuY3Rpb24gbSh0LGUpe3JldHVybiB0LmRlbCYmIXUmJnQuZSBpbiBmfHwhIWV9ZnVuY3Rpb24gZyh0KXtyZXR1cm4gY1t0XXx8dSYmZlt0XXx8dH1mdW5jdGlvbiB2KGUsaSxyLG8scyx1LGYpe3ZhciBoPWwoZSksZD1hW2hdfHwoYVtoXT1bXSk7aS5zcGxpdCgvXFxzLykuZm9yRWFjaChmdW5jdGlvbihpKXtpZihcInJlYWR5XCI9PWkpcmV0dXJuIHQoZG9jdW1lbnQpLnJlYWR5KHIpO3ZhciBhPXAoaSk7YS5mbj1yLGEuc2VsPXMsYS5lIGluIGMmJihyPWZ1bmN0aW9uKGUpe3ZhciBuPWUucmVsYXRlZFRhcmdldDtyZXR1cm4hbnx8biE9PXRoaXMmJiF0LmNvbnRhaW5zKHRoaXMsbik/YS5mbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk6dm9pZCAwfSksYS5kZWw9dTt2YXIgbD11fHxyO2EucHJveHk9ZnVuY3Rpb24odCl7aWYodD1FKHQpLCF0LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkpe3QuZGF0YT1vO3ZhciBpPWwuYXBwbHkoZSx0Ll9hcmdzPT1uP1t0XTpbdF0uY29uY2F0KHQuX2FyZ3MpKTtyZXR1cm4gaT09PSExJiYodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCkpLGl9fSxhLmk9ZC5sZW5ndGgsZC5wdXNoKGEpLFwiYWRkRXZlbnRMaXN0ZW5lclwiaW4gZSYmZS5hZGRFdmVudExpc3RlbmVyKGcoYS5lKSxhLnByb3h5LG0oYSxmKSl9KX1mdW5jdGlvbiB5KHQsZSxuLGkscil7dmFyIG89bCh0KTsoZXx8XCJcIikuc3BsaXQoL1xccy8pLmZvckVhY2goZnVuY3Rpb24oZSl7aCh0LGUsbixpKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2RlbGV0ZSBhW29dW2UuaV0sXCJyZW1vdmVFdmVudExpc3RlbmVyXCJpbiB0JiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZyhlLmUpLGUucHJveHksbShlLHIpKX0pfSl9ZnVuY3Rpb24gRShlLGkpe3JldHVybihpfHwhZS5pc0RlZmF1bHRQcmV2ZW50ZWQpJiYoaXx8KGk9ZSksdC5lYWNoKFQsZnVuY3Rpb24odCxuKXt2YXIgcj1pW3RdO2VbdF09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tuXT1iLHImJnIuYXBwbHkoaSxhcmd1bWVudHMpfSxlW25dPXd9KSwoaS5kZWZhdWx0UHJldmVudGVkIT09bj9pLmRlZmF1bHRQcmV2ZW50ZWQ6XCJyZXR1cm5WYWx1ZVwiaW4gaT9pLnJldHVyblZhbHVlPT09ITE6aS5nZXRQcmV2ZW50RGVmYXVsdCYmaS5nZXRQcmV2ZW50RGVmYXVsdCgpKSYmKGUuaXNEZWZhdWx0UHJldmVudGVkPWIpKSxlfWZ1bmN0aW9uIFModCl7dmFyIGUsaT17b3JpZ2luYWxFdmVudDp0fTtmb3IoZSBpbiB0KXgudGVzdChlKXx8dFtlXT09PW58fChpW2VdPXRbZV0pO3JldHVybiBFKGksdCl9dmFyIG4sZT0xLGk9QXJyYXkucHJvdG90eXBlLnNsaWNlLHI9dC5pc0Z1bmN0aW9uLG89ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHR9LGE9e30scz17fSx1PVwib25mb2N1c2luXCJpbiB3aW5kb3csZj17Zm9jdXM6XCJmb2N1c2luXCIsYmx1cjpcImZvY3Vzb3V0XCJ9LGM9e21vdXNlZW50ZXI6XCJtb3VzZW92ZXJcIixtb3VzZWxlYXZlOlwibW91c2VvdXRcIn07cy5jbGljaz1zLm1vdXNlZG93bj1zLm1vdXNldXA9cy5tb3VzZW1vdmU9XCJNb3VzZUV2ZW50c1wiLHQuZXZlbnQ9e2FkZDp2LHJlbW92ZTp5fSx0LnByb3h5PWZ1bmN0aW9uKGUsbil7dmFyIGE9MiBpbiBhcmd1bWVudHMmJmkuY2FsbChhcmd1bWVudHMsMik7aWYocihlKSl7dmFyIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseShuLGE/YS5jb25jYXQoaS5jYWxsKGFyZ3VtZW50cykpOmFyZ3VtZW50cyl9O3JldHVybiBzLl96aWQ9bChlKSxzfWlmKG8obikpcmV0dXJuIGE/KGEudW5zaGlmdChlW25dLGUpLHQucHJveHkuYXBwbHkobnVsbCxhKSk6dC5wcm94eShlW25dLGUpO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJleHBlY3RlZCBmdW5jdGlvblwiKX0sdC5mbi5iaW5kPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5vbih0LGUsbil9LHQuZm4udW5iaW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMub2ZmKHQsZSl9LHQuZm4ub25lPWZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiB0aGlzLm9uKHQsZSxuLGksMSl9O3ZhciBiPWZ1bmN0aW9uKCl7cmV0dXJuITB9LHc9ZnVuY3Rpb24oKXtyZXR1cm4hMX0seD0vXihbQS1aXXxyZXR1cm5WYWx1ZSR8bGF5ZXJbWFldJCkvLFQ9e3ByZXZlbnREZWZhdWx0OlwiaXNEZWZhdWx0UHJldmVudGVkXCIsc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOlwiaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWRcIixzdG9wUHJvcGFnYXRpb246XCJpc1Byb3BhZ2F0aW9uU3RvcHBlZFwifTt0LmZuLmRlbGVnYXRlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5vbihlLHQsbil9LHQuZm4udW5kZWxlZ2F0ZT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMub2ZmKGUsdCxuKX0sdC5mbi5saXZlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQoZG9jdW1lbnQuYm9keSkuZGVsZWdhdGUodGhpcy5zZWxlY3RvcixlLG4pLHRoaXN9LHQuZm4uZGllPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQoZG9jdW1lbnQuYm9keSkudW5kZWxlZ2F0ZSh0aGlzLnNlbGVjdG9yLGUsbiksdGhpc30sdC5mbi5vbj1mdW5jdGlvbihlLGEscyx1LGYpe3ZhciBjLGwsaD10aGlzO3JldHVybiBlJiYhbyhlKT8odC5lYWNoKGUsZnVuY3Rpb24odCxlKXtoLm9uKHQsYSxzLGUsZil9KSxoKToobyhhKXx8cih1KXx8dT09PSExfHwodT1zLHM9YSxhPW4pLChyKHMpfHxzPT09ITEpJiYodT1zLHM9biksdT09PSExJiYodT13KSxoLmVhY2goZnVuY3Rpb24obixyKXtmJiYoYz1mdW5jdGlvbih0KXtyZXR1cm4geShyLHQudHlwZSx1KSx1LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLGEmJihsPWZ1bmN0aW9uKGUpe3ZhciBuLG89dChlLnRhcmdldCkuY2xvc2VzdChhLHIpLmdldCgwKTtyZXR1cm4gbyYmbyE9PXI/KG49dC5leHRlbmQoUyhlKSx7Y3VycmVudFRhcmdldDpvLGxpdmVGaXJlZDpyfSksKGN8fHUpLmFwcGx5KG8sW25dLmNvbmNhdChpLmNhbGwoYXJndW1lbnRzLDEpKSkpOnZvaWQgMH0pLHYocixlLHUscyxhLGx8fGMpfSkpfSx0LmZuLm9mZj1mdW5jdGlvbihlLGksYSl7dmFyIHM9dGhpcztyZXR1cm4gZSYmIW8oZSk/KHQuZWFjaChlLGZ1bmN0aW9uKHQsZSl7cy5vZmYodCxpLGUpfSkscyk6KG8oaSl8fHIoYSl8fGE9PT0hMXx8KGE9aSxpPW4pLGE9PT0hMSYmKGE9dykscy5lYWNoKGZ1bmN0aW9uKCl7eSh0aGlzLGUsYSxpKX0pKX0sdC5mbi50cmlnZ2VyPWZ1bmN0aW9uKGUsbil7cmV0dXJuIGU9byhlKXx8dC5pc1BsYWluT2JqZWN0KGUpP3QuRXZlbnQoZSk6RShlKSxlLl9hcmdzPW4sdGhpcy5lYWNoKGZ1bmN0aW9uKCl7XCJkaXNwYXRjaEV2ZW50XCJpbiB0aGlzP3RoaXMuZGlzcGF0Y2hFdmVudChlKTp0KHRoaXMpLnRyaWdnZXJIYW5kbGVyKGUsbil9KX0sdC5mbi50cmlnZ2VySGFuZGxlcj1mdW5jdGlvbihlLG4pe3ZhciBpLHI7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihhLHMpe2k9UyhvKGUpP3QuRXZlbnQoZSk6ZSksaS5fYXJncz1uLGkudGFyZ2V0PXMsdC5lYWNoKGgocyxlLnR5cGV8fGUpLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHI9ZS5wcm94eShpKSxpLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCk/ITE6dm9pZCAwfSl9KSxyfSxcImZvY3VzaW4gZm9jdXNvdXQgbG9hZCByZXNpemUgc2Nyb2xsIHVubG9hZCBjbGljayBkYmxjbGljayBtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSBjaGFuZ2Ugc2VsZWN0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgZXJyb3JcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihlKXt0LmZuW2VdPWZ1bmN0aW9uKHQpe3JldHVybiB0P3RoaXMuYmluZChlLHQpOnRoaXMudHJpZ2dlcihlKX19KSxbXCJmb2N1c1wiLFwiYmx1clwiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3QuZm5bZV09ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dGhpcy5iaW5kKGUsdCk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dHJ5e3RoaXNbZV0oKX1jYXRjaCh0KXt9fSksdGhpc319KSx0LkV2ZW50PWZ1bmN0aW9uKHQsZSl7byh0KXx8KGU9dCx0PWUudHlwZSk7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRXZlbnQoc1t0XXx8XCJFdmVudHNcIiksaT0hMDtpZihlKWZvcih2YXIgciBpbiBlKVwiYnViYmxlc1wiPT1yP2k9ISFlW3JdOm5bcl09ZVtyXTtyZXR1cm4gbi5pbml0RXZlbnQodCxpLCEwKSxFKG4pfX0oWmVwdG8pLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGwoZSxuLGkpe3ZhciByPXQuRXZlbnQobik7cmV0dXJuIHQoZSkudHJpZ2dlcihyLGkpLCFyLmlzRGVmYXVsdFByZXZlbnRlZCgpfWZ1bmN0aW9uIGgodCxlLGkscil7cmV0dXJuIHQuZ2xvYmFsP2woZXx8bixpLHIpOnZvaWQgMH1mdW5jdGlvbiBwKGUpe2UuZ2xvYmFsJiYwPT09dC5hY3RpdmUrKyYmaChlLG51bGwsXCJhamF4U3RhcnRcIil9ZnVuY3Rpb24gZChlKXtlLmdsb2JhbCYmIS0tdC5hY3RpdmUmJmgoZSxudWxsLFwiYWpheFN0b3BcIil9ZnVuY3Rpb24gbSh0LGUpe3ZhciBuPWUuY29udGV4dDtyZXR1cm4gZS5iZWZvcmVTZW5kLmNhbGwobix0LGUpPT09ITF8fGgoZSxuLFwiYWpheEJlZm9yZVNlbmRcIixbdCxlXSk9PT0hMT8hMTp2b2lkIGgoZSxuLFwiYWpheFNlbmRcIixbdCxlXSl9ZnVuY3Rpb24gZyh0LGUsbixpKXt2YXIgcj1uLmNvbnRleHQsbz1cInN1Y2Nlc3NcIjtuLnN1Y2Nlc3MuY2FsbChyLHQsbyxlKSxpJiZpLnJlc29sdmVXaXRoKHIsW3QsbyxlXSksaChuLHIsXCJhamF4U3VjY2Vzc1wiLFtlLG4sdF0pLHkobyxlLG4pfWZ1bmN0aW9uIHYodCxlLG4saSxyKXt2YXIgbz1pLmNvbnRleHQ7aS5lcnJvci5jYWxsKG8sbixlLHQpLHImJnIucmVqZWN0V2l0aChvLFtuLGUsdF0pLGgoaSxvLFwiYWpheEVycm9yXCIsW24saSx0fHxlXSkseShlLG4saSl9ZnVuY3Rpb24geSh0LGUsbil7dmFyIGk9bi5jb250ZXh0O24uY29tcGxldGUuY2FsbChpLGUsdCksaChuLGksXCJhamF4Q29tcGxldGVcIixbZSxuXSksZChuKX1mdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIHcodCl7cmV0dXJuIHQmJih0PXQuc3BsaXQoXCI7XCIsMilbMF0pLHQmJih0PT1mP1wiaHRtbFwiOnQ9PXU/XCJqc29uXCI6YS50ZXN0KHQpP1wic2NyaXB0XCI6cy50ZXN0KHQpJiZcInhtbFwiKXx8XCJ0ZXh0XCJ9ZnVuY3Rpb24geCh0LGUpe3JldHVyblwiXCI9PWU/dDoodCtcIiZcIitlKS5yZXBsYWNlKC9bJj9dezEsMn0vLFwiP1wiKX1mdW5jdGlvbiBUKGUpe2UucHJvY2Vzc0RhdGEmJmUuZGF0YSYmXCJzdHJpbmdcIiE9dC50eXBlKGUuZGF0YSkmJihlLmRhdGE9dC5wYXJhbShlLmRhdGEsZS50cmFkaXRpb25hbCkpLCFlLmRhdGF8fGUudHlwZSYmXCJHRVRcIiE9ZS50eXBlLnRvVXBwZXJDYXNlKCl8fChlLnVybD14KGUudXJsLGUuZGF0YSksZS5kYXRhPXZvaWQgMCl9ZnVuY3Rpb24gRShlLG4saSxyKXtyZXR1cm4gdC5pc0Z1bmN0aW9uKG4pJiYocj1pLGk9bixuPXZvaWQgMCksdC5pc0Z1bmN0aW9uKGkpfHwocj1pLGk9dm9pZCAwKSx7dXJsOmUsZGF0YTpuLHN1Y2Nlc3M6aSxkYXRhVHlwZTpyfX1mdW5jdGlvbiBqKGUsbixpLHIpe3ZhciBvLGE9dC5pc0FycmF5KG4pLHM9dC5pc1BsYWluT2JqZWN0KG4pO3QuZWFjaChuLGZ1bmN0aW9uKG4sdSl7bz10LnR5cGUodSksciYmKG49aT9yOnIrXCJbXCIrKHN8fFwib2JqZWN0XCI9PW98fFwiYXJyYXlcIj09bz9uOlwiXCIpK1wiXVwiKSwhciYmYT9lLmFkZCh1Lm5hbWUsdS52YWx1ZSk6XCJhcnJheVwiPT1vfHwhaSYmXCJvYmplY3RcIj09bz9qKGUsdSxpLG4pOmUuYWRkKG4sdSl9KX12YXIgaSxyLGU9MCxuPXdpbmRvdy5kb2N1bWVudCxvPS88c2NyaXB0XFxiW148XSooPzooPyE8XFwvc2NyaXB0Pik8W148XSopKjxcXC9zY3JpcHQ+L2dpLGE9L14oPzp0ZXh0fGFwcGxpY2F0aW9uKVxcL2phdmFzY3JpcHQvaSxzPS9eKD86dGV4dHxhcHBsaWNhdGlvbilcXC94bWwvaSx1PVwiYXBwbGljYXRpb24vanNvblwiLGY9XCJ0ZXh0L2h0bWxcIixjPS9eXFxzKiQvO3QuYWN0aXZlPTAsdC5hamF4SlNPTlA9ZnVuY3Rpb24oaSxyKXtpZighKFwidHlwZVwiaW4gaSkpcmV0dXJuIHQuYWpheChpKTt2YXIgZixoLG89aS5qc29ucENhbGxiYWNrLGE9KHQuaXNGdW5jdGlvbihvKT9vKCk6byl8fFwianNvbnBcIisgKytlLHM9bi5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpLHU9d2luZG93W2FdLGM9ZnVuY3Rpb24oZSl7dChzKS50cmlnZ2VySGFuZGxlcihcImVycm9yXCIsZXx8XCJhYm9ydFwiKX0sbD17YWJvcnQ6Y307cmV0dXJuIHImJnIucHJvbWlzZShsKSx0KHMpLm9uKFwibG9hZCBlcnJvclwiLGZ1bmN0aW9uKGUsbil7Y2xlYXJUaW1lb3V0KGgpLHQocykub2ZmKCkucmVtb3ZlKCksXCJlcnJvclwiIT1lLnR5cGUmJmY/ZyhmWzBdLGwsaSxyKTp2KG51bGwsbnx8XCJlcnJvclwiLGwsaSxyKSx3aW5kb3dbYV09dSxmJiZ0LmlzRnVuY3Rpb24odSkmJnUoZlswXSksdT1mPXZvaWQgMH0pLG0obCxpKT09PSExPyhjKFwiYWJvcnRcIiksbCk6KHdpbmRvd1thXT1mdW5jdGlvbigpe2Y9YXJndW1lbnRzfSxzLnNyYz1pLnVybC5yZXBsYWNlKC9cXD8oLispPVxcPy8sXCI/JDE9XCIrYSksbi5oZWFkLmFwcGVuZENoaWxkKHMpLGkudGltZW91dD4wJiYoaD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YyhcInRpbWVvdXRcIil9LGkudGltZW91dCkpLGwpfSx0LmFqYXhTZXR0aW5ncz17dHlwZTpcIkdFVFwiLGJlZm9yZVNlbmQ6YixzdWNjZXNzOmIsZXJyb3I6Yixjb21wbGV0ZTpiLGNvbnRleHQ6bnVsbCxnbG9iYWw6ITAseGhyOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3R9LGFjY2VwdHM6e3NjcmlwdDpcInRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgYXBwbGljYXRpb24veC1qYXZhc2NyaXB0XCIsanNvbjp1LHhtbDpcImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWxcIixodG1sOmYsdGV4dDpcInRleHQvcGxhaW5cIn0sY3Jvc3NEb21haW46ITEsdGltZW91dDowLHByb2Nlc3NEYXRhOiEwLGNhY2hlOiEwfSx0LmFqYXg9ZnVuY3Rpb24oZSl7dmFyIG49dC5leHRlbmQoe30sZXx8e30pLG89dC5EZWZlcnJlZCYmdC5EZWZlcnJlZCgpO2ZvcihpIGluIHQuYWpheFNldHRpbmdzKXZvaWQgMD09PW5baV0mJihuW2ldPXQuYWpheFNldHRpbmdzW2ldKTtwKG4pLG4uY3Jvc3NEb21haW58fChuLmNyb3NzRG9tYWluPS9eKFtcXHctXSs6KT9cXC9cXC8oW15cXC9dKykvLnRlc3Qobi51cmwpJiZSZWdFeHAuJDIhPXdpbmRvdy5sb2NhdGlvbi5ob3N0KSxuLnVybHx8KG4udXJsPXdpbmRvdy5sb2NhdGlvbi50b1N0cmluZygpKSxUKG4pO3ZhciBhPW4uZGF0YVR5cGUscz0vXFw/Lis9XFw/Ly50ZXN0KG4udXJsKTtpZihzJiYoYT1cImpzb25wXCIpLG4uY2FjaGUhPT0hMSYmKGUmJmUuY2FjaGU9PT0hMHx8XCJzY3JpcHRcIiE9YSYmXCJqc29ucFwiIT1hKXx8KG4udXJsPXgobi51cmwsXCJfPVwiK0RhdGUubm93KCkpKSxcImpzb25wXCI9PWEpcmV0dXJuIHN8fChuLnVybD14KG4udXJsLG4uanNvbnA/bi5qc29ucCtcIj0/XCI6bi5qc29ucD09PSExP1wiXCI6XCJjYWxsYmFjaz0/XCIpKSx0LmFqYXhKU09OUChuLG8pO3ZhciBFLHU9bi5hY2NlcHRzW2FdLGY9e30sbD1mdW5jdGlvbih0LGUpe2ZbdC50b0xvd2VyQ2FzZSgpXT1bdCxlXX0saD0vXihbXFx3LV0rOilcXC9cXC8vLnRlc3Qobi51cmwpP1JlZ0V4cC4kMTp3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wsZD1uLnhocigpLHk9ZC5zZXRSZXF1ZXN0SGVhZGVyO2lmKG8mJm8ucHJvbWlzZShkKSxuLmNyb3NzRG9tYWlufHxsKFwiWC1SZXF1ZXN0ZWQtV2l0aFwiLFwiWE1MSHR0cFJlcXVlc3RcIiksbChcIkFjY2VwdFwiLHV8fFwiKi8qXCIpLCh1PW4ubWltZVR5cGV8fHUpJiYodS5pbmRleE9mKFwiLFwiKT4tMSYmKHU9dS5zcGxpdChcIixcIiwyKVswXSksZC5vdmVycmlkZU1pbWVUeXBlJiZkLm92ZXJyaWRlTWltZVR5cGUodSkpLChuLmNvbnRlbnRUeXBlfHxuLmNvbnRlbnRUeXBlIT09ITEmJm4uZGF0YSYmXCJHRVRcIiE9bi50eXBlLnRvVXBwZXJDYXNlKCkpJiZsKFwiQ29udGVudC1UeXBlXCIsbi5jb250ZW50VHlwZXx8XCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiksbi5oZWFkZXJzKWZvcihyIGluIG4uaGVhZGVycylsKHIsbi5oZWFkZXJzW3JdKTtpZihkLnNldFJlcXVlc3RIZWFkZXI9bCxkLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PWQucmVhZHlTdGF0ZSl7ZC5vbnJlYWR5c3RhdGVjaGFuZ2U9YixjbGVhclRpbWVvdXQoRSk7dmFyIGUsaT0hMTtpZihkLnN0YXR1cz49MjAwJiZkLnN0YXR1czwzMDB8fDMwND09ZC5zdGF0dXN8fDA9PWQuc3RhdHVzJiZcImZpbGU6XCI9PWgpe2E9YXx8dyhuLm1pbWVUeXBlfHxkLmdldFJlc3BvbnNlSGVhZGVyKFwiY29udGVudC10eXBlXCIpKSxlPWQucmVzcG9uc2VUZXh0O3RyeXtcInNjcmlwdFwiPT1hPygxLGV2YWwpKGUpOlwieG1sXCI9PWE/ZT1kLnJlc3BvbnNlWE1MOlwianNvblwiPT1hJiYoZT1jLnRlc3QoZSk/bnVsbDp0LnBhcnNlSlNPTihlKSl9Y2F0Y2gocil7aT1yfWk/dihpLFwicGFyc2VyZXJyb3JcIixkLG4sbyk6ZyhlLGQsbixvKX1lbHNlIHYoZC5zdGF0dXNUZXh0fHxudWxsLGQuc3RhdHVzP1wiZXJyb3JcIjpcImFib3J0XCIsZCxuLG8pfX0sbShkLG4pPT09ITEpcmV0dXJuIGQuYWJvcnQoKSx2KG51bGwsXCJhYm9ydFwiLGQsbixvKSxkO2lmKG4ueGhyRmllbGRzKWZvcihyIGluIG4ueGhyRmllbGRzKWRbcl09bi54aHJGaWVsZHNbcl07dmFyIFM9XCJhc3luY1wiaW4gbj9uLmFzeW5jOiEwO2Qub3BlbihuLnR5cGUsbi51cmwsUyxuLnVzZXJuYW1lLG4ucGFzc3dvcmQpO2ZvcihyIGluIGYpeS5hcHBseShkLGZbcl0pO3JldHVybiBuLnRpbWVvdXQ+MCYmKEU9c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25yZWFkeXN0YXRlY2hhbmdlPWIsZC5hYm9ydCgpLHYobnVsbCxcInRpbWVvdXRcIixkLG4sbyl9LG4udGltZW91dCkpLGQuc2VuZChuLmRhdGE/bi5kYXRhOm51bGwpLGR9LHQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHQuYWpheChFLmFwcGx5KG51bGwsYXJndW1lbnRzKSl9LHQucG9zdD1mdW5jdGlvbigpe3ZhciBlPUUuYXBwbHkobnVsbCxhcmd1bWVudHMpO3JldHVybiBlLnR5cGU9XCJQT1NUXCIsdC5hamF4KGUpfSx0LmdldEpTT049ZnVuY3Rpb24oKXt2YXIgZT1FLmFwcGx5KG51bGwsYXJndW1lbnRzKTtyZXR1cm4gZS5kYXRhVHlwZT1cImpzb25cIix0LmFqYXgoZSl9LHQuZm4ubG9hZD1mdW5jdGlvbihlLG4saSl7aWYoIXRoaXMubGVuZ3RoKXJldHVybiB0aGlzO3ZhciBzLHI9dGhpcyxhPWUuc3BsaXQoL1xccy8pLHU9RShlLG4saSksZj11LnN1Y2Nlc3M7cmV0dXJuIGEubGVuZ3RoPjEmJih1LnVybD1hWzBdLHM9YVsxXSksdS5zdWNjZXNzPWZ1bmN0aW9uKGUpe3IuaHRtbChzP3QoXCI8ZGl2PlwiKS5odG1sKGUucmVwbGFjZShvLFwiXCIpKS5maW5kKHMpOmUpLGYmJmYuYXBwbHkocixhcmd1bWVudHMpfSx0LmFqYXgodSksdGhpc307dmFyIFM9ZW5jb2RlVVJJQ29tcG9uZW50O3QucGFyYW09ZnVuY3Rpb24odCxlKXt2YXIgbj1bXTtyZXR1cm4gbi5hZGQ9ZnVuY3Rpb24odCxlKXt0aGlzLnB1c2goUyh0KStcIj1cIitTKGUpKX0saihuLHQsZSksbi5qb2luKFwiJlwiKS5yZXBsYWNlKC8lMjAvZyxcIitcIil9fShaZXB0byksZnVuY3Rpb24odCl7dC5mbi5zZXJpYWxpemVBcnJheT1mdW5jdGlvbigpe3ZhciBuLGU9W107cmV0dXJuIHQoW10uc2xpY2UuY2FsbCh0aGlzLmdldCgwKS5lbGVtZW50cykpLmVhY2goZnVuY3Rpb24oKXtuPXQodGhpcyk7dmFyIGk9bi5hdHRyKFwidHlwZVwiKTtcImZpZWxkc2V0XCIhPXRoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmIXRoaXMuZGlzYWJsZWQmJlwic3VibWl0XCIhPWkmJlwicmVzZXRcIiE9aSYmXCJidXR0b25cIiE9aSYmKFwicmFkaW9cIiE9aSYmXCJjaGVja2JveFwiIT1pfHx0aGlzLmNoZWNrZWQpJiZlLnB1c2goe25hbWU6bi5hdHRyKFwibmFtZVwiKSx2YWx1ZTpuLnZhbCgpfSl9KSxlfSx0LmZuLnNlcmlhbGl6ZT1mdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLnNlcmlhbGl6ZUFycmF5KCkuZm9yRWFjaChmdW5jdGlvbihlKXt0LnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGUubmFtZSkrXCI9XCIrZW5jb2RlVVJJQ29tcG9uZW50KGUudmFsdWUpKX0pLHQuam9pbihcIiZcIil9LHQuZm4uc3VibWl0PWZ1bmN0aW9uKGUpe2lmKGUpdGhpcy5iaW5kKFwic3VibWl0XCIsZSk7ZWxzZSBpZih0aGlzLmxlbmd0aCl7dmFyIG49dC5FdmVudChcInN1Ym1pdFwiKTt0aGlzLmVxKDApLnRyaWdnZXIobiksbi5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8dGhpcy5nZXQoMCkuc3VibWl0KCl9cmV0dXJuIHRoaXN9fShaZXB0byksZnVuY3Rpb24odCl7XCJfX3Byb3RvX19cImlue318fHQuZXh0ZW5kKHQuemVwdG8se1o6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gZT1lfHxbXSx0LmV4dGVuZChlLHQuZm4pLGUuc2VsZWN0b3I9bnx8XCJcIixlLl9fWj0hMCxlfSxpc1o6ZnVuY3Rpb24oZSl7cmV0dXJuXCJhcnJheVwiPT09dC50eXBlKGUpJiZcIl9fWlwiaW4gZX19KTt0cnl7Z2V0Q29tcHV0ZWRTdHlsZSh2b2lkIDApfWNhdGNoKGUpe3ZhciBuPWdldENvbXB1dGVkU3R5bGU7d2luZG93LmdldENvbXB1dGVkU3R5bGU9ZnVuY3Rpb24odCl7dHJ5e3JldHVybiBuKHQpfWNhdGNoKGUpe3JldHVybiBudWxsfX19fShaZXB0byksZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXt2YXIgZT10aGlzLm9zPXt9LG49dGhpcy5icm93c2VyPXt9LGk9dC5tYXRjaCgvV2ViW2tLXWl0W1xcL117MCwxfShbXFxkLl0rKS8pLHI9dC5tYXRjaCgvKEFuZHJvaWQpOz9bXFxzXFwvXSsoW1xcZC5dKyk/Lyksbz0hIXQubWF0Y2goL1xcKE1hY2ludG9zaFxcOyBJbnRlbCAvKSxhPXQubWF0Y2goLyhpUGFkKS4qT1NcXHMoW1xcZF9dKykvKSxzPXQubWF0Y2goLyhpUG9kKSguKk9TXFxzKFtcXGRfXSspKT8vKSx1PSFhJiZ0Lm1hdGNoKC8oaVBob25lXFxzT1MpXFxzKFtcXGRfXSspLyksZj10Lm1hdGNoKC8od2ViT1N8aHB3T1MpW1xcc1xcL10oW1xcZC5dKykvKSxjPXQubWF0Y2goL1dpbmRvd3MgUGhvbmUgKFtcXGQuXSspLyksbD1mJiZ0Lm1hdGNoKC9Ub3VjaFBhZC8pLGg9dC5tYXRjaCgvS2luZGxlXFwvKFtcXGQuXSspLykscD10Lm1hdGNoKC9TaWxrXFwvKFtcXGQuX10rKS8pLGQ9dC5tYXRjaCgvKEJsYWNrQmVycnkpLipWZXJzaW9uXFwvKFtcXGQuXSspLyksbT10Lm1hdGNoKC8oQkIxMCkuKlZlcnNpb25cXC8oW1xcZC5dKykvKSxnPXQubWF0Y2goLyhSSU1cXHNUYWJsZXRcXHNPUylcXHMoW1xcZC5dKykvKSx2PXQubWF0Y2goL1BsYXlCb29rLykseT10Lm1hdGNoKC9DaHJvbWVcXC8oW1xcZC5dKykvKXx8dC5tYXRjaCgvQ3JpT1NcXC8oW1xcZC5dKykvKSxiPXQubWF0Y2goL0ZpcmVmb3hcXC8oW1xcZC5dKykvKSx3PXQubWF0Y2goL01TSUVcXHMoW1xcZC5dKykvKXx8dC5tYXRjaCgvVHJpZGVudFxcL1tcXGRdKD89W15cXD9dKykuKnJ2OihbMC05Ll0uKS8pLHg9IXkmJnQubWF0Y2goLyhpUGhvbmV8aVBvZHxpUGFkKS4qQXBwbGVXZWJLaXQoPyEuKlNhZmFyaSkvKSxUPXh8fHQubWF0Y2goL1ZlcnNpb25cXC8oW1xcZC5dKykoW15TXShTYWZhcmkpfFteTV0qKE1vYmlsZSlbXlNdKihTYWZhcmkpKS8pOyhuLndlYmtpdD0hIWkpJiYobi52ZXJzaW9uPWlbMV0pLHImJihlLmFuZHJvaWQ9ITAsZS52ZXJzaW9uPXJbMl0pLHUmJiFzJiYoZS5pb3M9ZS5pcGhvbmU9ITAsZS52ZXJzaW9uPXVbMl0ucmVwbGFjZSgvXy9nLFwiLlwiKSksYSYmKGUuaW9zPWUuaXBhZD0hMCxlLnZlcnNpb249YVsyXS5yZXBsYWNlKC9fL2csXCIuXCIpKSxzJiYoZS5pb3M9ZS5pcG9kPSEwLGUudmVyc2lvbj1zWzNdP3NbM10ucmVwbGFjZSgvXy9nLFwiLlwiKTpudWxsKSxjJiYoZS53cD0hMCxlLnZlcnNpb249Y1sxXSksZiYmKGUud2Vib3M9ITAsZS52ZXJzaW9uPWZbMl0pLGwmJihlLnRvdWNocGFkPSEwKSxkJiYoZS5ibGFja2JlcnJ5PSEwLGUudmVyc2lvbj1kWzJdKSxtJiYoZS5iYjEwPSEwLGUudmVyc2lvbj1tWzJdKSxnJiYoZS5yaW10YWJsZXRvcz0hMCxlLnZlcnNpb249Z1syXSksdiYmKG4ucGxheWJvb2s9ITApLGgmJihlLmtpbmRsZT0hMCxlLnZlcnNpb249aFsxXSkscCYmKG4uc2lsaz0hMCxuLnZlcnNpb249cFsxXSksIXAmJmUuYW5kcm9pZCYmdC5tYXRjaCgvS2luZGxlIEZpcmUvKSYmKG4uc2lsaz0hMCkseSYmKG4uY2hyb21lPSEwLG4udmVyc2lvbj15WzFdKSxiJiYobi5maXJlZm94PSEwLG4udmVyc2lvbj1iWzFdKSx3JiYobi5pZT0hMCxuLnZlcnNpb249d1sxXSksVCYmKG98fGUuaW9zKSYmKG4uc2FmYXJpPSEwLG8mJihuLnZlcnNpb249VFsxXSkpLHgmJihuLndlYnZpZXc9ITApLGUudGFibGV0PSEhKGF8fHZ8fHImJiF0Lm1hdGNoKC9Nb2JpbGUvKXx8YiYmdC5tYXRjaCgvVGFibGV0Lyl8fHcmJiF0Lm1hdGNoKC9QaG9uZS8pJiZ0Lm1hdGNoKC9Ub3VjaC8pKSxlLnBob25lPSEoZS50YWJsZXR8fGUuaXBvZHx8IShyfHx1fHxmfHxkfHxtfHx5JiZ0Lm1hdGNoKC9BbmRyb2lkLyl8fHkmJnQubWF0Y2goL0NyaU9TXFwvKFtcXGQuXSspLyl8fGImJnQubWF0Y2goL01vYmlsZS8pfHx3JiZ0Lm1hdGNoKC9Ub3VjaC8pKSl9ZS5jYWxsKHQsbmF2aWdhdG9yLnVzZXJBZ2VudCksdC5fX2RldGVjdD1lfShaZXB0byksZnVuY3Rpb24odCxlKXtmdW5jdGlvbiB3KHQpe3JldHVybiB0LnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pLyxcIiQxLSQyXCIpLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24geCh0KXtyZXR1cm4gaT9pK3Q6dC50b0xvd2VyQ2FzZSgpfXZhciBpLGMsbCxoLHAsZCxtLGcsdix5LG49XCJcIixhPXtXZWJraXQ6XCJ3ZWJraXRcIixNb3o6XCJcIixPOlwib1wifSxzPXdpbmRvdy5kb2N1bWVudCx1PXMuY3JlYXRlRWxlbWVudChcImRpdlwiKSxmPS9eKCh0cmFuc2xhdGV8cm90YXRlfHNjYWxlKShYfFl8WnwzZCk/fG1hdHJpeCgzZCk/fHBlcnNwZWN0aXZlfHNrZXcoWHxZKT8pJC9pLGI9e307dC5lYWNoKGEsZnVuY3Rpb24odCxyKXtyZXR1cm4gdS5zdHlsZVt0K1wiVHJhbnNpdGlvblByb3BlcnR5XCJdIT09ZT8obj1cIi1cIit0LnRvTG93ZXJDYXNlKCkrXCItXCIsaT1yLCExKTp2b2lkIDB9KSxjPW4rXCJ0cmFuc2Zvcm1cIixiW2w9bitcInRyYW5zaXRpb24tcHJvcGVydHlcIl09YltoPW4rXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCJdPWJbZD1uK1widHJhbnNpdGlvbi1kZWxheVwiXT1iW3A9bitcInRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uXCJdPWJbbT1uK1wiYW5pbWF0aW9uLW5hbWVcIl09YltnPW4rXCJhbmltYXRpb24tZHVyYXRpb25cIl09Ylt5PW4rXCJhbmltYXRpb24tZGVsYXlcIl09Ylt2PW4rXCJhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uXCJdPVwiXCIsdC5meD17b2ZmOmk9PT1lJiZ1LnN0eWxlLnRyYW5zaXRpb25Qcm9wZXJ0eT09PWUsc3BlZWRzOntfZGVmYXVsdDo0MDAsZmFzdDoyMDAsc2xvdzo2MDB9LGNzc1ByZWZpeDpuLHRyYW5zaXRpb25FbmQ6eChcIlRyYW5zaXRpb25FbmRcIiksYW5pbWF0aW9uRW5kOngoXCJBbmltYXRpb25FbmRcIil9LHQuZm4uYW5pbWF0ZT1mdW5jdGlvbihuLGkscixvLGEpe3JldHVybiB0LmlzRnVuY3Rpb24oaSkmJihvPWkscj1lLGk9ZSksdC5pc0Z1bmN0aW9uKHIpJiYobz1yLHI9ZSksdC5pc1BsYWluT2JqZWN0KGkpJiYocj1pLmVhc2luZyxvPWkuY29tcGxldGUsYT1pLmRlbGF5LGk9aS5kdXJhdGlvbiksaSYmKGk9KFwibnVtYmVyXCI9PXR5cGVvZiBpP2k6dC5meC5zcGVlZHNbaV18fHQuZnguc3BlZWRzLl9kZWZhdWx0KS8xZTMpLGEmJihhPXBhcnNlRmxvYXQoYSkvMWUzKSx0aGlzLmFuaW0obixpLHIsbyxhKX0sdC5mbi5hbmltPWZ1bmN0aW9uKG4saSxyLG8sYSl7dmFyIHMseCxTLHU9e30sVD1cIlwiLEU9dGhpcyxqPXQuZngudHJhbnNpdGlvbkVuZCxQPSExO2lmKGk9PT1lJiYoaT10LmZ4LnNwZWVkcy5fZGVmYXVsdC8xZTMpLGE9PT1lJiYoYT0wKSx0LmZ4Lm9mZiYmKGk9MCksXCJzdHJpbmdcIj09dHlwZW9mIG4pdVttXT1uLHVbZ109aStcInNcIix1W3ldPWErXCJzXCIsdVt2XT1yfHxcImxpbmVhclwiLGo9dC5meC5hbmltYXRpb25FbmQ7ZWxzZXt4PVtdO2ZvcihzIGluIG4pZi50ZXN0KHMpP1QrPXMrXCIoXCIrbltzXStcIikgXCI6KHVbc109bltzXSx4LnB1c2godyhzKSkpO1QmJih1W2NdPVQseC5wdXNoKGMpKSxpPjAmJlwib2JqZWN0XCI9PXR5cGVvZiBuJiYodVtsXT14LmpvaW4oXCIsIFwiKSx1W2hdPWkrXCJzXCIsdVtkXT1hK1wic1wiLHVbcF09cnx8XCJsaW5lYXJcIil9cmV0dXJuIFM9ZnVuY3Rpb24oZSl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGUpe2lmKGUudGFyZ2V0IT09ZS5jdXJyZW50VGFyZ2V0KXJldHVybjt0KGUudGFyZ2V0KS51bmJpbmQoaixTKX1lbHNlIHQodGhpcykudW5iaW5kKGosUyk7UD0hMCx0KHRoaXMpLmNzcyhiKSxvJiZvLmNhbGwodGhpcyl9LGk+MCYmKHRoaXMuYmluZChqLFMpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtQfHxTLmNhbGwoRSl9LDFlMyooaSthKSsyNSkpLHRoaXMuc2l6ZSgpJiZ0aGlzLmdldCgwKS5jbGllbnRMZWZ0LHRoaXMuY3NzKHUpLDA+PWkmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXtFLmVhY2goZnVuY3Rpb24oKXtTLmNhbGwodGhpcyl9KX0sMCksdGhpc30sdT1udWxsfShaZXB0byksZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBzKG4saSxyLG8sYSl7XCJmdW5jdGlvblwiIT10eXBlb2YgaXx8YXx8KGE9aSxpPWUpO3ZhciBzPXtvcGFjaXR5OnJ9O3JldHVybiBvJiYocy5zY2FsZT1vLG4uY3NzKHQuZnguY3NzUHJlZml4K1widHJhbnNmb3JtLW9yaWdpblwiLFwiMCAwXCIpKSxuLmFuaW1hdGUocyxpLG51bGwsYSl9ZnVuY3Rpb24gdShlLG4saSxyKXtyZXR1cm4gcyhlLG4sMCxpLGZ1bmN0aW9uKCl7by5jYWxsKHQodGhpcykpLHImJnIuY2FsbCh0aGlzKX0pfXZhciBuPXdpbmRvdy5kb2N1bWVudCxyPShuLmRvY3VtZW50RWxlbWVudCx0LmZuLnNob3cpLG89dC5mbi5oaWRlLGE9dC5mbi50b2dnbGU7dC5mbi5zaG93PWZ1bmN0aW9uKHQsbil7cmV0dXJuIHIuY2FsbCh0aGlzKSx0PT09ZT90PTA6dGhpcy5jc3MoXCJvcGFjaXR5XCIsMCkscyh0aGlzLHQsMSxcIjEsMVwiLG4pfSx0LmZuLmhpZGU9ZnVuY3Rpb24odCxuKXtyZXR1cm4gdD09PWU/by5jYWxsKHRoaXMpOnUodGhpcyx0LFwiMCwwXCIsbil9LHQuZm4udG9nZ2xlPWZ1bmN0aW9uKG4saSl7cmV0dXJuIG49PT1lfHxcImJvb2xlYW5cIj09dHlwZW9mIG4/YS5jYWxsKHRoaXMsbik6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtlW1wibm9uZVwiPT1lLmNzcyhcImRpc3BsYXlcIik/XCJzaG93XCI6XCJoaWRlXCJdKG4saSl9KX0sdC5mbi5mYWRlVG89ZnVuY3Rpb24odCxlLG4pe3JldHVybiBzKHRoaXMsdCxlLG51bGwsbil9LHQuZm4uZmFkZUluPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5jc3MoXCJvcGFjaXR5XCIpO3JldHVybiBuPjA/dGhpcy5jc3MoXCJvcGFjaXR5XCIsMCk6bj0xLHIuY2FsbCh0aGlzKS5mYWRlVG8odCxuLGUpfSx0LmZuLmZhZGVPdXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0aGlzLHQsbnVsbCxlKX0sdC5mbi5mYWRlVG9nZ2xlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBpPXQodGhpcyk7aVswPT1pLmNzcyhcIm9wYWNpdHlcIil8fFwibm9uZVwiPT1pLmNzcyhcImRpc3BsYXlcIik/XCJmYWRlSW5cIjpcImZhZGVPdXRcIl0oZSxuKX0pfX0oWmVwdG8pLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIHUodCxlLG4saSl7cmV0dXJuIE1hdGguYWJzKHQtZSk+PU1hdGguYWJzKG4taSk/dC1lPjA/XCJMZWZ0XCI6XCJSaWdodFwiOm4taT4wP1wiVXBcIjpcIkRvd25cIn1mdW5jdGlvbiBmKCl7bz1udWxsLGUubGFzdCYmKGUuZWwudHJpZ2dlcihcImxvbmdUYXBcIiksZT17fSl9ZnVuY3Rpb24gYygpe28mJmNsZWFyVGltZW91dChvKSxvPW51bGx9ZnVuY3Rpb24gbCgpe24mJmNsZWFyVGltZW91dChuKSxpJiZjbGVhclRpbWVvdXQoaSksciYmY2xlYXJUaW1lb3V0KHIpLG8mJmNsZWFyVGltZW91dChvKSxuPWk9cj1vPW51bGwsZT17fX1mdW5jdGlvbiBoKHQpe3JldHVybihcInRvdWNoXCI9PXQucG9pbnRlclR5cGV8fHQucG9pbnRlclR5cGU9PXQuTVNQT0lOVEVSX1RZUEVfVE9VQ0gpJiZ0LmlzUHJpbWFyeX1mdW5jdGlvbiBwKHQsZSl7cmV0dXJuIHQudHlwZT09XCJwb2ludGVyXCIrZXx8dC50eXBlLnRvTG93ZXJDYXNlKCk9PVwibXNwb2ludGVyXCIrZX12YXIgbixpLHIsbyxzLGU9e30sYT03NTA7dChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXt2YXIgZCxtLHksYixnPTAsdj0wO1wiTVNHZXN0dXJlXCJpbiB3aW5kb3cmJihzPW5ldyBNU0dlc3R1cmUscy50YXJnZXQ9ZG9jdW1lbnQuYm9keSksdChkb2N1bWVudCkuYmluZChcIk1TR2VzdHVyZUVuZFwiLGZ1bmN0aW9uKHQpe3ZhciBuPXQudmVsb2NpdHlYPjE/XCJSaWdodFwiOnQudmVsb2NpdHlYPC0xP1wiTGVmdFwiOnQudmVsb2NpdHlZPjE/XCJEb3duXCI6dC52ZWxvY2l0eVk8LTE/XCJVcFwiOm51bGw7biYmKGUuZWwudHJpZ2dlcihcInN3aXBlXCIpLGUuZWwudHJpZ2dlcihcInN3aXBlXCIrbikpfSkub24oXCJ0b3VjaHN0YXJ0IE1TUG9pbnRlckRvd24gcG9pbnRlcmRvd25cIixmdW5jdGlvbihpKXsoIShiPXAoaSxcImRvd25cIikpfHxoKGkpKSYmKHk9Yj9pOmkudG91Y2hlc1swXSxpLnRvdWNoZXMmJjE9PT1pLnRvdWNoZXMubGVuZ3RoJiZlLngyJiYoZS54Mj12b2lkIDAsZS55Mj12b2lkIDApLGQ9RGF0ZS5ub3coKSxtPWQtKGUubGFzdHx8ZCksZS5lbD10KFwidGFnTmFtZVwiaW4geS50YXJnZXQ/eS50YXJnZXQ6eS50YXJnZXQucGFyZW50Tm9kZSksbiYmY2xlYXJUaW1lb3V0KG4pLGUueDE9eS5wYWdlWCxlLnkxPXkucGFnZVksbT4wJiYyNTA+PW0mJihlLmlzRG91YmxlVGFwPSEwKSxlLmxhc3Q9ZCxvPXNldFRpbWVvdXQoZixhKSxzJiZiJiZzLmFkZFBvaW50ZXIoaS5wb2ludGVySWQpKX0pLm9uKFwidG91Y2htb3ZlIE1TUG9pbnRlck1vdmUgcG9pbnRlcm1vdmVcIixmdW5jdGlvbih0KXsoIShiPXAodCxcIm1vdmVcIikpfHxoKHQpKSYmKHk9Yj90OnQudG91Y2hlc1swXSxjKCksZS54Mj15LnBhZ2VYLGUueTI9eS5wYWdlWSxnKz1NYXRoLmFicyhlLngxLWUueDIpLHYrPU1hdGguYWJzKGUueTEtZS55MikpfSkub24oXCJ0b3VjaGVuZCBNU1BvaW50ZXJVcCBwb2ludGVydXBcIixmdW5jdGlvbihvKXsoIShiPXAobyxcInVwXCIpKXx8aChvKSkmJihjKCksZS54MiYmTWF0aC5hYnMoZS54MS1lLngyKT4zMHx8ZS55MiYmTWF0aC5hYnMoZS55MS1lLnkyKT4zMD9yPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLmVsLnRyaWdnZXIoXCJzd2lwZVwiKSxlLmVsLnRyaWdnZXIoXCJzd2lwZVwiK3UoZS54MSxlLngyLGUueTEsZS55MikpLGU9e319LDApOlwibGFzdFwiaW4gZSYmKDMwPmcmJjMwPnY/aT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGk9dC5FdmVudChcInRhcFwiKTtpLmNhbmNlbFRvdWNoPWwsZS5lbC50cmlnZ2VyKGkpLGUuaXNEb3VibGVUYXA/KGUuZWwmJmUuZWwudHJpZ2dlcihcImRvdWJsZVRhcFwiKSxlPXt9KTpuPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtuPW51bGwsZS5lbCYmZS5lbC50cmlnZ2VyKFwic2luZ2xlVGFwXCIpLGU9e319LDI1MCl9LDApOmU9e30pLGc9dj0wKX0pLm9uKFwidG91Y2hjYW5jZWwgTVNQb2ludGVyQ2FuY2VsIHBvaW50ZXJjYW5jZWxcIixsKSx0KHdpbmRvdykub24oXCJzY3JvbGxcIixsKX0pLFtcInN3aXBlXCIsXCJzd2lwZUxlZnRcIixcInN3aXBlUmlnaHRcIixcInN3aXBlVXBcIixcInN3aXBlRG93blwiLFwiZG91YmxlVGFwXCIsXCJ0YXBcIixcInNpbmdsZVRhcFwiLFwibG9uZ1RhcFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3QuZm5bZV09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMub24oZSx0KX19KX0oWmVwdG8pLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGkodCl7cmV0dXJuXCJ0YWdOYW1lXCJpbiB0P3Q6dC5wYXJlbnROb2RlfWlmKHQub3MuaW9zKXt2YXIgbixlPXt9O3QoZG9jdW1lbnQpLmJpbmQoXCJnZXN0dXJlc3RhcnRcIixmdW5jdGlvbih0KXt7dmFyIHI9RGF0ZS5ub3coKTtcclxuICAgIHItKGUubGFzdHx8cil9ZS50YXJnZXQ9aSh0LnRhcmdldCksbiYmY2xlYXJUaW1lb3V0KG4pLGUuZTE9dC5zY2FsZSxlLmxhc3Q9cn0pLmJpbmQoXCJnZXN0dXJlY2hhbmdlXCIsZnVuY3Rpb24odCl7ZS5lMj10LnNjYWxlfSkuYmluZChcImdlc3R1cmVlbmRcIixmdW5jdGlvbigpe2UuZTI+MD8oMCE9TWF0aC5hYnMoZS5lMS1lLmUyKSYmdChlLnRhcmdldCkudHJpZ2dlcihcInBpbmNoXCIpJiZ0KGUudGFyZ2V0KS50cmlnZ2VyKFwicGluY2hcIisoZS5lMS1lLmUyPjA/XCJJblwiOlwiT3V0XCIpKSxlLmUxPWUuZTI9ZS5sYXN0PTApOlwibGFzdFwiaW4gZSYmKGU9e30pfSksW1wicGluY2hcIixcInBpbmNoSW5cIixcInBpbmNoT3V0XCJdLmZvckVhY2goZnVuY3Rpb24oZSl7dC5mbltlXT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5iaW5kKGUsdCl9fSl9fShaZXB0byk7LyogIHx4R3YwMHw3N2UwNzdmN2I3YzEzMDg2YWY2MWQyMGUwYTU5ZDgxOCAqL1xyXG4iLCJcclxuaW1wb3J0ICcuL2pzL3plcHRvLmpzJ1xyXG5pbXBvcnQgJy4vanMvaW5kZXguanMnXHJcbmltcG9ydCBlczZfdGVzdCBmcm9tICcuL2pzL2VzNl90ZXN0LmpzJ1xyXG5pbXBvcnQgJy4vY3NzL2Nzcy5jc3MnXHJcbmVzNl90ZXN0LnRlc3QoKVxyXG5cclxuXHJcblxyXG5jb25zb2xlLmxvZygnaGVsbG8gd29ybGQnKVxyXG4iXSwic291cmNlUm9vdCI6IiJ9